{"componentChunkName":"component---src-templates-blog-post-js","path":"/actor-line-trace/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"03fc56eb-efda-501c-8133-e80065dd72bf","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/ActorLineTrace For this tutorial we are using the standard first person C++ template withâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/ActorLineTrace\">https://github.com/Harrison1/unrealcpp/tree/master/ActorLineTrace</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content. If you don't know how to add a new actor class to your project, please visit the <a href=\"/add-actor-class\">Add C++ Actor Class</a> post.</em></p>\n<p>Create a new actor, for this example we will call our actor <code>ActorLineTrace</code>.</p>\n<p>We don't have to do anything in the header file. Just in case, below is the header file was created by default.</p>\n<h3>ActorLineTrace.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ActorLineTrace.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> AActorLineTrace <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">AActorLineTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To help us visualize the line trace we are going to include the <code>DrawDebugHelpers</code> script. This will allow us to draw a line highlighting the line trace. We are also going to include the <code>ConstructorHelpers.h</code> to immediately add a mesh to our actor for a visual representation. It's typically preferred to add a mesh in the editor without the help of <code>ConstructoHelpers.h</code>, but we should continue trying new things in C++.</p>\n<h4>include DrawDebugHelpers and ConstructorHelpers</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ActorLineTrace.h\"</span></span>\n<span class=\"token comment\">// add these scripts to use their functions</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ConstructorHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span></code></pre></div>\n<p>We add a cube to the actor by creating a <code>DefaultSubobject</code> of <code>UStaticMeshComponent</code>. We then make our new cube the root component of our actor. We programmatically add a mesh to to our actor by calling <code>FObjectFinder</code> from <code>ConstructorHelpers</code>. In our <code>FObjectFinder</code> we provide the path to our mesh. From here we need to check if we successfully got the mesh. If we successfully got the mesh we then set the actors <code>StaticMesh</code>, <code>RelativeLocation</code>, and <code>Scale</code>. Below is the code we put in our actor's init function.</p>\n<h4>use constructor to add mesh to actor</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">AActorLineTrace</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AActorLineTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// add cube to root</span>\n    UStaticMeshComponent<span class=\"token operator\">*</span> Cube <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VisualRepresentation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Cube<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">CubeAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Shapes/Shape_Cube.Shape_Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CubeAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Cube<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>CubeAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Cube<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Cube<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// add another component in the editor to the actor to overlap with the line trace to get the event to fire</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, on our actor's tick function we want to draw the line trace and see if it hits anything. For this example, we will check if it any other objects inside the same actor. Let's create variables for our <code>HitResult</code> and our <code>StartingPosition</code></p>\n<h4>first two variables</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AActorLineTrace</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFHitResult OutHit<span class=\"token punctuation\">;</span>\n\tFVector Start <span class=\"token operator\">=</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The start location is vector which means it has X,Y,Z variables. I want to move the line trace up more towards the center of the mesh and I want to move it away from the mesh to it doesn't collide with itself.</p>\n<h4>position line trace</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AActorLineTrace</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFHitResult OutHit<span class=\"token punctuation\">;</span>\n\tFVector Start <span class=\"token operator\">=</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tStart<span class=\"token punctuation\">.</span>Z <span class=\"token operator\">+=</span> <span class=\"token number\">50.f</span><span class=\"token punctuation\">;</span>\n\tStart<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+=</span> <span class=\"token number\">200.f</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>After that let's get the forward vector of mesh by using <code>GetActorForwardVector()</code> to make sure the line trace is moving out from the front of the mesh. We will then make and <code>End</code> variable to tell the line trace where to end. In this example the line trace will start 50 units above and 200 units forward and will end 500 units from it starting point. Also, we create collision param variable for our line trace function.</p>\n<h4>forward vector, end, and collision params</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AActorLineTrace</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFHitResult OutHit<span class=\"token punctuation\">;</span>\n\tFVector Start <span class=\"token operator\">=</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tStart<span class=\"token punctuation\">.</span>Z <span class=\"token operator\">+=</span> <span class=\"token number\">50.f</span><span class=\"token punctuation\">;</span>\n\tStart<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+=</span> <span class=\"token number\">200.f</span><span class=\"token punctuation\">;</span>\n\n\tFVector ForwardVector <span class=\"token operator\">=</span> <span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFVector End <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ForwardVector <span class=\"token operator\">*</span> <span class=\"token number\">500.f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFCollisionQueryParams CollisionParams<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>While developing we want to see our line trace. Using the variables we made above we'll use our <code>DrawDebugLine</code> function to draw a green line. If the line trace touches any other object inside the same actor, we will print a message to the screen.</p>\n<h4>DrawDebugLine, check hit result, and print message to screen</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AActorLineTrace</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFHitResult OutHit<span class=\"token punctuation\">;</span>\n\tFVector Start <span class=\"token operator\">=</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tStart<span class=\"token punctuation\">.</span>Z <span class=\"token operator\">+=</span> <span class=\"token number\">50.f</span><span class=\"token punctuation\">;</span>\n\tStart<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+=</span> <span class=\"token number\">200.f</span><span class=\"token punctuation\">;</span>\n\n\tFVector ForwardVector <span class=\"token operator\">=</span> <span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFVector End <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ForwardVector <span class=\"token operator\">*</span> <span class=\"token number\">500.f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFCollisionQueryParams CollisionParams<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">DrawDebugLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Start<span class=\"token punctuation\">,</span> End<span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Green<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ActorLineTraceSingle</span><span class=\"token punctuation\">(</span>OutHit<span class=\"token punctuation\">,</span> Start<span class=\"token punctuation\">,</span> End<span class=\"token punctuation\">,</span> ECC_WorldStatic<span class=\"token punctuation\">,</span> CollisionParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tGEngine<span class=\"token operator\">-></span><span class=\"token function\">AddOnScreenDebugMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Green<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Component Being Hit is: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>OutHit<span class=\"token punctuation\">.</span><span class=\"token function\">GetComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Below is the final <code>.cpp</code> file</p>\n<h3>ActorLinetrace.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ActorLineTrace.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ConstructorHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span>\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">AActorLineTrace</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AActorLineTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// add cube to root</span>\n    UStaticMeshComponent<span class=\"token operator\">*</span> Cube <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VisualRepresentation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Cube<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">CubeAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Shapes/Shape_Cube.Shape_Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CubeAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Cube<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>CubeAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Cube<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Cube<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// add another component in the editor to the actor to overlap with the line trace to get the event to fire</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called when the game starts or when spawned</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AActorLineTrace</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AActorLineTrace</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFHitResult OutHit<span class=\"token punctuation\">;</span>\n\tFVector Start <span class=\"token operator\">=</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tStart<span class=\"token punctuation\">.</span>Z <span class=\"token operator\">+=</span> <span class=\"token number\">50.f</span><span class=\"token punctuation\">;</span>\n\tStart<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+=</span> <span class=\"token number\">200.f</span><span class=\"token punctuation\">;</span>\n\n\tFVector ForwardVector <span class=\"token operator\">=</span> <span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFVector End <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ForwardVector <span class=\"token operator\">*</span> <span class=\"token number\">500.f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFCollisionQueryParams CollisionParams<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">DrawDebugLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Start<span class=\"token punctuation\">,</span> End<span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Green<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ActorLineTraceSingle</span><span class=\"token punctuation\">(</span>OutHit<span class=\"token punctuation\">,</span> Start<span class=\"token punctuation\">,</span> End<span class=\"token punctuation\">,</span> ECC_WorldStatic<span class=\"token punctuation\">,</span> CollisionParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tGEngine<span class=\"token operator\">-></span><span class=\"token function\">AddOnScreenDebugMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Green<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Component Being Hit is: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>OutHit<span class=\"token punctuation\">.</span><span class=\"token function\">GetComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Actor Line Trace","date":"December 01, 2017","description":"How to draw a line trace from an actor","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/actor-line-trace_ntz948.jpg","tags":["intermediate","line trace"],"video":"Ii0rw9p6hbI","uev":"4.18.3"}},"previous":{"fields":{"slug":"/sweep-multi-line-trace/"},"frontmatter":{"title":"Sweep Multi Line Trace"}},"next":{"fields":{"slug":"/add-radial-impulse-to-actor/"},"frontmatter":{"title":"Add Radial Impulse to Actor"}}},"pageContext":{"id":"03fc56eb-efda-501c-8133-e80065dd72bf","previousPostId":"ff2df7f8-e507-5022-b5e6-ff15ffba2b9c","nextPostId":"deaeda94-fa76-5293-8f21-379da4645c28"}},"staticQueryHashes":[],"slicesMap":{}}