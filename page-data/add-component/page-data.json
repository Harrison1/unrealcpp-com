{"componentChunkName":"component---src-templates-blog-post-js","path":"/add-component/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"0fd733ab-7001-5d5a-a295-993d206f03ed","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/AddBillboardComp For this tutorial we are using the standard first person C++ template withâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/AddBillboardComp\">https://github.com/Harrison1/unrealcpp/tree/master/AddBillboardComp</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content. If you don't know how to add a new actor class to your project, please visit the <a href=\"/add-actor-class\">Add C++ Actor Class</a> post.</em></p>\n<p>In this tutorial we are going to add a <code>Billboard Component</code> to our actor. Adding components can also be easily added in the UE4 editor, but let's go ahead and do it programmatically.</p>\n<p>First we'll create a new actor named <code>AddBillboardComp</code>. Remember, if you call your actor something different, be sure to change the name everywhere in the header and cpp file.</p>\n<p>In the header file we will create one variable that inherits from the <code>UBillboardComponent</code> class. This will allow us to add a billboard component and use it's attributes.</p>\n<h3>AddBillboardComp.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"AddBillboardComp.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> AAddBillboardComp <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">AAddBillboardComp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare point light comp</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UBillboardComponent</span><span class=\"token operator\">*</span> MyBillboardComp<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the <code>.cpp</code> file we are going to add the <code>Billboard Component</code> to our actor. This process is very similar to adding any component to an actor.</p>\n<p>If you want to use any component class with you actor, you have to to include the component header file in the <code>.cpp</code> file. So, let's add the <code>Billboard Component</code> file to our code. Add all necessary scripts under the named components header include call.</p>\n<h4>Add BillboardComponent.h</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/BillboardComponent.h\"</span></span></code></pre></div>\n<p>For this tutorial we are going to add the component in the actor's init function. This will ensure the component is added to the actor whenever it is added to a scene.</p>\n<h4>Create a default sub object of the billboard component</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">MyBillboardComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UBillboardComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Root Billboard Comp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>For this tutorial let's make it so we can see the billboard sprite in game</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">MyBillboardComp<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Make the billboard component the root component</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">RootComponent <span class=\"token operator\">=</span> MyBillboardComp<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Below is the final <code>.cpp</code> file.</p>\n<h3>AddBillboardComp.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"AddBillboardComp.h\"</span></span>\n<span class=\"token comment\">// include billboard comp</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/BillboardComponent.h\"</span></span>\n\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">AAddBillboardComp</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AAddBillboardComp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tMyBillboardComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UBillboardComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Root Billboard Comp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMyBillboardComp<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tRootComponent <span class=\"token operator\">=</span> MyBillboardComp<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called when the game starts or when spawned</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AAddBillboardComp</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AAddBillboardComp</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Add Component","date":"November 30, 2017","description":"In this tutorial we are going to programmatically add a Billboard Component to our actor.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/add-billboard-component_yhhmzf.jpg","tags":["beginner"],"video":"iHOAZUHYVq0","uev":"4.18.3"}},"previous":{"fields":{"slug":"/add-mesh-from-file/"},"frontmatter":{"title":"Add Mesh From File"}},"next":{"fields":{"slug":"/debug-logging/"},"frontmatter":{"title":"Debug Logging"}}},"pageContext":{"id":"0fd733ab-7001-5d5a-a295-993d206f03ed","previousPostId":"beb2ffca-1e9a-529b-9975-06bab0e67c77","nextPostId":"b9e42882-2302-5604-82de-0aab1fff8d79"}},"staticQueryHashes":[],"slicesMap":{}}