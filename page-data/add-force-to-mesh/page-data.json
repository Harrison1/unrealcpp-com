{"componentChunkName":"component---src-templates-blog-post-js","path":"/add-force-to-mesh/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"5f2eac04-d616-5b7a-920b-1e83123a7ffc","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/AddForceOnFire For this tutorial we are using the standard first person C++ template withâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/AddForceOnFire\">https://github.com/Harrison1/unrealcpp/tree/master/AddForceOnFire</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content.</em></p>\n<p>In this tutorial we will add force to an actor each time we shoot the gun. All of our logic is going to be put inside the Character's <code>.cpp</code> file.</p>\n<p>First, include <code>DrawDebugHelpers.h</code> at the top of the script so we can visualize the line trace.</p>\n<h4>include DrawDebugHelpers</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// include draw debug helpers header file</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span></code></pre></div>\n<p>We are going to shoot out the line trace every time we fire the gun. Find the <code>OnFire()</code> method inside the character's <code>.cpp</code> file and the first thing we want to do is delete the projectile code. For this tutorial we will not be using the below code. Your code might be slightly different due to project naming conventions.</p>\n<h4>delete this code</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// try and fire a projectile</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ProjectileClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    UWorld<span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> World <span class=\"token operator\">=</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>World <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> FRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// MuzzleOffset is in camera space, so transform it to world space before offsetting from the character location to find the final muzzle position</span>\n        <span class=\"token keyword\">const</span> FVector SpawnLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//Set Spawn Collision Handling Override</span>\n        FActorSpawnParameters ActorSpawnParams<span class=\"token punctuation\">;</span>\n        ActorSpawnParams<span class=\"token punctuation\">.</span>SpawnCollisionHandlingOverride <span class=\"token operator\">=</span> ESpawnActorCollisionHandlingMethod<span class=\"token double-colon punctuation\">::</span>AdjustIfPossibleButDontSpawnIfColliding<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// spawn the projectile at the muzzle</span>\n        World<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">SpawnActor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPProjectile<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>ProjectileClass<span class=\"token punctuation\">,</span> SpawnLocation<span class=\"token punctuation\">,</span> SpawnRotation<span class=\"token punctuation\">,</span> ActorSpawnParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, Create a <code>FHitResult</code> variable to see if our line trace hits anything. In this example our line trace will start from the Character's gun mesh. To get the Gun's location we do <code>FP_Gun->GetComponentLocation()</code>. We always want the forward vector of where the player is looking so we get the forward vector from the camera using <code>FirstPersonCameraComponent->GetForwardVector()</code>. We are going to End the line trace <code>2000.0f</code> unreal units from the the start.</p>\n<h4>first set of variables</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    FHitResult Hit<span class=\"token punctuation\">;</span>\n    FVector CameraForward <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> LineLength <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next we need to grab the control rotation from the actor character using the <code>GetControlRotation()</code>. We will use this <code>FRotator</code> variable when we set our <code>StartLocation</code>. The <code>StartLocation</code> is an <code>FVector</code> point in front of the gun. The same is used in the projectile code that we deleted earlier. Next, create the <code>EndLocation</code> which is the <code>StartLocatoin</code> plus the Camera Forward Vector multiplied by <code>LineLength</code>.</p>\n<h4>spawn rotation and start location</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    FRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFVector StartLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    FVector EndLocation <span class=\"token operator\">=</span> StartLocation <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> LineLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, create a <code>FCollisionQueryParams</code> variable to handle collision events in the line trace. Add the debug line to visualize the line trace by using <code>DrawDebugLine(GetWorld(), StartLocation, EndLocation, FColor::Red, true, -1, 0, 1.f);</code>. Then, add the line trace with <code>GetWorld()->LineTraceSingleByChannel(Hit, StartLocation, EndLocation, ECollisionChannel::ECC_PhysicsBody, CollisionParameters);</code> and if we successfully hit something our <code>FHitResult</code> will get a successful actor.</p>\n<h4>Collision Parameters, Line Trace, Debug Line</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\tFCollisionQueryParams CollisionParameters<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">LineTraceSingleByChannel</span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">,</span> StartLocation<span class=\"token punctuation\">,</span> EndLocation<span class=\"token punctuation\">,</span> ECollisionChannel<span class=\"token double-colon punctuation\">::</span>ECC_PhysicsBody<span class=\"token punctuation\">,</span> CollisionParameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DrawDebugLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> StartLocation<span class=\"token punctuation\">,</span> EndLocation<span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Red<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now let's create an <code>if</code> statement that will trigger true if <code>Hit.GetActor()</code> returns <code>true</code>. If we are successful, then we must check if the <strong>Actor's</strong> root component is movable. If it is not movable then we cannot add force to it. If the root component is movable we will then cast the <strong>Actor's</strong> root component to a new variable called <code>MeshRootComp</code>. Finally we add force to <code>MeshRootComp</code> with <code>AddForce(CameraForward*100000*MeshRootComp->GetMass());</code>. Feel free to change the numbers to anything you like.</p>\n<h4>Conditional Statement</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">IsRootComponentMovable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t\tUStaticMeshComponent<span class=\"token operator\">*</span> MeshRootComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetRootComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tMeshRootComp<span class=\"token operator\">-></span><span class=\"token function\">AddForce</span><span class=\"token punctuation\">(</span>CameraForward<span class=\"token operator\">*</span><span class=\"token number\">100000</span><span class=\"token operator\">*</span>MeshRootComp<span class=\"token operator\">-></span><span class=\"token function\">GetMass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Below is the final <code>OnFire()</code> code with some extra debug logging methods. Now, go back inside the editor, click compile, and you should be blowing stuff around the game world. Actors must have their <strong>Mobility</strong> set to Movable and their physics must also be turned on to accept the <code>AddForce</code> method.</p>\n<h4>OnFire() Method</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">//Hit contains information about what the line trace hit.</span>\n\tFHitResult Hit<span class=\"token punctuation\">;</span>\n\tFVector CameraForward <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//The length of the line trace in units.</span>\n\t<span class=\"token comment\">//For more flexibility you can expose a public variable in the editor</span>\n\t<span class=\"token keyword\">float</span> LineLength <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n\n\tFRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFVector StartLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// log helpful information</span>\n\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Start Location: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>StartLocation<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Spawn Rotation: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Forward Vector: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//The EndLocation of the line trace</span>\n\tFVector EndLocation <span class=\"token operator\">=</span> StartLocation <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> LineLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//Collision parameters. The following syntax means that we don't want the trace to be complex</span>\n\tFCollisionQueryParams CollisionParameters<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">LineTraceSingleByChannel</span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">,</span> StartLocation<span class=\"token punctuation\">,</span> EndLocation<span class=\"token punctuation\">,</span> ECollisionChannel<span class=\"token double-colon punctuation\">::</span>ECC_PhysicsBody<span class=\"token punctuation\">,</span> CollisionParameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//DrawDebugLine is used in order to see the line cast we performed</span>\n\t<span class=\"token comment\">//The boolean parameter used here means that we want the lines to be persistent so we can see the actual linecast forever</span>\n\t<span class=\"token comment\">//The last parameter is the width of the lines.</span>\n\t<span class=\"token function\">DrawDebugLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> StartLocation<span class=\"token punctuation\">,</span> EndLocation<span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Red<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">IsRootComponentMovable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t\tUStaticMeshComponent<span class=\"token operator\">*</span> MeshRootComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetRootComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I Hit: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mesh Mass: %f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MeshRootComp<span class=\"token operator\">-></span><span class=\"token function\">GetMass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tMeshRootComp<span class=\"token operator\">-></span><span class=\"token function\">AddForce</span><span class=\"token punctuation\">(</span>CameraForward<span class=\"token operator\">*</span><span class=\"token number\">100000</span><span class=\"token operator\">*</span>MeshRootComp<span class=\"token operator\">-></span><span class=\"token function\">GetMass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play the sound if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireSound <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlaySoundAtLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireSound<span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play a firing animation if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireAnimation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Get the animation object for the arms mesh</span>\n\t\tUAnimInstance<span class=\"token operator\">*</span> AnimInstance <span class=\"token operator\">=</span> Mesh1P<span class=\"token operator\">-></span><span class=\"token function\">GetAnimInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AnimInstance <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tAnimInstance<span class=\"token operator\">-></span><span class=\"token function\">Montage_Play</span><span class=\"token punctuation\">(</span>FireAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Below is the <strong>Character's</strong> final <code>.cpp</code> code to add force to actors evertime the gun fires.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPProjectile.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Animation/AnimInstance.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Camera/CameraComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/CapsuleComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/SphereComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/InputComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/InputSettings.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HeadMountedDisplayFunctionLibrary.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MotionControllerComponent.h\"</span></span>\n<span class=\"token comment\">// include draw debug helpers header file</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span>\n\n<span class=\"token function\">DEFINE_LOG_CATEGORY_STATIC</span><span class=\"token punctuation\">(</span>LogFPChar<span class=\"token punctuation\">,</span> Warning<span class=\"token punctuation\">,</span> All<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// AUnrealCPPCharacter</span>\n\n<span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Set size for collision capsule</span>\n\t<span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// set our turn rates for input</span>\n\tBaseTurnRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\tBaseLookUpRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a CameraComponent\t</span>\n\tFirstPersonCameraComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCameraComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FirstPersonCamera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">39.56f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.75f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Position the camera</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>bUsePawnControlRotation <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a mesh component that will be used when being viewed from a '1st person' view (when controlling this pawn)</span>\n\tMesh1P <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CharacterMesh1P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.9f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">19.19f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">155.7f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a gun mesh component</span>\n\tFP_Gun <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FP_Gun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// only the owning player will see this mesh</span>\n\tFP_Gun<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// FP_Gun->SetupAttachment(Mesh1P, TEXT(\"GripPoint\"));</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFP_MuzzleLocation <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USceneComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MuzzleLocation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FP_Gun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10.6f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Default offset from the character location for projectiles to spawn</span>\n\tGunOffset <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Note: The ProjectileClass and the skeletal mesh/anim blueprints for Mesh1P, FP_Gun, and VR_Gun </span>\n\t<span class=\"token comment\">// are set in the derived blueprint asset named MyCharacter to avoid direct content references in C++.</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Call the base class  </span>\n\tSuper<span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//Attach gun mesh component to Skeleton, doing it here because the skeleton is not yet created in the constructor</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">AttachToComponent</span><span class=\"token punctuation\">(</span>Mesh1P<span class=\"token punctuation\">,</span> <span class=\"token function\">FAttachmentTransformRules</span><span class=\"token punctuation\">(</span>EAttachmentRule<span class=\"token double-colon punctuation\">::</span>SnapToTarget<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GripPoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// Input</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> PlayerInputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// set up gameplay key bindings</span>\n\t<span class=\"token function\">check</span><span class=\"token punctuation\">(</span>PlayerInputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind jump events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>Jump<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Released<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>StopJumping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind fire event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fire\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnFire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind movement events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveForward\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveForward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveRight\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// We have 2 versions of the rotation bindings to handle different kinds of devices differently</span>\n\t<span class=\"token comment\">// \"turn\" handles devices that provide an absolute delta, such as a mouse.</span>\n\t<span class=\"token comment\">// \"turnrate\" is for devices that we choose to treat as a rate of change, such as an analog joystick</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerYawInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TurnRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>TurnAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUp\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerPitchInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUpRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>LookUpAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">//Hit contains information about what the line trace hit.</span>\n\tFHitResult Hit<span class=\"token punctuation\">;</span>\n\tFVector CameraForward <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//The length of the line trace in units.</span>\n\t<span class=\"token comment\">//For more flexibility you can expose a public variable in the editor</span>\n\t<span class=\"token keyword\">float</span> LineLength <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n\n\tFRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFVector StartLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// log helpful information</span>\n\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Start Location: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>StartLocation<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Spawn Rotation: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Forward Vector: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//The EndLocation of the line trace</span>\n\tFVector EndLocation <span class=\"token operator\">=</span> StartLocation <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> LineLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//Collision parameters. The following syntax means that we don't want the trace to be complex</span>\n\tFCollisionQueryParams CollisionParameters<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">LineTraceSingleByChannel</span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">,</span> StartLocation<span class=\"token punctuation\">,</span> EndLocation<span class=\"token punctuation\">,</span> ECollisionChannel<span class=\"token double-colon punctuation\">::</span>ECC_PhysicsBody<span class=\"token punctuation\">,</span> CollisionParameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//DrawDebugLine is used in order to see the line cast we performed</span>\n\t<span class=\"token comment\">//The boolean parameter used here means that we want the lines to be persistent so we can see the actual linecast forever</span>\n\t<span class=\"token comment\">//The last parameter is the width of the lines.</span>\n\t<span class=\"token function\">DrawDebugLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> StartLocation<span class=\"token punctuation\">,</span> EndLocation<span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Red<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">IsRootComponentMovable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t\tUStaticMeshComponent<span class=\"token operator\">*</span> MeshRootComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetRootComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I Hit: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">GetActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">UE_LOG</span><span class=\"token punctuation\">(</span>LogClass<span class=\"token punctuation\">,</span> Log<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mesh Mass: %f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MeshRootComp<span class=\"token operator\">-></span><span class=\"token function\">GetMass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tMeshRootComp<span class=\"token operator\">-></span><span class=\"token function\">AddForce</span><span class=\"token punctuation\">(</span>CameraForward<span class=\"token operator\">*</span><span class=\"token number\">100000</span><span class=\"token operator\">*</span>MeshRootComp<span class=\"token operator\">-></span><span class=\"token function\">GetMass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play the sound if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireSound <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlaySoundAtLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireSound<span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play a firing animation if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireAnimation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Get the animation object for the arms mesh</span>\n\t\tUAnimInstance<span class=\"token operator\">*</span> AnimInstance <span class=\"token operator\">=</span> Mesh1P<span class=\"token operator\">-></span><span class=\"token function\">GetAnimInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AnimInstance <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tAnimInstance<span class=\"token operator\">-></span><span class=\"token function\">Montage_Play</span><span class=\"token punctuation\">(</span>FireAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRightVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TurnAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerYawInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseTurnRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">LookUpAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerPitchInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseLookUpRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Add Force to Mesh","date":"January 14, 2018","description":"In this tutorial we'll add force to actors and static meshes each time we fire the gun.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/add-force-to-mesh_yxngcj.jpg","tags":["intermediate"],"video":"s_MPerD24cI","uev":"4.18.3"}},"previous":{"fields":{"slug":"/line-trace-on-fire/"},"frontmatter":{"title":"Line Trace on Fire"}},"next":{"fields":{"slug":"/destroy-actor-on-overlap/"},"frontmatter":{"title":"Destroy Actor on Overlap"}}},"pageContext":{"id":"5f2eac04-d616-5b7a-920b-1e83123a7ffc","previousPostId":"704a02cd-c6d7-5c33-b2c9-7f3bbe66d2f9","nextPostId":"41d0ab68-8c7d-53d3-a857-e12fa6cacd1e"}},"staticQueryHashes":[],"slicesMap":{}}