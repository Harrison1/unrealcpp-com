{"componentChunkName":"component---src-templates-blog-post-js","path":"/add-mesh-from-file/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"beb2ffca-1e9a-529b-9975-06bab0e67c77","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/AddMeshFromFile For this tutorial we are using the standard first person C++ template withâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/AddMeshFromFile\">https://github.com/Harrison1/unrealcpp/tree/master/AddMeshFromFile</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content. If you don't know how to add a new actor class to your project, please visit the <a href=\"/add-actor-class\">Add C++ Actor Class</a> post.</em></p>\n<p>Let's start by creating a new actor named <code>AddMeshFromFile</code>. We don't have to do anything inside the header file. Below is the default header we generated when we created a new class.</p>\n<h3>AddMeshFromFile.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"AddMeshFromFile.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> AAddMeshFromFile <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">AAddMeshFromFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In order to programmatically add a specific mesh we must include the <code>ConstructorHelpers.h</code> file. Include the file below your actor's named header file</p>\n<h4>include ConstructorHelpers.h</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"AddMeshFromFile.h\"</span></span>\n<span class=\"token comment\">// add constructor header</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ConstructorHelpers.h\"</span></span></code></pre></div>\n<p>Next in our actor's init function we will set the default values of the mesh we want to add to the actor. Create a <code>UStaticMeshComponent</code> pointer and set it as your <code>RootComponent</code>.</p>\n<h4>create UStaticMeshComp and set root</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">AAddMeshFromFile</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AAddMeshFromFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// add Cylinder to root</span>\n    UStaticMeshComponent<span class=\"token operator\">*</span> Cylinder <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VisualRepresentation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>After our initial setup our next step is to add the mesh we want to our actor. We are going to use the <code>ConstructorHelpers</code> method <code>FObjectFinder</code> to locate our mesh. In this example I am calling the variable <code>CylinderAsset</code> and passing in the path to the cylinder shape provided by the starter content. The path we pass in is <code>/Game/StarterContent/Shapes/Shape_Cylinder.Shape_Cylinder</code>.</p>\n<h4>FObjectFinder method</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">AAddMeshFromFile</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AAddMeshFromFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// add Cylinder to root</span>\n    UStaticMeshComponent<span class=\"token operator\">*</span> Cylinder <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VisualRepresentation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">CylinderAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Shapes/Shape_Cylinder.Shape_Cylinder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, let's do an error check to ensure we successfully get the mesh. If the statement passes let's <code>SetStaticMesh</code>, <code>SetRelativeLocation</code>, <code>SetWorldScale3D</code> on our <code>Cylinder</code> component.</p>\n<h4>if asset succeeded</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h4>SetStaticMesh</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>SetRelativeLocation</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>SetWorldScale3D</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Below is the final <code>.cpp</code> file.</p>\n<h3>AddMeshFromFile.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"AddMeshFromFile.h\"</span></span>\n<span class=\"token comment\">// add constructor header</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ConstructorHelpers.h\"</span></span>\n\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">AAddMeshFromFile</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AAddMeshFromFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// add Cylinder to root</span>\n    UStaticMeshComponent<span class=\"token operator\">*</span> Cylinder <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VisualRepresentation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">CylinderAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Shapes/Shape_Cylinder.Shape_Cylinder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>CylinderAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Cylinder<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called when the game starts or when spawned</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AAddMeshFromFile</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AAddMeshFromFile</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Add Mesh From File","date":"November 30, 2017","description":"How to add a mesh to an actor programatically through using the ConstructorHelpers script.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/add-mesh-from-file_qwbthi.jpg","tags":["beginner"],"video":"ZEmFrlL_1t4","uev":"4.18.3"}},"previous":{"fields":{"slug":"/create-static-mesh/"},"frontmatter":{"title":"Create Static Mesh"}},"next":{"fields":{"slug":"/add-component/"},"frontmatter":{"title":"Add Component"}}},"pageContext":{"id":"beb2ffca-1e9a-529b-9975-06bab0e67c77","previousPostId":"09c25f17-d5ee-57ac-acd9-3defa3e4c2a6","nextPostId":"0fd733ab-7001-5d5a-a295-993d206f03ed"}},"staticQueryHashes":[],"slicesMap":{}}