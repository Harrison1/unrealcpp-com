{"componentChunkName":"component---src-templates-blog-post-js","path":"/character-bind-button/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"162e7ebf-8166-58f8-8216-1c857bc97d10","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/CharacterBindButton For this tutorial we are using the standard first person C++ template withâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/CharacterBindButton\">https://github.com/Harrison1/unrealcpp/tree/master/CharacterBindButton</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content.</em></p>\n<p>In this tutorial let's add an <code>Action</code> button to our character. First we will want to add an input option called <code>Action</code> and bind it to a keyboard input or controller button. In this case we are going to bind the <code>Action</code> input to our keyboard's <code>E</code> key. Go to Edit > Project Settings. Then select the Input option. Click the plus sign next to <code>Action Mappings</code>. Call the new input <code>Action</code> and select <code>E</code> from the dropdown menu.</p>\n<h4>open Edit > Project Settings</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/settings-input_bj3avm.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/project-settings_twfimr.jpg\" alt=\"project settings\" title=\"Project Settings\"></a></p>\n<h4>go to the Input options and a button press</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/settings-input_bj3avm.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/settings-input_bj3avm.jpg\" alt=\"input settings\" title=\"Input Settings\"></a></p>\n<p>In our Character.h file add the <code>OnAction</code> method under the <code>OnFire</code> method. My header file in this tutorial is called <code>UnrealCPPCharacter.h</code>, your file might be called something different.</p>\n<h4>add OnAction to header file</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\n\t<span class=\"token comment\">/** Fires a projectile. */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// on action </span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, in our Character.cpp file we are going to find our <code>SetupPlayerInputComponent</code> function and connect our <code>Action</code> button with our <code>OnAction</code> function. We will make our <code>OnAction</code> function in a second. I connect the controller to the function by <code>BindAction</code> from the <code>PlayerInputComponent</code>. You can learn more about the BindAction function <a href=\"https://docs.unrealengine.com/latest/INT/API/Runtime/Engine/Components/UInputComponent/BindAction/\">here</a>. In this example I am calling the <code>OnAction</code> function every time the button is <code>Pressed</code>, you can find other EInputEvents <a href=\"https://docs.unrealengine.com/latest/INT/API/Runtime/Engine/Engine/EInputEvent/index.html\">here</a>.</p>\n<h4>add this method in the SetupPlayerInputComponent method</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">PlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Action\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Finally we'll add the <code>OnAction</code> function to the bottom of our script. This will be an extremely simple function that logs a message to the screen.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GEngine<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n        GEngine<span class=\"token operator\">-></span><span class=\"token function\">AddOnScreenDebugMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.f</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Red<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm Pressing Action\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, your character will log message to the screen whenever they push <code>E</code>.</p>\n<h3>UnrealCPPCharacter.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Character.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.generated.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">=</span>Game<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPCharacter</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ACharacter</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">/** Pawn mesh: 1st person view (arms; seen only by self) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> Mesh1P<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Gun mesh: 1st person view (seen only by self) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> FP_Gun<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Location on gun mesh where projectiles should spawn. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USceneComponent</span><span class=\"token operator\">*</span> FP_MuzzleLocation<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** First person camera */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">,</span> meta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>AllowPrivateAccess <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UCameraComponent</span><span class=\"token operator\">*</span> FirstPersonCameraComponent<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// create trigger capsule</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Trigger Capsule\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UCapsuleComponent</span><span class=\"token operator\">*</span> TriggerCapsule<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">/** Base turn rate, in deg/sec. Other scaling may affect final turn rate. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Camera<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> BaseTurnRate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Base look up/down rate, in deg/sec. Other scaling may affect final rate. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Camera<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> BaseLookUpRate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Gun muzzle's offset from the characters location */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Gameplay<span class=\"token punctuation\">)</span>\n\tFVector GunOffset<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Projectile class to spawn */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditDefaultsOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Projectile<span class=\"token punctuation\">)</span>\n\tTSubclassOf<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPProjectile</span><span class=\"token operator\">></span> ProjectileClass<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Sound to play each time we fire */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Gameplay<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USoundBase</span><span class=\"token operator\">*</span> FireSound<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** AnimMontage to play each time we fire */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Gameplay<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UAnimMontage</span><span class=\"token operator\">*</span> FireAnimation<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare overlap begin function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare overlap end function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\n\t<span class=\"token comment\">/** Fires a projectile. */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// on action </span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Handles moving forward/backward */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Handles stafing movement, left and right */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * Called via input to turn at a given rate.\n\t * @param Rate\tThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate\n\t */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">TurnAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * Called via input to turn look up/down at a given rate.\n\t * @param Rate\tThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate\n\t */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">LookUpAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// APawn interface</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span>UInputComponent<span class=\"token operator\">*</span> InputComponent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// End of APawn interface</span>\n\tFORCEINLINE <span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> <span class=\"token function\">GetMesh1P</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Mesh1P<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">/** Returns FirstPersonCameraComponent subobject **/</span>\n\tFORCEINLINE <span class=\"token keyword\">class</span> <span class=\"token class-name\">UCameraComponent</span><span class=\"token operator\">*</span> <span class=\"token function\">GetFirstPersonCameraComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> FirstPersonCameraComponent<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>UnrealCPPCharacter.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPProjectile.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Animation/AnimInstance.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Camera/CameraComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/CapsuleComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/SphereComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/InputComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/InputSettings.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HeadMountedDisplayFunctionLibrary.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MotionControllerComponent.h\"</span></span>\n\n<span class=\"token function\">DEFINE_LOG_CATEGORY_STATIC</span><span class=\"token punctuation\">(</span>LogFPChar<span class=\"token punctuation\">,</span> Warning<span class=\"token punctuation\">,</span> All<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// AUnrealCPPCharacter</span>\n\n<span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Set size for collision capsule</span>\n\t<span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// set our turn rates for input</span>\n\tBaseTurnRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\tBaseLookUpRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a CameraComponent\t</span>\n\tFirstPersonCameraComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCameraComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FirstPersonCamera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">39.56f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.75f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Position the camera</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>bUsePawnControlRotation <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a mesh component that will be used when being viewed from a '1st person' view (when controlling this pawn)</span>\n\tMesh1P <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CharacterMesh1P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.9f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">19.19f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">155.7f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a gun mesh component</span>\n\tFP_Gun <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FP_Gun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// only the owning player will see this mesh</span>\n\tFP_Gun<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// FP_Gun->SetupAttachment(Mesh1P, TEXT(\"GripPoint\"));</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFP_MuzzleLocation <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USceneComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MuzzleLocation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FP_Gun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10.6f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Default offset from the character location for projectiles to spawn</span>\n\tGunOffset <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Call the base class  </span>\n\tSuper<span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//Attach gun mesh component to Skeleton, doing it here because the skeleton is not yet created in the constructor</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">AttachToComponent</span><span class=\"token punctuation\">(</span>Mesh1P<span class=\"token punctuation\">,</span> <span class=\"token function\">FAttachmentTransformRules</span><span class=\"token punctuation\">(</span>EAttachmentRule<span class=\"token double-colon punctuation\">::</span>SnapToTarget<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GripPoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// Input</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> PlayerInputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// set up gameplay key bindings</span>\n\t<span class=\"token function\">check</span><span class=\"token punctuation\">(</span>PlayerInputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind jump events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>Jump<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Released<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>StopJumping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind fire event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fire\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnFire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind action event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Action\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind movement events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveForward\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveForward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveRight\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// We have 2 versions of the rotation bindings to handle different kinds of devices differently</span>\n\t<span class=\"token comment\">// \"turn\" handles devices that provide an absolute delta, such as a mouse.</span>\n\t<span class=\"token comment\">// \"turnrate\" is for devices that we choose to treat as a rate of change, such as an analog joystick</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerYawInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TurnRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>TurnAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUp\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerPitchInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUpRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>LookUpAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// try and fire a projectile</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ProjectileClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tUWorld<span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> World <span class=\"token operator\">=</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>World <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> FRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// MuzzleOffset is in camera space, so transform it to world space before offsetting from the character location to find the final muzzle position</span>\n\t\t\t<span class=\"token keyword\">const</span> FVector SpawnLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">//Set Spawn Collision Handling Override</span>\n\t\t\tFActorSpawnParameters ActorSpawnParams<span class=\"token punctuation\">;</span>\n\t\t\tActorSpawnParams<span class=\"token punctuation\">.</span>SpawnCollisionHandlingOverride <span class=\"token operator\">=</span> ESpawnActorCollisionHandlingMethod<span class=\"token double-colon punctuation\">::</span>AdjustIfPossibleButDontSpawnIfColliding<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">// spawn the projectile at the muzzle</span>\n\t\t\tWorld<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">SpawnActor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPProjectile<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>ProjectileClass<span class=\"token punctuation\">,</span> SpawnLocation<span class=\"token punctuation\">,</span> SpawnRotation<span class=\"token punctuation\">,</span> ActorSpawnParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play the sound if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireSound <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlaySoundAtLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireSound<span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play a firing animation if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireAnimation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Get the animation object for the arms mesh</span>\n\t\tUAnimInstance<span class=\"token operator\">*</span> AnimInstance <span class=\"token operator\">=</span> Mesh1P<span class=\"token operator\">-></span><span class=\"token function\">GetAnimInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AnimInstance <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tAnimInstance<span class=\"token operator\">-></span><span class=\"token function\">Montage_Play</span><span class=\"token punctuation\">(</span>FireAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRightVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TurnAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerYawInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseTurnRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">LookUpAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerPitchInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseLookUpRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GEngine<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\t\n        GEngine<span class=\"token operator\">-></span><span class=\"token function\">AddOnScreenDebugMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.f</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Red<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm Pressing Action\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Bind Button to Character","date":"December 02, 2017","description":"Quick tutorial on how to bind a button to your character","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/project-settings_twfimr.jpg","tags":["beginner"],"video":"TnUK3hPczoQ","uev":"4.18.3"}},"previous":{"fields":{"slug":"/light-switch-trigger/"},"frontmatter":{"title":"Light Switch Overlap Trigger"}},"next":{"fields":{"slug":"/light-switch-push-button/"},"frontmatter":{"title":"Light Switch on Button Press"}}},"pageContext":{"id":"162e7ebf-8166-58f8-8216-1c857bc97d10","previousPostId":"bea55c59-6a61-5869-b2a0-1a2c48faaa07","nextPostId":"b9549098-1ce6-5a99-95ae-e70d71dc6ca5"}},"staticQueryHashes":[],"slicesMap":{}}