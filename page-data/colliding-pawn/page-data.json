{"componentChunkName":"component---src-templates-blog-post-js","path":"/colliding-pawn/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"e197b0c4-5729-575d-b820-17be7d9e0318","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/CollidingPawn For this tutorial we are using the standard first person C++ template with starterâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/CollidingPawn\">https://github.com/Harrison1/unrealcpp/tree/master/CollidingPawn</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content.</em></p>\n<p>This is a tutorial going over how to do the Components and Collision tutorial provided in the UE4 documentation. You can find the tutorial link <a href=\"https://docs.unrealengine.com/latest/INT/Programming/Tutorials/Components/index.html\">here</a></p>\n<p>Create a new <code>C++</code> class that inherits from the parent class of <code>UPawnMovementComponent</code> and call it <code>CollidingPawnMovementComponent</code>. We will use this component in the pawn we create later.</p>\n<h4>new cpp movement comp class</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/new-pawn-class_dgifxq.jpg.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/new-pawn-class_dgifxq.jpg\" alt=\"new c++ movement comp class\" title=\"new c++ movement comp class\"></a></p>\n<h4>new pawn movement comp</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/pawn-movement-comp_u6zzmz.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/pawn-movement-comp_u6zzmz.jpg\" alt=\"new pawn movement comp\" title=\"new pawn movement comp\"></a></p>\n<h4>save new movement comp</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/save-pawn-movement-comp_ukuxtv.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/save-pawn-movement-comp_ukuxtv.jpg\" alt=\"save new movement comp\" title=\"save new movement comp\"></a></p>\n<p>The header file should like the code below.</p>\n<h3>CollidingPawnMovementComponent.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/PawnMovementComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawnMovementComponent.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> UCollidingPawnMovementComponent <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> UPawnMovementComponent\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">TickComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ELevelTick</span> TickType<span class=\"token punctuation\">,</span> FActorComponentTickFunction <span class=\"token operator\">*</span>ThisTickFunction<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the <code>.cpp</code> file are going to put all the logic inside the <code>Tick</code> function to check if we hit anything. First, make sure that it is still valid to move. Add the below <code>if</code> statement to the <code>Tick</code> function.</p>\n<h4>valid to move</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">UCollidingPawnMovementComponent</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TickComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ELevelTick</span> TickType<span class=\"token punctuation\">,</span> FActorComponentTickFunction <span class=\"token operator\">*</span>ThisTickFunction<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TickComponent</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">,</span> TickType<span class=\"token punctuation\">,</span> ThisTickFunction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Make sure that everything is still valid, and that we are allowed to move.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>PawnOwner <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>UpdatedComponent <span class=\"token operator\">||</span> <span class=\"token function\">ShouldSkipUpdate</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, we want to get the vector produced by our pawn. We create our Pawn actor later, but the pawn will generate a location vector every frame. First we will want to get the frame's vector by using the <code>ConsumeInputVector</code> function. Clamp the the vector <code>1.0f</code> and then multiply it by <code>DeltaTime</code> and <code>150.f</code>. This ensures the pawn moves smoothly across the world at a maximum rate of 150 units per second. We then check if movement is close to zero, if <code>true</code>, we move our pawn unless it is hitting a blocking component. Below is Epic's explanation of the component code, they can explain it much better than I can.</p>\n<h3>Epics explanation of the component Tick code.</h3>\n<blockquote>\n<p>This code will move our Pawn smoothly around the world, sliding off of surfaces where appropriate. There is no gravity applied to our Pawn, and its maximum speed is hard-coded to 150 Unreal Units per second.</p>\n</blockquote>\n<blockquote>\n<p>This <strong>TickComponent</strong> function makes use of a few of the powerful features offered by the <strong>UPawnMovementComponent</strong> class.</p>\n</blockquote>\n<blockquote>\n<p><strong>ConsumeInputVector</strong> reports and clears the value of a built-in variable that we will use to store our movement inputs.</p>\n</blockquote>\n<blockquote>\n<p><strong>SafeMoveUpdatedComponent</strong> uses Unreal Engine physics to move our Pawn Movement Component while respecting solid barriers.</p>\n</blockquote>\n<blockquote>\n<p><strong>SlideAlongSurface</strong> handles the calculations and physics involved with sliding smoothly along collision surfaces like walls and ramps when a move results in a collision, rather than simply stopping in place and sticking to the wall or ramp.</p>\n</blockquote>\n<blockquote>\n<p>There are more features included in Pawn Movement Components that are worthy of examination, but they are not needed for the scope of this tutorial. Looking at other classes, such as <strong>Floating Pawn Movement</strong>, <strong>Spectator Pawn Movement</strong>, or <strong>Character Movement Component</strong>, could provide additional usage examples and ideas.</p>\n</blockquote>\n<p><em>you can visit the tutorial page <a href=\"https://docs.unrealengine.com/latest/INT/Programming/Tutorials/Components/3/index.html\">here</a> where Epic goes into depth about the colliding component</em></p>\n<p>Below is the final <code>CollidingPawnMovementComponent.cpp</code> file.</p>\n<h3>CollidingPawnMovementComponent.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">UCollidingPawnMovementComponent</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TickComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ELevelTick</span> TickType<span class=\"token punctuation\">,</span> FActorComponentTickFunction <span class=\"token operator\">*</span>ThisTickFunction<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TickComponent</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">,</span> TickType<span class=\"token punctuation\">,</span> ThisTickFunction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Make sure that everything is still valid, and that we are allowed to move.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>PawnOwner <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>UpdatedComponent <span class=\"token operator\">||</span> <span class=\"token function\">ShouldSkipUpdate</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Get (and then clear) the movement vector that we set in ACollidingPawn::Tick</span>\n    FVector DesiredMovementThisFrame <span class=\"token operator\">=</span> <span class=\"token function\">ConsumeInputVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetClampedToMaxSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> DeltaTime <span class=\"token operator\">*</span> <span class=\"token number\">150.0f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DesiredMovementThisFrame<span class=\"token punctuation\">.</span><span class=\"token function\">IsNearlyZero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        FHitResult Hit<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">SafeMoveUpdatedComponent</span><span class=\"token punctuation\">(</span>DesiredMovementThisFrame<span class=\"token punctuation\">,</span> UpdatedComponent<span class=\"token operator\">-></span><span class=\"token function\">GetComponentRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> Hit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// If we bumped into something, try to slide along it</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">IsValidBlockingHit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">SlideAlongSurface</span><span class=\"token punctuation\">(</span>DesiredMovementThisFrame<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span> <span class=\"token operator\">-</span> Hit<span class=\"token punctuation\">.</span>Time<span class=\"token punctuation\">,</span> Hit<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">,</span> Hit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Now, moving on, Create a new <code>C++</code> class that inherits from the parent <code>Pawn</code> class and call it <code>CollidingPawn</code>.</p>\n<h4>new cpp class</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/new-pawn-class_dgifxq.jpg.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/new-pawn-class_dgifxq.jpg\" alt=\"new c++ class\" title=\"new c++ class\"></a></p>\n<h4>new pawn</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/parent-pawn_sncmyb.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/parent-pawn_sncmyb.jpg\" alt=\"parent pawn class\" title=\"parent pawn class\"></a></p>\n<h4>save it</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/save-colliding-pawn_g5ktxl.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/save-colliding-pawn_g5ktxl.jpg\" alt=\"save CollidingPawn\" title=\"save CollidingPawn\"></a></p>\n<p>In the header file we want to declare the variable we going to be using in the <code>.cpp</code> file. We will declare our movement functions along with our particle system and newly created <code>UCollidingPawnMovementComponent</code>.</p>\n<h4>add to the header file</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    UParticleSystemComponent<span class=\"token operator\">*</span> OurParticleSystem<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">UCollidingPawnMovementComponent</span><span class=\"token operator\">*</span> OurMovementComponent<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> UPawnMovementComponent<span class=\"token operator\">*</span> <span class=\"token function\">GetMovementComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">Turn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">ParticleToggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We will trigger the particle on a key press. We will setup the input options later in the post. Below is the final <code>CollidingPawn.h</code> file.</p>\n<h3>CollidingPawn.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Pawn.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawn.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> ACollidingPawn <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> APawn\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Sets default values for this pawn's properties</span>\n\t<span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\n\t<span class=\"token comment\">// Called every frame</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> DeltaSeconds <span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Called to bind functionality to input</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> InputComponent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n    UParticleSystemComponent<span class=\"token operator\">*</span> OurParticleSystem<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">UCollidingPawnMovementComponent</span><span class=\"token operator\">*</span> OurMovementComponent<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> UPawnMovementComponent<span class=\"token operator\">*</span> <span class=\"token function\">GetMovementComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">Turn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">ParticleToggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the <code>.cpp</code> file, first we want to make sure we <code>#include</code> all the necessary scripts that are going to be used throughout our code. Below you will see the components and the helper scripts that we add to the top our <code>.cpp</code> file below pawn named header file.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawn.h\"</span></span>\n<span class=\"token comment\">// include these in your file</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Camera/CameraComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawnMovementComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/InputComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/StaticMeshComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/SphereComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ConstructorHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/SpringArmComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Particles/ParticleSystemComponent.h\"</span></span>\n</code></pre></div>\n<p>In our pawn's init function we will set up our pawn will all the necessary components. First, add a <code>USphereComponent</code> as the <code>RootComponent</code>.</p>\n<h4>add USphereComponent</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t  <span class=\"token comment\">// Our root component will be a sphere that reacts to physics</span>\n    USphereComponent<span class=\"token operator\">*</span> SphereComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USphereComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RootComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    RootComponent <span class=\"token operator\">=</span> SphereComponent<span class=\"token punctuation\">;</span>\n    SphereComponent<span class=\"token operator\">-></span><span class=\"token function\">InitSphereRadius</span><span class=\"token punctuation\">(</span><span class=\"token number\">40.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SphereComponent<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pawn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, we'll add a sphere mesh to represent and visualize our pawn. In the code we are using the <code>ConstructorHelper</code> to find the sphere mesh by providing it a path.</p>\n<h4>add visual sphere</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">// Create and position a mesh component so we can see where our sphere is</span>\n    UStaticMeshComponent<span class=\"token operator\">*</span> SphereVisual <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VisualRepresentation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">SphereVisualAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Shapes/Shape_Sphere.Shape_Sphere\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SphereVisualAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>SphereVisualAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">40.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, we add the particle system to our pawn. By default, we are going to set its <code>bAutoActivate</code> to <code>false</code> so it doesn't start the flames when we start playing. We will control it with a key press. Also, notice that we are attaching this particle system to the <code>SphereVisual</code> mesh and not the <code>RootComponent</code>.</p>\n<h4>add particle system</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token comment\">// Create a particle system that we can activate or deactivate</span>\n    OurParticleSystem <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UParticleSystemComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MovementParticles\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>SphereVisual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span>bAutoActivate <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">20.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UParticleSystem<span class=\"token operator\">></span> <span class=\"token function\">ParticleAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Particles/P_Fire.P_Fire\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ParticleAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetTemplate</span><span class=\"token punctuation\">(</span>ParticleAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, add a <code>USpringArmComponent</code> for camera motion control and attach it to the <code>RootComponent</code></p>\n<h4>add USpringArmComponent</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">// Use a spring arm to give the camera smooth, natural-feeling motion.</span>\n    USpringArmComponent<span class=\"token operator\">*</span> SpringArm <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USpringArmComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CameraAttachmentArm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>RelativeRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>TargetArmLength <span class=\"token operator\">=</span> <span class=\"token number\">400.0f</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>bEnableCameraLag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>CameraLagSpeed <span class=\"token operator\">=</span> <span class=\"token number\">3.0f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, We'll create a <code>UCameraComponent</code> and attach it to our <code>SpringArm</code></p>\n<h4>create and attach camera</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token comment\">// Create a camera and attach to our spring arm</span>\n    UCameraComponent<span class=\"token operator\">*</span> Camera <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCameraComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ActualCamera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Camera<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>SpringArm<span class=\"token punctuation\">,</span> USpringArmComponent<span class=\"token double-colon punctuation\">::</span>SocketName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, allow this pawn to immediately posses take control of the player.</p>\n<h4>posses the player</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">// Take control of the default player</span>\n    AutoPossessPlayer <span class=\"token operator\">=</span> EAutoReceiveInput<span class=\"token double-colon punctuation\">::</span>Player0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, add our <code>UCollidingPawnMovementComponent</code> to our pawn.</p>\n<h4>add UCollidingPawnMovementComponent</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token comment\">// Create an instance of our movement component, and tell it to update our root component.</span>\n    OurMovementComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCollidingPawnMovementComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CustomMovementComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurMovementComponent<span class=\"token operator\">-></span>UpdatedComponent <span class=\"token operator\">=</span> RootComponent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Below is the final <code>ACollidingPawn()</code> function.</p>\n<h4>ACollidingPawn::ACollidingPawn()</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this pawn to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t    <span class=\"token comment\">// Our root component will be a sphere that reacts to physics</span>\n    USphereComponent<span class=\"token operator\">*</span> SphereComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USphereComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RootComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    RootComponent <span class=\"token operator\">=</span> SphereComponent<span class=\"token punctuation\">;</span>\n    SphereComponent<span class=\"token operator\">-></span><span class=\"token function\">InitSphereRadius</span><span class=\"token punctuation\">(</span><span class=\"token number\">40.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SphereComponent<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pawn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create and position a mesh component so we can see where our sphere is</span>\n    UStaticMeshComponent<span class=\"token operator\">*</span> SphereVisual <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VisualRepresentation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">SphereVisualAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Shapes/Shape_Sphere.Shape_Sphere\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SphereVisualAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>SphereVisualAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">40.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Create a particle system that we can activate or deactivate</span>\n    OurParticleSystem <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UParticleSystemComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MovementParticles\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>SphereVisual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span>bAutoActivate <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">20.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UParticleSystem<span class=\"token operator\">></span> <span class=\"token function\">ParticleAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Particles/P_Fire.P_Fire\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ParticleAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetTemplate</span><span class=\"token punctuation\">(</span>ParticleAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Use a spring arm to give the camera smooth, natural-feeling motion.</span>\n    USpringArmComponent<span class=\"token operator\">*</span> SpringArm <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USpringArmComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CameraAttachmentArm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>RelativeRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>TargetArmLength <span class=\"token operator\">=</span> <span class=\"token number\">400.0f</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>bEnableCameraLag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>CameraLagSpeed <span class=\"token operator\">=</span> <span class=\"token number\">3.0f</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a camera and attach to our spring arm</span>\n    UCameraComponent<span class=\"token operator\">*</span> Camera <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCameraComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ActualCamera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Camera<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>SpringArm<span class=\"token punctuation\">,</span> USpringArmComponent<span class=\"token double-colon punctuation\">::</span>SocketName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Take control of the default player</span>\n    AutoPossessPlayer <span class=\"token operator\">=</span> EAutoReceiveInput<span class=\"token double-colon punctuation\">::</span>Player0<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create an instance of our movement component, and tell it to update our root component.</span>\n    OurMovementComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCollidingPawnMovementComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CustomMovementComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurMovementComponent<span class=\"token operator\">-></span>UpdatedComponent <span class=\"token operator\">=</span> RootComponent<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>After setting up our pawn with all the necessary components let's go ahead and bind the input to our pawn in the <code>SetupPlayerInputComponent</code> function. But, first let's go inside the editor and create our <code>Action</code> and <code>Axis</code> inputs. In <code>Action Mappings</code>, add a button called <code>ParticleToggle</code> and bind it to the <code>P</code> key. In Axis Mappings create a <code>MoveForward</code>, <code>MoveRight</code>, and <code>Turn</code> inputs. Below are their corresponding values.</p>\n<ol>\n<li>\n<p><code>MoveForward</code><br>\nW: <em>Scale</em> 1.0<br>\nS: <em>Scale</em> -1.0<br>\nUp: <em>Scale</em> 1.0<br>\nDown: <em>Scale</em> -1.0<br>\nGamepad Left Thumbstick Y-Axis: Scale 1.0</p>\n</li>\n<li>\n<p><code>MoveRight</code><br>\nA: <em>Scale</em> -1.0<br>\nD: <em>Scale</em> 1.0<br>\nLeft: <em>Scale</em> -1.0<br>\nRight: <em>Scale</em> 1.0<br>\nGamepad Left Thumbstick X-Axis: Scale 1.0</p>\n</li>\n<li>\n<p><code>Turn</code><br>\nMouse X: <em>Scale</em> 1.0</p>\n</li>\n</ol>\n<h4>enter project settings</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/project-settings_twfimr.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/project-settings_twfimr.jpg\" alt=\"go into project settings\" title=\"go into project settings\"></a></p>\n<h4>add action and axis inputs</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/pawn-input-settings_o5ubnc.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/pawn-input-settings_o5ubnc.jpg\" alt=\"action and axis inputs\" title=\"action and axis inputs\"></a></p>\n<p>Let's go ahead and bind the input to our pawn in the <code>SetupPlayerInputComponent</code> function. Our inputs will be bound to functions defined later in the code.</p>\n<h4>SetupPlayerInputComponent(class UInputComponent* InputComponent)</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> InputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span>InputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    InputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ParticleToggle\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACollidingPawn<span class=\"token double-colon punctuation\">::</span>ParticleToggle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    InputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveForward\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACollidingPawn<span class=\"token double-colon punctuation\">::</span>MoveForward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    InputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveRight\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACollidingPawn<span class=\"token double-colon punctuation\">::</span>MoveRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    InputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACollidingPawn<span class=\"token double-colon punctuation\">::</span>Turn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, create the <code>GetMovementComponent()</code> component function to return our movement comp.</p>\n<h4>GetMovementComponent()</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">UPawnMovementComponent<span class=\"token operator\">*</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetMovementComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> OurMovementComponent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, we are going to set up our action and axis functions. The <code>MoveForward</code> function moves our pawn forward based on its <code>ForwardVector</code>. The <code>MoveRight</code> function moves our pawn forward based on its <code>RightVector</code>. The <code>Turn</code> function rotates the camera around the pawn. The <code>ParticleToggle</code> function is simple function that will toggle the fire particle's active state between <code>true</code> and <code>false</code>.</p>\n<h4>action and axis functions</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OurMovementComponent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OurMovementComponent<span class=\"token operator\">-></span>UpdatedComponent <span class=\"token operator\">==</span> RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurMovementComponent<span class=\"token operator\">-></span><span class=\"token function\">AddInputVector</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OurMovementComponent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OurMovementComponent<span class=\"token operator\">-></span>UpdatedComponent <span class=\"token operator\">==</span> RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurMovementComponent<span class=\"token operator\">-></span><span class=\"token function\">AddInputVector</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRightVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Turn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    FRotator NewRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetActorRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    NewRotation<span class=\"token punctuation\">.</span>Yaw <span class=\"token operator\">+=</span> AxisValue<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SetActorRotation</span><span class=\"token punctuation\">(</span>NewRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ParticleToggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OurParticleSystem <span class=\"token operator\">&amp;&amp;</span> OurParticleSystem<span class=\"token operator\">-></span>Template<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">ToggleActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Finally, drag and drop your pawn into the game scene and you should be able to move the sphere around the world.</p>\n<p>Final code is below.</p>\n<h3>CollidingPawn.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Pawn.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawn.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> ACollidingPawn <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> APawn\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Sets default values for this pawn's properties</span>\n\t<span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\n\t<span class=\"token comment\">// Called every frame</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> DeltaSeconds <span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Called to bind functionality to input</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> InputComponent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n    UParticleSystemComponent<span class=\"token operator\">*</span> OurParticleSystem<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">UCollidingPawnMovementComponent</span><span class=\"token operator\">*</span> OurMovementComponent<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> UPawnMovementComponent<span class=\"token operator\">*</span> <span class=\"token function\">GetMovementComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">Turn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">ParticleToggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>CollidingPawn.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawn.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Camera/CameraComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawnMovementComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/InputComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/StaticMeshComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/SphereComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ConstructorHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/SpringArmComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Particles/ParticleSystemComponent.h\"</span></span>\n\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACollidingPawn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this pawn to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t    <span class=\"token comment\">// Our root component will be a sphere that reacts to physics</span>\n    USphereComponent<span class=\"token operator\">*</span> SphereComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USphereComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RootComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    RootComponent <span class=\"token operator\">=</span> SphereComponent<span class=\"token punctuation\">;</span>\n    SphereComponent<span class=\"token operator\">-></span><span class=\"token function\">InitSphereRadius</span><span class=\"token punctuation\">(</span><span class=\"token number\">40.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SphereComponent<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pawn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create and position a mesh component so we can see where our sphere is</span>\n    UStaticMeshComponent<span class=\"token operator\">*</span> SphereVisual <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VisualRepresentation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">SphereVisualAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Shapes/Shape_Sphere.Shape_Sphere\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SphereVisualAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>SphereVisualAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">40.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        SphereVisual<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Create a particle system that we can activate or deactivate</span>\n    OurParticleSystem <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UParticleSystemComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MovementParticles\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>SphereVisual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span>bAutoActivate <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">20.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UParticleSystem<span class=\"token operator\">></span> <span class=\"token function\">ParticleAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Particles/P_Fire.P_Fire\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ParticleAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">SetTemplate</span><span class=\"token punctuation\">(</span>ParticleAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Use a spring arm to give the camera smooth, natural-feeling motion.</span>\n    USpringArmComponent<span class=\"token operator\">*</span> SpringArm <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USpringArmComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CameraAttachmentArm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>RelativeRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>TargetArmLength <span class=\"token operator\">=</span> <span class=\"token number\">400.0f</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>bEnableCameraLag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    SpringArm<span class=\"token operator\">-></span>CameraLagSpeed <span class=\"token operator\">=</span> <span class=\"token number\">3.0f</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a camera and attach to our spring arm</span>\n    UCameraComponent<span class=\"token operator\">*</span> Camera <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCameraComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ActualCamera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Camera<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>SpringArm<span class=\"token punctuation\">,</span> USpringArmComponent<span class=\"token double-colon punctuation\">::</span>SocketName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Take control of the default player</span>\n    AutoPossessPlayer <span class=\"token operator\">=</span> EAutoReceiveInput<span class=\"token double-colon punctuation\">::</span>Player0<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create an instance of our movement component, and tell it to update our root component.</span>\n    OurMovementComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCollidingPawnMovementComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CustomMovementComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    OurMovementComponent<span class=\"token operator\">-></span>UpdatedComponent <span class=\"token operator\">=</span> RootComponent<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called when the game starts or when spawned</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called to bind functionality to input</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> InputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span>InputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    InputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ParticleToggle\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACollidingPawn<span class=\"token double-colon punctuation\">::</span>ParticleToggle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    InputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveForward\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACollidingPawn<span class=\"token double-colon punctuation\">::</span>MoveForward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    InputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveRight\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACollidingPawn<span class=\"token double-colon punctuation\">::</span>MoveRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    InputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACollidingPawn<span class=\"token double-colon punctuation\">::</span>Turn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nUPawnMovementComponent<span class=\"token operator\">*</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetMovementComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> OurMovementComponent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OurMovementComponent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OurMovementComponent<span class=\"token operator\">-></span>UpdatedComponent <span class=\"token operator\">==</span> RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurMovementComponent<span class=\"token operator\">-></span><span class=\"token function\">AddInputVector</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OurMovementComponent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OurMovementComponent<span class=\"token operator\">-></span>UpdatedComponent <span class=\"token operator\">==</span> RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurMovementComponent<span class=\"token operator\">-></span><span class=\"token function\">AddInputVector</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRightVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> AxisValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Turn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> AxisValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    FRotator NewRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetActorRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    NewRotation<span class=\"token punctuation\">.</span>Yaw <span class=\"token operator\">+=</span> AxisValue<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SetActorRotation</span><span class=\"token punctuation\">(</span>NewRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACollidingPawn</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ParticleToggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OurParticleSystem <span class=\"token operator\">&amp;&amp;</span> OurParticleSystem<span class=\"token operator\">-></span>Template<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        OurParticleSystem<span class=\"token operator\">-></span><span class=\"token function\">ToggleActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>CollidingPawnMovementComponent.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/PawnMovementComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawnMovementComponent.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> UCollidingPawnMovementComponent <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> UPawnMovementComponent\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">TickComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ELevelTick</span> TickType<span class=\"token punctuation\">,</span> FActorComponentTickFunction <span class=\"token operator\">*</span>ThisTickFunction<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>CollidingPawnMovementComponent.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CollidingPawnMovementComponent.h\"</span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">UCollidingPawnMovementComponent</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TickComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ELevelTick</span> TickType<span class=\"token punctuation\">,</span> FActorComponentTickFunction <span class=\"token operator\">*</span>ThisTickFunction<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TickComponent</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">,</span> TickType<span class=\"token punctuation\">,</span> ThisTickFunction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Make sure that everything is still valid, and that we are allowed to move.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>PawnOwner <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>UpdatedComponent <span class=\"token operator\">||</span> <span class=\"token function\">ShouldSkipUpdate</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Get (and then clear) the movement vector that we set in ACollidingPawn::Tick</span>\n    FVector DesiredMovementThisFrame <span class=\"token operator\">=</span> <span class=\"token function\">ConsumeInputVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetClampedToMaxSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> DeltaTime <span class=\"token operator\">*</span> <span class=\"token number\">150.0f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DesiredMovementThisFrame<span class=\"token punctuation\">.</span><span class=\"token function\">IsNearlyZero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        FHitResult Hit<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">SafeMoveUpdatedComponent</span><span class=\"token punctuation\">(</span>DesiredMovementThisFrame<span class=\"token punctuation\">,</span> UpdatedComponent<span class=\"token operator\">-></span><span class=\"token function\">GetComponentRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> Hit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// If we bumped into something, try to slide along it</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Hit<span class=\"token punctuation\">.</span><span class=\"token function\">IsValidBlockingHit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">SlideAlongSurface</span><span class=\"token punctuation\">(</span>DesiredMovementThisFrame<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span> <span class=\"token operator\">-</span> Hit<span class=\"token punctuation\">.</span>Time<span class=\"token punctuation\">,</span> Hit<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">,</span> Hit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Colliding Pawn UE4 Tutorial","date":"December 03, 2017","description":"How to do the Components and Collision tutorial in the UE4 documentation.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/colliding-pawn_m6rgd5.jpg","tags":["intermediate","ue4 tutorial"],"video":"MFZ51eHFB_A","uev":"4.18.3"}},"previous":{"fields":{"slug":"/receive-player-input/"},"frontmatter":{"title":"Receive Player Input"}},"next":{"fields":{"slug":"/line-trace-on-tick/"},"frontmatter":{"title":"Line Trace on Tick"}}},"pageContext":{"id":"e197b0c4-5729-575d-b820-17be7d9e0318","previousPostId":"0f6adfe9-e7e8-5150-84c8-fbd2883c4fbe","nextPostId":"d4a58643-1e20-5688-9019-100ad220c779"}},"staticQueryHashes":[],"slicesMap":{}}