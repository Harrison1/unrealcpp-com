{"componentChunkName":"component---src-templates-blog-post-js","path":"/health-bar-ui-hud/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"7f9589e8-32ff-523b-b1e8-ba84e881f52b","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/HealthBar For this tutorial we are using the standard first person C++ template with the starterâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/HealthBar\">https://github.com/Harrison1/unrealcpp/tree/master/HealthBar</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with the starter content.</em></p>\n<p>In this Unreal Engine 4 C++ tutorial we'll learn how to create a health bar on the user's Heads Up Display while applying and receiving damage using the <code>ReceivePointDamage</code> and the <code>ApplyPointDamage</code> functions. We will create a fire object that applies damage on overlap and when the user receives damage the health bar will respond accordingly. We will also make a magic bar and bind it to the player's <code>OnFire</code> method. We'll also create <strong>MedKits</strong> for the player and a magic meter that automatically refills the magic bar after 5 seconds. Let's begin.</p>\n<p>Before going any further, since we'll be using <strong>UMGs</strong> and <strong>UserWidgets</strong> in our game, we need to update our build file. In the <code>PublicDependencyModuleNames</code> we need to add <code>UMG</code>, <code>Slate</code>, and <code>SlateCore</code>. Below is my final build file.</p>\n<h3>UnrealBuild.cs</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">using</span> UnrealBuildTool<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UnrealCPP</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token class-name\">ModuleRules</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token function\">UnrealCPP</span><span class=\"token punctuation\">(</span>ReadOnlyTargetRules Target<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">base</span><span class=\"token punctuation\">(</span>Target<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tPCHUsage <span class=\"token operator\">=</span> PCHUsageMode<span class=\"token punctuation\">.</span>UseExplicitOrSharedPCHs<span class=\"token punctuation\">;</span>\n\n\t\tPublicDependencyModuleNames<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"Core\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CoreUObject\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Engine\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"InputCore\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"HeadMountedDisplay\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UMG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Slate\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SlateCore\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, we'll work on updating our <code>Character</code> file. Let's go ahead and jump right into the <code>Character's</code> header file. My file is titled <code>UnrealCPPCharacter.h</code>.</p>\n<p>The first thing we'll do is include the <code>TimelineComponent.h</code> and the <code>BoxComponent.h</code> at the top of the file. We'll be referenceing these elements throughout the tutorial.</p>\n<h4>include files</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/TimelineComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/BoxComponent.h\"</span></span></code></pre></div>\n<p>Next we'll override the <code>Tick</code> function, we'll put it right below where we override the <code>BeginPlay</code> function inside the <code>header</code> file.</p>\n<h4>Override BeginPlay and Tick</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next we'll define all of our variables and functions. There's a lot of them, so I won't cover all of them in depth here, but we will be using them all throughout our program. The variables we are defining are going to be used to define <strong>Health</strong> and <strong>Magic</strong> numbers and percentages that help us bind the variables to the UI.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">  <span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> FullHealth<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> Health<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> HealthPercentage<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> PreviousHealth<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> FullMagic<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> Magic<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> MagicPercentage<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> PreviousMagic<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> MagicValue<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> redFlash<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\tUCurveFloat <span class=\"token operator\">*</span>MagicCurve<span class=\"token punctuation\">;</span>\n\n\tFTimeline MyTimeline<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> CurveFloatValue<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> TimelineValue<span class=\"token punctuation\">;</span>\n\tFTimerHandle MemberTimerHandle<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> bCanUseMagic<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Get Health */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">GetHealth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Get Magic */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">GetMagic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/** Update Health */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintCallable<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">UpdateHealth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> HealthChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/** Update Magic */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintCallable<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">UpdateMagic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> MagicChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Get Health Text */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\tFText <span class=\"token function\">GetHealthIntText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Get Magic Text */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\tFText <span class=\"token function\">GetMagicIntText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Damage Timer */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">DamageTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Damage State */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetDamageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Magic Value */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetMagicValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Damage State */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetMagicState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Damage State */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetMagicChange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> MagicChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Play Flash */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">PlayFlash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UMaterialInterface</span><span class=\"token operator\">*</span> GunDefaultMaterial<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UMaterialInterface</span><span class=\"token operator\">*</span> GunOverheatMaterial<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">ReceivePointDamage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Damage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> UDamageType <span class=\"token operator\">*</span> DamageType<span class=\"token punctuation\">,</span> FVector HitLocation<span class=\"token punctuation\">,</span> FVector HitNormal<span class=\"token punctuation\">,</span> UPrimitiveComponent <span class=\"token operator\">*</span> HitComponent<span class=\"token punctuation\">,</span> FName BoneName<span class=\"token punctuation\">,</span> FVector ShotFromDirection<span class=\"token punctuation\">,</span> AController <span class=\"token operator\">*</span> InstigatedBy<span class=\"token punctuation\">,</span> AActor <span class=\"token operator\">*</span> DamageCauser<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult <span class=\"token operator\">&amp;</span> HitInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Next, we'll move in the <strong>Character's</strong> <code>.cpp</code> file.</p>\n<p>First at the top of the file include <code>KistmetMathLibrary.h</code> and <code>TimeManager.h</code></p>\n<h4>include files in the character's .cpp file</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPProjectile.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Animation/AnimInstance.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Camera/CameraComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/CapsuleComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/InputComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/InputSettings.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HeadMountedDisplayFunctionLibrary.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MotionControllerComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"XRMotionControllerBase.h\"</span> <span class=\"token comment\">// for FXRMotionControllerBase::RightHandSourceId</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/KismetMathLibrary.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"TimerManager.h\"</span></span></code></pre></div>\n<p>Next, in the <code>BeginPlay</code> function we will set our values for character and establish our timeline. A lot of this can be done in the <code>Constructor</code> function, but for this tutorial it will be easier to test the on the player when it is done in the <code>BeginPlay</code> function. We'll establish our character's health and magic attributes to track how much of each the character has and what percentage that represents. The HUD's health bar will always represent a percentage of the players current health so we need to always track the percentage of the player's current health to what the full health can potentially be. The same can be said for magic. Also, in the <code>BeginPlay</code> function we will establish our functions and callbacks for our <code>FTimeline</code> by using <code>FOnTimelineFloat</code> and <code>FOnTimelineEventStatic</code>.</p>\n<h4>BeginPlay function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Call the base class  </span>\n\tSuper<span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n\n\tFullHealth <span class=\"token operator\">=</span> <span class=\"token number\">1000.0f</span><span class=\"token punctuation\">;</span>\n\tHealth <span class=\"token operator\">=</span> FullHealth<span class=\"token punctuation\">;</span>\n\tHealthPercentage <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">;</span>\n\tPreviousHealth <span class=\"token operator\">=</span> HealthPercentage<span class=\"token punctuation\">;</span>\n\tbCanBeDamaged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tFullMagic <span class=\"token operator\">=</span> <span class=\"token number\">100.0f</span><span class=\"token punctuation\">;</span>\n\tMagic <span class=\"token operator\">=</span> FullMagic<span class=\"token punctuation\">;</span>\n\tMagicPercentage <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">;</span>\n\tPreviousMagic <span class=\"token operator\">=</span> MagicPercentage<span class=\"token punctuation\">;</span>\n\tMagicValue <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tbCanUseMagic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MagicCurve<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        FOnTimelineFloat TimelineCallback<span class=\"token punctuation\">;</span>\n        FOnTimelineEventStatic TimelineFinishedCallback<span class=\"token punctuation\">;</span>\n\n        TimelineCallback<span class=\"token punctuation\">.</span><span class=\"token function\">BindUFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">FName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SetMagicValue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TimelineFinishedCallback<span class=\"token punctuation\">.</span><span class=\"token function\">BindUFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FName<span class=\"token punctuation\">{</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SetMagicState\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        MyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">AddInterpFloat</span><span class=\"token punctuation\">(</span>MagicCurve<span class=\"token punctuation\">,</span> TimelineCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        MyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">SetTimelineFinishedFunc</span><span class=\"token punctuation\">(</span>TimelineFinishedCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//Attach gun mesh component to Skeleton, doing it here because the skeleton is not yet created in the constructor</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">AttachToComponent</span><span class=\"token punctuation\">(</span>Mesh1P<span class=\"token punctuation\">,</span> <span class=\"token function\">FAttachmentTransformRules</span><span class=\"token punctuation\">(</span>EAttachmentRule<span class=\"token double-colon punctuation\">::</span>SnapToTarget<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GripPoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Show or hide the two versions of the gun based on whether or not we're using motion controllers.</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bUsingMotionControllers<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tVR_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tVR_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the <code>Tick</code> function we need to connect the <code>MyTimeline</code> to each frame represented by <code>DeltaTime</code>.</p>\n<h4>Tick function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tMyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">TickTimeline</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Since I want to add in a <strong>Magic</strong> function to the game, I am going to use the <code>OnFire</code> method already provided to say that the player can only shoot once every two seconds. I want this to kind of be like the gun overheating preventing another shot before the gun cools down. So we'll add extra conditions to the <code>if</code> statement which is wrapping the function preventing the player from firing when <code>bCanUseMagic</code> is <code>false</code> and when <code>Magic</code> is at <strong>0</strong>. When the condition passes as <code>true</code> the player can then successfully fire (or use their magic, in our test example). When the gun is fired we <code>Stop()</code> the timeline, <code>Clear</code> the automatic timer that will replenish the magic meter after 5 seconds, run <code>SetMagicChange</code> (we'll create the function later), and then restart our replenish timer. Below is my final <code>OnFire</code> function.</p>\n<h4>OnFire function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// try and fire a projectile</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ProjectileClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsNearlyZero</span><span class=\"token punctuation\">(</span>Magic<span class=\"token punctuation\">,</span> <span class=\"token number\">0.001f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> bCanUseMagic<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tUWorld<span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> World <span class=\"token operator\">=</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>World <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bUsingMotionControllers<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">const</span> FRotator SpawnRotation <span class=\"token operator\">=</span> VR_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">const</span> FVector SpawnLocation <span class=\"token operator\">=</span> VR_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tWorld<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">SpawnActor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPProjectile<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>ProjectileClass<span class=\"token punctuation\">,</span> SpawnLocation<span class=\"token punctuation\">,</span> SpawnRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">const</span> FRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">// MuzzleOffset is in camera space, so transform it to world space before offsetting from the character location to find the final muzzle position</span>\n\t\t\t\t<span class=\"token keyword\">const</span> FVector SpawnLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token comment\">//Set Spawn Collision Handling Override</span>\n\t\t\t\tFActorSpawnParameters ActorSpawnParams<span class=\"token punctuation\">;</span>\n\t\t\t\tActorSpawnParams<span class=\"token punctuation\">.</span>SpawnCollisionHandlingOverride <span class=\"token operator\">=</span> ESpawnActorCollisionHandlingMethod<span class=\"token double-colon punctuation\">::</span>AdjustIfPossibleButDontSpawnIfColliding<span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token comment\">// spawn the projectile at the muzzle</span>\n\t\t\t\tWorld<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">SpawnActor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPProjectile<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>ProjectileClass<span class=\"token punctuation\">,</span> SpawnLocation<span class=\"token punctuation\">,</span> SpawnRotation<span class=\"token punctuation\">,</span> ActorSpawnParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token comment\">// try and play the sound if specified</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireSound <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlaySoundAtLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireSound<span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token comment\">// try and play a firing animation if specified</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireAnimation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token comment\">// Get the animation object for the arms mesh</span>\n\t\t\t\t\tUAnimInstance<span class=\"token operator\">*</span> AnimInstance <span class=\"token operator\">=</span> Mesh1P<span class=\"token operator\">-></span><span class=\"token function\">GetAnimInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AnimInstance <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t\tAnimInstance<span class=\"token operator\">-></span><span class=\"token function\">Montage_Play</span><span class=\"token punctuation\">(</span>FireAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\tMyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">GetWorldTimerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ClearTimer</span><span class=\"token punctuation\">(</span>MagicTimerHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">SetMagicChange</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">20.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">GetWorldTimerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetTimer</span><span class=\"token punctuation\">(</span>MagicTimerHandle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>UpdateMagic<span class=\"token punctuation\">,</span> <span class=\"token number\">5.0f</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, we'll create two functions that will simply return the <code>HealthPercetange</code> and <code>MagicPercentage</code> respectively. This functions will allow the UI to bind themselves to these numbers thus always watching and reacting to when these numbers change.</p>\n<h4>return HealthPercentage and MagicPercentage</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">float</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetHealth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> HealthPercentage<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetMagic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> MagicPercentage<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The next two functions are necessary for the same reasons as the previous two functions, but instead of returning a <code>float</code>, we'll return <code>FText</code> so the UI can display the number as text. I'm rounding the numbers then creating strings to make the text more readable.</p>\n<h4>return FText</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">FText <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetHealthIntText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tint32 HP <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RoundHalfFromZero</span><span class=\"token punctuation\">(</span>HealthPercentage <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString HPS <span class=\"token operator\">=</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromInt</span><span class=\"token punctuation\">(</span>HP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString HealthHUD <span class=\"token operator\">=</span> HPS <span class=\"token operator\">+</span> <span class=\"token function\">FString</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFText HPText <span class=\"token operator\">=</span> <span class=\"token class-name\">FText</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromString</span><span class=\"token punctuation\">(</span>HealthHUD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> HPText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nFText <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetMagicIntText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tint32 MP <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RoundHalfFromZero</span><span class=\"token punctuation\">(</span>MagicPercentage<span class=\"token operator\">*</span>FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString MPS <span class=\"token operator\">=</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromInt</span><span class=\"token punctuation\">(</span>MP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString FullMPS <span class=\"token operator\">=</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromInt</span><span class=\"token punctuation\">(</span>FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString MagicHUD <span class=\"token operator\">=</span> MPS <span class=\"token operator\">+</span> <span class=\"token function\">FString</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> FullMPS<span class=\"token punctuation\">;</span>\n\tFText MPText <span class=\"token operator\">=</span> <span class=\"token class-name\">FText</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromString</span><span class=\"token punctuation\">(</span>MagicHUD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> MPText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next we'll create one tow functions that toggle the player's invincibility state. In our game, when a player is receives damage they have 2 seconds of invincibility. Each actor by default has the <code>bCanBeDamaged</code> bool attached to them. When <code>bCanBeDamaged</code> is true allows the <code>ReceivePointDamage</code> function to run, when it's false, the <code>ReceivePointDamage</code> will not trigger.</p>\n<h4>toggle player's invincibility state</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetDamageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tbCanBeDamaged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DamageTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GetWorldTimerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetTimer</span><span class=\"token punctuation\">(</span>MemberTimerHandle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>SetDamageState<span class=\"token punctuation\">,</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The next two functions will deal with the Magic's timeline curve. The <code>SetMagicValue</code> function will run in conjunction with the timeline changing the <code>Magic</code> and <code>MagicPercentage</code> values as the timeline progresses. The <code>SetMagicState</code> function is called after the timeline finishes, this will revert the desired values and gun material back to their respective default values.</p>\n<h4>magic functions</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetMagicValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tTimelineValue <span class=\"token operator\">=</span> MyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">GetPlaybackPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    CurveFloatValue <span class=\"token operator\">=</span> PreviousMagic <span class=\"token operator\">+</span> MagicValue<span class=\"token operator\">*</span>MagicCurve<span class=\"token operator\">-></span><span class=\"token function\">GetFloatValue</span><span class=\"token punctuation\">(</span>TimelineValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMagic <span class=\"token operator\">=</span> CurveFloatValue<span class=\"token operator\">*</span>FullHealth<span class=\"token punctuation\">;</span>\n\tMagic <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>Magic<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    MagicPercentage <span class=\"token operator\">=</span> CurveFloatValue<span class=\"token punctuation\">;</span>\n\tMagicPercentage <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>MagicPercentage<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetMagicState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tbCanUseMagic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tMagicValue <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>GunDefaultMaterial<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetMaterial</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> GunDefaultMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The <code>PlayFlash</code> function simply returns a bool that lets our UI know if it should play the red flash animation (we'll set up the UI and animation later in the tutorial).</p>\n<h4>PlayFlash</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>redFlash<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tredFlash <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The next two functions will affect the player's health. The <code>ReceivePointDamage</code> function will run each time the player interacts with an element that calls the <code>ApplyPointDamage</code> function. In our example we'll create a fire actor later on that will run <code>ApplyPointDamage</code>. In our <code>ReceivePointDamage</code> function we are simply toggling our <code>bCanBeDamaged</code> bool to trigger our invincibility, toggling our <code>redFlash</code> bool to trigger the animation, running the <code>UpdateHealth</code> function with the <code>Damage</code> value passed through as a parameter, and then calling <code>DamageTimer</code> to revert the <code>bCanBeDamaged</code> bool back to <code>true</code>. The <code>UpdateHealth</code> function immediately changes and clamps the <code>Health</code> value then it sets <code>PreviousHealth</code> and <code>HealthPercentage</code>.</p>\n<h4>ReceiveDamage and UpdateHealth</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ReceivePointDamage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Damage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> UDamageType <span class=\"token operator\">*</span> DamageType<span class=\"token punctuation\">,</span> FVector HitLocation<span class=\"token punctuation\">,</span> FVector HitNormal<span class=\"token punctuation\">,</span> UPrimitiveComponent <span class=\"token operator\">*</span> HitComponent<span class=\"token punctuation\">,</span> FName BoneName<span class=\"token punctuation\">,</span> FVector ShotFromDirection<span class=\"token punctuation\">,</span> AController <span class=\"token operator\">*</span> InstigatedBy<span class=\"token punctuation\">,</span> AActor <span class=\"token operator\">*</span> DamageCauser<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult <span class=\"token operator\">&amp;</span> HitInfo<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tbCanBeDamaged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tredFlash <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">UpdateHealth</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>Damage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DamageTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">UpdateHealth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> HealthChange<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tHealth <span class=\"token operator\">+=</span> HealthChange<span class=\"token punctuation\">;</span>\n\tHealth <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>Health<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> FullHealth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPreviousHealth <span class=\"token operator\">=</span> HealthPercentage<span class=\"token punctuation\">;</span>\n\tHealthPercentage <span class=\"token operator\">=</span> Health<span class=\"token operator\">/</span>FullHealth<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The final two functions are magic related and are similar to the health functions. <code>UpdateMagic</code> sets the <code>Magic</code> values and starts the timeline to get the player's magic meter back to 100%. <code>UpdateMagic</code> will run after 5 seconds of no magic firing to fill up the player's magic bar. <code>SetMagicChange</code> will toggle <code>bCanUseMagic</code> bool, set <code>PreviousMagic</code>, set <code>MagicValue</code>, change the gun's material to indicate overheating, the call <code>PlayFromStart</code> on the magic float timeline curve.</p>\n<h4>UpdateMagic and SetMagicChange</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">UpdateMagic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tPreviousMagic <span class=\"token operator\">=</span> MagicPercentage<span class=\"token punctuation\">;</span>\n\tMagicPercentage <span class=\"token operator\">=</span> Magic<span class=\"token operator\">/</span>FullMagic<span class=\"token punctuation\">;</span>\n\tMagicValue <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">;</span>\n\tMyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">PlayFromStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetMagicChange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> MagicChange<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tbCanUseMagic <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tPreviousMagic <span class=\"token operator\">=</span> MagicPercentage<span class=\"token punctuation\">;</span>\n\tMagicValue <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>MagicChange<span class=\"token operator\">/</span>FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>GunOverheatMaterial<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetMaterial</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> GunOverheatMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tMyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">PlayFromStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We are done with the character's <code>.cpp</code> file. Let's quickly move into the <code>GameMode</code> files.</p>\n<p>In the <code>GameMode</code> header file we'll create an <code>enum</code> class and create player state functions to track player state. We will override the <code>Tick</code> function because we need to always check if the player is dead or not. Below is the final <code>GameMode</code> <code>.cpp</code> file.</p>\n<h4>UnrealCPPGameMode.h</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/GameModeBase.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPGameMode.generated.h\"</span></span>\n\n<span class=\"token comment\">//enum to store the current state of gameplay</span>\n<span class=\"token function\">UENUM</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">enum</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EGamePlayState</span>\n<span class=\"token punctuation\">{</span>\n\tEPlaying<span class=\"token punctuation\">,</span>\n\tEGameOver<span class=\"token punctuation\">,</span>\n\tEUnknown\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span>minimalapi<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPGameMode</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AGameModeBase</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">AUnrealCPPGameMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\tAUnrealCPPCharacter<span class=\"token operator\">*</span> MyCharacter<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">/** Returns the current playing state */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\tEGamePlayState <span class=\"token function\">GetCurrentState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Sets a new playing state */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetCurrentState</span><span class=\"token punctuation\">(</span>EGamePlayState NewState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span> \n\t<span class=\"token comment\">/**Keeps track of the current playing state */</span>\n\tEGamePlayState CurrentState<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**Handle any function calls that rely upon changing the playing state of our game */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">HandleNewState</span><span class=\"token punctuation\">(</span>EGamePlayState NewState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, in the <code>GameMode</code> <code>.cpp</code> file we first find the player in the <code>BeginPlay</code> function then in the <code>Tick</code> function we always check if the player's health is above 0. If the player's health is below 0 we will simply restart the level.</p>\n<h4>UnrealCPPGameMode.cpp</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPGameMode.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPHUD.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Engine/World.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UObject/ConstructorHelpers.h\"</span></span>\n\n<span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPGameMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">:</span> <span class=\"token function\">Super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// set default pawn class to our Blueprinted character</span>\n\t<span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FClassFinder<span class=\"token operator\">&lt;</span>APawn<span class=\"token operator\">></span> <span class=\"token function\">PlayerPawnClassFinder</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/FirstPersonCPP/Blueprints/FirstPersonCharacter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tDefaultPawnClass <span class=\"token operator\">=</span> PlayerPawnClassFinder<span class=\"token punctuation\">.</span>Class<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// use our custom HUD class</span>\n\tHUDClass <span class=\"token operator\">=</span> <span class=\"token class-name\">AUnrealCPPHUD</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StaticClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">SetCurrentState</span><span class=\"token punctuation\">(</span>EGamePlayState<span class=\"token double-colon punctuation\">::</span>EPlaying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tMyCharacter <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPCharacter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetPlayerPawn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetMapName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MyCharacter<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsNearlyZero</span><span class=\"token punctuation\">(</span>MyCharacter<span class=\"token operator\">-></span><span class=\"token function\">GetHealth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">SetCurrentState</span><span class=\"token punctuation\">(</span>EGamePlayState<span class=\"token double-colon punctuation\">::</span>EGameOver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nEGamePlayState <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetCurrentState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> CurrentState<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetCurrentState</span><span class=\"token punctuation\">(</span>EGamePlayState NewState<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tCurrentState <span class=\"token operator\">=</span> NewState<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">HandleNewState</span><span class=\"token punctuation\">(</span>CurrentState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">HandleNewState</span><span class=\"token punctuation\">(</span>EGamePlayState NewState<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>NewState<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> EGamePlayState<span class=\"token double-colon punctuation\">::</span>EPlaying<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// do nothing</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// Unknown/default state</span>\n\t\t<span class=\"token keyword\">case</span> EGamePlayState<span class=\"token double-colon punctuation\">::</span>EGameOver<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OpenLevel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">FName</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// Unknown/default state</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> EGamePlayState<span class=\"token double-colon punctuation\">::</span>EUnknown<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// do nothing</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We're done with the <code>GameMode</code> files.</p>\n<p>Next, we'll create our <code>CampFire</code> actor that will actually apply damage to the player. Create a new <code>C++</code> actor class and call it <strong>CampFire</strong>. In <code>CampFire.h</code> we will add our properties and functions that we will be using throughout the <code>.cpp</code>\nfile. Some things in the <code>.h</code> file include the overlap functions, a particle component that will be set to our fire particle later on in the tutorial, properties necessary for the <code>ApplyPointDamage</code> function. Below is the final <code>CampFire.h</code> file.</p>\n<h4>CampFile.h</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/BoxComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Particles/ParticleSystemComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CampFire.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> ACampFire <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">ACampFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tUParticleSystemComponent<span class=\"token operator\">*</span> Fire<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tUBoxComponent<span class=\"token operator\">*</span> MyBoxComponent<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tTSubclassOf<span class=\"token operator\">&lt;</span>UDamageType<span class=\"token operator\">></span> FireDamageType<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tAActor<span class=\"token operator\">*</span> MyCharacter<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tFHitResult MyHit<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> bCanApplyDamage<span class=\"token punctuation\">;</span>\n\tFTimerHandle FireTimerHandle<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare overlap begin function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare overlap end function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">ApplyFireDamage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, we'll move into the <code>CampFire.cpp</code> file. Include both <code>Kismet/GameplayStatics.h</code> and <code>TimerManager.h</code>. In <code>constructor</code> function we'll setup our <code>BoxComponent</code>, <code>ParticleComponent</code>, and connect the overlap functions to the <code>BoxComponent</code>. Next, we'll create the <code>OnOverlapBegin</code> function, if the conditions pass as <code>true</code>, we'll set the necessary parameters to and then trigger our the fire timer to run and loop the <code>ApplyFireDamage</code> function after <strong>2.2s</strong>. The reason why the timer is set to 2.2 seconds is because our player has invincibility that lasts 2 seconds so we want the <code>ApplyFireDamage</code> function to run right after the invincibility is turned off, so the extra 0.2 seconds is a buffer to prevent conflicts. <code>OnOverlapEnd</code> is where we clear the timer and set <code>bCanApplyDamage</code> indicating the fire cannot apply damage to the player. The <code>ApplyFireDamage</code> function first checks if <code>bCanApplyDamage</code> and then runs <code>ApplyPointDamage</code> with <code>MyCharcter</code> as the actor to apply damage and the fire will deal <strong>200.0f</strong> points of damage. <code>ApplyPointDamage</code> is a function inherited from <strong>GameplayStatics</strong>. Below is the final <code>CampFire.cpp</code> file.</p>\n<h4>CampFire.cpp</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CampFire.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"TimerManager.h\"</span></span>\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">ACampFire</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACampFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tMyBoxComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UBoxComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My Box Component\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    MyBoxComponent<span class=\"token operator\">-></span><span class=\"token function\">InitBoxExtent</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">50.0f</span><span class=\"token punctuation\">,</span><span class=\"token number\">50.0f</span><span class=\"token punctuation\">,</span><span class=\"token number\">50.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    RootComponent <span class=\"token operator\">=</span> MyBoxComponent<span class=\"token punctuation\">;</span>\n\n    Fire <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UParticleSystemComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My Fire\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Fire<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Fire<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    MyBoxComponent<span class=\"token operator\">-></span>OnComponentBeginOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACampFire<span class=\"token double-colon punctuation\">::</span>OnOverlapBegin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    MyBoxComponent<span class=\"token operator\">-></span>OnComponentEndOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACampFire<span class=\"token double-colon punctuation\">::</span>OnOverlapEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    bCanApplyDamage <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACampFire</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> OtherComp <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        bCanApplyDamage <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        MyCharacter <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AActor<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        MyHit <span class=\"token operator\">=</span> SweepResult<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">GetWorldTimerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetTimer</span><span class=\"token punctuation\">(</span>FireTimerHandle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACampFire<span class=\"token double-colon punctuation\">::</span>ApplyFireDamage<span class=\"token punctuation\">,</span> <span class=\"token number\">2.2f</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACampFire</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    bCanApplyDamage <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GetWorldTimerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ClearTimer</span><span class=\"token punctuation\">(</span>FireTimerHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACampFire</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ApplyFireDamage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bCanApplyDamage<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ApplyPointDamage</span><span class=\"token punctuation\">(</span>MyCharacter<span class=\"token punctuation\">,</span> <span class=\"token number\">200.0f</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MyHit<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireDamageType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, we'll create the <strong>MedKit</strong> for players to pick up to regain health. Create a new actor and call it <code>MedKit</code>. In the <code>.h</code> file include the character <code>.h</code> file, in my example my character file is called <code>UnrealCPPCharacter.h</code>. Then add <code>OnOverlap</code> <code>UFUNCTION()</code>, then add a character <code>UPROPERTY</code>. Below is the final <code>MedKit.h</code> file.</p>\n<h4>MedKit.h</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MedKit.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> AMedKit <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">AMedKit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlap</span><span class=\"token punctuation\">(</span>AActor<span class=\"token operator\">*</span> MyOverlappedActor<span class=\"token punctuation\">,</span> AActor<span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tAUnrealCPPCharacter<span class=\"token operator\">*</span> MyCharacter<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, inside the <code>MedKit.cpp</code>, in the constructor function we'll setup the <code>OnOverlap</code> delegate. Every actor has an <code>OnOverlap</code> delegate. Next, create the <code>OnOverlap</code> function. In the <code>OnOverlap</code> function we check if the the overlapped actor is inherits from our character class (is the actor our player), then we check if the player's health less than 100%, then we run the character's function <code>UpdateHealth</code> with specified amount, in this example I added in <code>100.0f</code> point of health, then we destroy the actor. Earlier in the tutorial, I set the character's <code>FullHealth</code> variable to <code>1000.0f</code>, so <code>100.0f</code> is 10% of the player's health. Below is the final <code>MedKit.cpp</code>. You'll notice in the below code that I omit the <code>BeginPlay</code> and <code>Tick</code> functions because they are not needed in this actor.</p>\n<h4>MedKit.cpp</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MedKit.h\"</span></span>\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">AMedKit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AMedKit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tOnActorBeginOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AMedKit<span class=\"token double-colon punctuation\">::</span>OnOverlap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AMedKit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlap</span><span class=\"token punctuation\">(</span>AActor<span class=\"token operator\">*</span> MyOverlappedActor<span class=\"token punctuation\">,</span> AActor<span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tMyCharacter <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPCharacter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MyCharacter <span class=\"token operator\">&amp;&amp;</span> MyCharacter<span class=\"token operator\">-></span><span class=\"token function\">GetHealth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tMyCharacter<span class=\"token operator\">-></span><span class=\"token function\">UpdateHealth</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>//////// AFTER the UUSERWIDGET is created ////////</p>\n<p>Now let's go into the main file that establishes the HUD, in my project the HUD file is called <code>UnrealCPPHUD.h</code>. Inside this header file we'll add two <code>USERWIDGET</code> properties that we'll use in the <code>.cpp</code> file. We'll also <code>override</code> the <code>BeginPlay</code> function because we will be adding the <code>UserWidget</code> to the viewport in that function. Below is the final HUD <code>header</code> file.</p>\n<h4>UnrealCPPHUD.h</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once </span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/HUD.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPHUD.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPHUD</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AHUD</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">AUnrealCPPHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Primary draw call for the HUD */</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">DrawHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">/** Crosshair asset pointer */</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UTexture2D</span><span class=\"token operator\">*</span> CrosshairTex<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\tTSubclassOf<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UUserWidget</span><span class=\"token operator\">></span> HUDWidgetClass<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UUserWidget</span><span class=\"token operator\">*</span> CurrentWidget<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, inside the <code>HUD</code>'s <code>.cpp</code> file, in <code>constructor</code> function we will find the <code>Health_UI</code> that will create and set it to the <code>HUDWidgetClass</code>. In the <code>BeginPlay</code> function we'll set our <code>CurrentWidget</code> property and if we're successful in creating the widget we'll run <code>AddToViewport</code>. Below is the final <code>HUD</code> <code>.cpp</code> file.</p>\n<h4>UnrealCPPHUD.cpp</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPHUD.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Engine/Canvas.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Engine/Texture2D.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"TextureResource.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CanvasItem.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UObject/ConstructorHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Blueprint/UserWidget.h\"</span></span>\n\n\n<span class=\"token class-name\">AUnrealCPPHUD</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Set the crosshair texture</span>\n\t<span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UTexture2D<span class=\"token operator\">></span> <span class=\"token function\">CrosshairTexObj</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/FirstPerson/Textures/FirstPersonCrosshair\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tCrosshairTex <span class=\"token operator\">=</span> CrosshairTexObj<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FClassFinder<span class=\"token operator\">&lt;</span>UUserWidget<span class=\"token operator\">></span> <span class=\"token function\">HealthBarObj</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/FirstPerson/UI/Health_UI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tHUDWidgetClass <span class=\"token operator\">=</span> HealthBarObj<span class=\"token punctuation\">.</span>Class<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPHUD</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DrawHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DrawHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Draw very simple crosshair</span>\n\n\t<span class=\"token comment\">// find center of the Canvas</span>\n\t<span class=\"token keyword\">const</span> FVector2D <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>Canvas<span class=\"token operator\">-></span>ClipX <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> Canvas<span class=\"token operator\">-></span>ClipY <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// offset by half the texture's dimensions so that the center of the texture aligns with the center of the Canvas</span>\n\t<span class=\"token keyword\">const</span> FVector2D <span class=\"token function\">CrosshairDrawPosition</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>Center<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t   <span class=\"token punctuation\">(</span>Center<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">+</span> <span class=\"token number\">20.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// draw the crosshair</span>\n\tFCanvasTileItem <span class=\"token function\">TileItem</span><span class=\"token punctuation\">(</span> CrosshairDrawPosition<span class=\"token punctuation\">,</span> CrosshairTex<span class=\"token operator\">-></span>Resource<span class=\"token punctuation\">,</span> FLinearColor<span class=\"token double-colon punctuation\">::</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTileItem<span class=\"token punctuation\">.</span>BlendMode <span class=\"token operator\">=</span> SE_BLEND_Translucent<span class=\"token punctuation\">;</span>\n\tCanvas<span class=\"token operator\">-></span><span class=\"token function\">DrawItem</span><span class=\"token punctuation\">(</span> TileItem <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPHUD</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HUDWidgetClass <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentWidget <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateWidget</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UUserWidget<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> HUDWidgetClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CurrentWidget<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tCurrentWidget<span class=\"token operator\">-></span><span class=\"token function\">AddToViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Inside the UE4 editor we have to create a Float Curve Timeline. The timeline will be used for smooth transitions for the magic meter. In your content folder, right click, go to Miscellaneous > Curve and create new Curve Float. Open the curve float and create a new key by right clicking and selecting new key. In the top left set the values of the first key to have the values of 0 for Time and Value. Create a second key and set its Time value to 2.0 and its Value property to 1.0. Hold SHIFT, select both keys and then click Auto in the top bar to give the curve a smooth beginning and end.</p>\n<h3>Magic Float Curve</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/float-curve-two-seconds_qyux5a.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/float-curve-two-seconds_qyux5a.png\" alt=\"magic float curve\" title=\"magic float curve\"></a></p>\n<p>Next, in your content folder, right click then > User Interface then > select Widget Blueprint. Inside the Widget Blueprint drag and drop an progress bar property into the viewport. Put it in the top left corner. We are going to mimic the Wither 3 health bar. Below are the images we will be using. There is a background image with black fill and a full health bar with a red fill. Drag both images into your content folder, then convert them to sprites. These two images can be placed in the progress bar's details panel where both images can be placed respectively.</p>\n<h3>Health Bar Empty</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-empty_za1pqd.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-empty_za1pqd.png\" alt=\"health bar empty\" title=\"health bar empty\"></a></p>\n<h3>Health Bar Full</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-full_uahmmd.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-full_uahmmd.png\" alt=\"health bar full\" title=\"health bar full\"></a></p>\n<p>Also, provided is the Wither 3 symbol which can be placed to the left of the health bar, this is only for style and aesthetics.</p>\n<h3>Witcher Symbol</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/witcher-symbol_x69wji.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/witcher-symbol_x69wji.png\" alt=\"Witcher Symbol\" title=\"Witcher Symbol\"></a></p>\n<h3>Create Sprites</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/convert-to-sprite_vydmyq.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/convert-to-sprite_vydmyq.png\" alt=\"Create Sprites\" title=\"Create Sprites\"></a></p>\n<h3>Health Bar UI 1</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-1_gbl7av.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-1_gbl7av.png\" alt=\"Health Bar UI 1\" title=\"Health Bar UI 1\"></a></p>\n<h3>Health Bar UI 2</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-2_hy4m31.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-2_hy4m31.png\" alt=\"Health Bar UI 2\" title=\"Health Bar UI 2\"></a></p>\n<h3>Health Bar UI 3</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-3_a114hj.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-3_a114hj.png\" alt=\"Health Bar UI 3\" title=\"Health Bar UI 3\"></a></p>\n<p>Drag and drop a text element next to the health bar. This will represent the health in percentage</p>\n<h3>Health Bar UI 4</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-4_beajld.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-4_beajld.png\" alt=\"Health Bar UI 4\" title=\"Health Bar UI 4\"></a></p>\n<h3>Health Bar UI 5</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-5_fq0v6z.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-5_fq0v6z.png\" alt=\"Health Bar UI 5\" title=\"Health Bar UI 5\"></a></p>\n<p>Drag in a second progress bar and put it above the health bar. Make it skinnier and design it as you wish. This will be the magic meter. Then drag in another text element and rest it next to the magic meter. This will represent the magic as numbers.</p>\n<h3>Health Bar UI 6</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-6_tihnin.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-6_tihnin.png\" alt=\"Health Bar UI 6\" title=\"Health Bar UI 6\"></a></p>\n<h3>Health Bar UI 7</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-7_tfzzhh.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-7_tfzzhh.png\" alt=\"Health Bar UI 7\" title=\"Health Bar UI 7\"></a></p>\n<p>In the content folder drag the red image provided image below into your content folder. Covert the image to a sprite. Drag an image element into your UserWidget. Set the image as the red image. Anchor the image to bee full screen. We are going to create a red flash animation. Use the animation tools below to create a 2 second animation that changes the alpha of the red image from 0 to 0.5 every half second. We will use this animation to indicate that the player is receiving damage.</p>\n<h3>Red Image</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/red_wvyvum.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/red_wvyvum.png\" alt=\"Red Image\" title=\"Red Image\"></a></p>\n<h3>Health Bar UI 8</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-8_eq9tsp.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-8_eq9tsp.png\" alt=\"Health Bar UI 8\" title=\"Health Bar UI 8\"></a></p>\n<h3>Health Bar UI 9</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-9_lqp9eh.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui-9_lqp9eh.png\" alt=\"Health Bar UI 9\" title=\"Health Bar UI 9\"></a></p>\n<p>For this next part we have to do some very quick work in blueprints to bind these UI elements to our C++ functions. Select the Health Bar UI element and under the <strong>Progress</strong> tab for percent attribute select <strong>Bind</strong>, then <strong>Create Binding</strong>. This will open the UI's bind function graph. In the event graph we will simply find the player, cast to the player and then run the function to return the desired value. Make the blueprint cast function pure by right clicking it and clicking <strong>Convert to Pure Cast</strong>. Follow this same process for text elements and the magic elements. Below are images of the blueprint functions for the four UI elements.</p>\n<h3>Bind Health Bar Percentage</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-health_hhyouh.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-health_hhyouh.png\" alt=\"Health Bar BP\" title=\"Health Bar BP\"></a></p>\n<h3>Bind Health Bar Text</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-health-text_jqgqtf.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-health-text_jqgqtf.png\" alt=\"Health Bar BP Text\" title=\"Health Bar BP Text\"></a></p>\n<h3>Bind Magic Bar Percentage</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-magic_la1l93.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-magic_la1l93.png\" alt=\"Magic Bar BP\" title=\"Magic Bar BP\"></a></p>\n<h3>Bind Magic Bar Text</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-magic-text_izzjwt.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-magic-text_izzjwt.png\" alt=\"Magic Bar BP Text\" title=\"Magic Bar Text\"></a></p>\n<p>Next, we will bind the animation in the User Widget's Event Graph. We will use the <code>Tick</code> function to check if we need to run the animation. We'll use a simple to bool to determine if we need to play the animation. The animation created in the UI, I called it <strong>Flash</strong> will be a variable under the Animation variables section.</p>\n<h3>Animation bind to Tick Function</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-red-flash_ffyq9w.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/bp-get-red-flash_ffyq9w.png\" alt=\"Event Graph Animation BP\" title=\"Event Graph Animation BP\"></a></p>\n<p>Inside the editor, compile the code. Drag in the camp fire. Set the particle component to have the fire particle effect, set overlap events to true, then set collision presets name to Trigger. Then drag in the MedKit, add a mesh component, resize it if necessary, set overlap events to true, then set collision presets name to Trigger.</p>\n<h3>Generate Overlap Events</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/generate-overlap-events_ex2vzh.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/generate-overlap-events_ex2vzh.png\" alt=\"Generate Overlap Events\" title=\"Generate Overlap Events\"></a></p>\n<h3>Set Collision Presets</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/collision-presets_zisyqo.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/collision-presets_zisyqo.png\" alt=\"Set Collision Presets\" title=\"Set Collision Presets\"></a></p>\n<p>In the Player character set the materials to two materials you want to use to switch between.</p>\n<h3>Set Gun Materials</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/set-gun-materials_ojv5jx.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/set-gun-materials_ojv5jx.png\" alt=\"Event Graph Animation BP\" title=\"Event Graph Animation BP\"></a></p>\n<h3>Simple BP for Making a Glowing Red Material</h3>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/red-glow-material_jtrrjh.png\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/red-glow-material_jtrrjh.png\" alt=\"Glowing Red BP\" title=\"Glowing Red BP\"></a></p>\n<p>Everything should be set. Compile the code and you should have working UI. Below is the final code.</p>\n<h3>CampFire.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/BoxComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Particles/ParticleSystemComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CampFire.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> ACampFire <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">ACampFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tUParticleSystemComponent<span class=\"token operator\">*</span> Fire<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tUBoxComponent<span class=\"token operator\">*</span> MyBoxComponent<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tTSubclassOf<span class=\"token operator\">&lt;</span>UDamageType<span class=\"token operator\">></span> FireDamageType<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tAActor<span class=\"token operator\">*</span> MyCharacter<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tFHitResult MyHit<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> bCanApplyDamage<span class=\"token punctuation\">;</span>\n\tFTimerHandle FireTimerHandle<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare overlap begin function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare overlap end function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">ApplyFireDamage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>CampFire.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CampFire.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"TimerManager.h\"</span></span>\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">ACampFire</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ACampFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tMyBoxComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UBoxComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My Box Component\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    MyBoxComponent<span class=\"token operator\">-></span><span class=\"token function\">InitBoxExtent</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">50.0f</span><span class=\"token punctuation\">,</span><span class=\"token number\">50.0f</span><span class=\"token punctuation\">,</span><span class=\"token number\">50.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    RootComponent <span class=\"token operator\">=</span> MyBoxComponent<span class=\"token punctuation\">;</span>\n\n    Fire <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UParticleSystemComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My Fire\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Fire<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Fire<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    MyBoxComponent<span class=\"token operator\">-></span>OnComponentBeginOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACampFire<span class=\"token double-colon punctuation\">::</span>OnOverlapBegin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    MyBoxComponent<span class=\"token operator\">-></span>OnComponentEndOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACampFire<span class=\"token double-colon punctuation\">::</span>OnOverlapEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    bCanApplyDamage <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACampFire</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> OtherComp <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        bCanApplyDamage <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        MyCharacter <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AActor<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        MyHit <span class=\"token operator\">=</span> SweepResult<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">GetWorldTimerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetTimer</span><span class=\"token punctuation\">(</span>FireTimerHandle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACampFire<span class=\"token double-colon punctuation\">::</span>ApplyFireDamage<span class=\"token punctuation\">,</span> <span class=\"token number\">2.2f</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACampFire</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    bCanApplyDamage <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GetWorldTimerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ClearTimer</span><span class=\"token punctuation\">(</span>FireTimerHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACampFire</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ApplyFireDamage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bCanApplyDamage<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ApplyPointDamage</span><span class=\"token punctuation\">(</span>MyCharacter<span class=\"token punctuation\">,</span> <span class=\"token number\">200.0f</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MyHit<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireDamageType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>MedKit.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MedKit.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> AMedKit <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">AMedKit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlap</span><span class=\"token punctuation\">(</span>AActor<span class=\"token operator\">*</span> MyOverlappedActor<span class=\"token punctuation\">,</span> AActor<span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tAUnrealCPPCharacter<span class=\"token operator\">*</span> MyCharacter<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>MedKit.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MedKit.h\"</span></span>\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">AMedKit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AMedKit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tOnActorBeginOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AMedKit<span class=\"token double-colon punctuation\">::</span>OnOverlap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AMedKit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlap</span><span class=\"token punctuation\">(</span>AActor<span class=\"token operator\">*</span> MyOverlappedActor<span class=\"token punctuation\">,</span> AActor<span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tMyCharacter <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPCharacter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MyCharacter <span class=\"token operator\">&amp;&amp;</span> MyCharacter<span class=\"token operator\">-></span><span class=\"token function\">GetHealth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tMyCharacter<span class=\"token operator\">-></span><span class=\"token function\">UpdateHealth</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>UnrealCPP.Build.cs</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">using</span> UnrealBuildTool<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UnrealCPP</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token class-name\">ModuleRules</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token function\">UnrealCPP</span><span class=\"token punctuation\">(</span>ReadOnlyTargetRules Target<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">base</span><span class=\"token punctuation\">(</span>Target<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tPCHUsage <span class=\"token operator\">=</span> PCHUsageMode<span class=\"token punctuation\">.</span>UseExplicitOrSharedPCHs<span class=\"token punctuation\">;</span>\n\n\t\tPublicDependencyModuleNames<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"Core\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CoreUObject\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Engine\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"InputCore\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"HeadMountedDisplay\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UMG\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Slate\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SlateCore\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>UnrealCPPCharacter.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Character.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/TimelineComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/BoxComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.generated.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">=</span>Game<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPCharacter</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ACharacter</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">/** Pawn mesh: 1st person view (arms; seen only by self) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> Mesh1P<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Gun mesh: 1st person view (seen only by self) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> FP_Gun<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Location on gun mesh where projectiles should spawn. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USceneComponent</span><span class=\"token operator\">*</span> FP_MuzzleLocation<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Gun mesh: VR view (attached to the VR controller directly, no arm, just the actual gun) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> VR_Gun<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Location on VR gun mesh where projectiles should spawn. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USceneComponent</span><span class=\"token operator\">*</span> VR_MuzzleLocation<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** First person camera */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">,</span> meta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>AllowPrivateAccess <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UCameraComponent</span><span class=\"token operator\">*</span> FirstPersonCameraComponent<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Motion controller (right hand) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> meta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>AllowPrivateAccess <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UMotionControllerComponent</span><span class=\"token operator\">*</span> R_MotionController<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Motion controller (left hand) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> meta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>AllowPrivateAccess <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UMotionControllerComponent</span><span class=\"token operator\">*</span> L_MotionController<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// virtual float TakeDamage(float DamageAmount, struct FDamageEvent const &amp; DamageEvent, class AController * EventInstigator, AActor * DamageCauser);</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">/** Base turn rate, in deg/sec. Other scaling may affect final turn rate. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Camera<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> BaseTurnRate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Base look up/down rate, in deg/sec. Other scaling may affect final rate. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Camera<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> BaseLookUpRate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Gun muzzle's offset from the characters location */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Gameplay<span class=\"token punctuation\">)</span>\n\tFVector GunOffset<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Projectile class to spawn */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditDefaultsOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Projectile<span class=\"token punctuation\">)</span>\n\tTSubclassOf<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPProjectile</span><span class=\"token operator\">></span> ProjectileClass<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Sound to play each time we fire */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Gameplay<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USoundBase</span><span class=\"token operator\">*</span> FireSound<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** AnimMontage to play each time we fire */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Gameplay<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UAnimMontage</span><span class=\"token operator\">*</span> FireAnimation<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Whether to use motion controller location for aiming. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Gameplay<span class=\"token punctuation\">)</span>\n\tuint32 bUsingMotionControllers <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> FullHealth<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> Health<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> HealthPercentage<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> PreviousHealth<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> FullMagic<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> Magic<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> MagicPercentage<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> PreviousMagic<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> MagicValue<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> redFlash<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\tUCurveFloat <span class=\"token operator\">*</span>MagicCurve<span class=\"token punctuation\">;</span>\n\n\tFTimeline MyTimeline<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> CurveFloatValue<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> TimelineValue<span class=\"token punctuation\">;</span>\n\tFTimerHandle MemberTimerHandle<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> bCanUseMagic<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Get Health */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">GetHealth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Get Magic */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">GetMagic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Get Health Text */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\tFText <span class=\"token function\">GetHealthIntText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Get Magic Text */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\tFText <span class=\"token function\">GetMagicIntText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Damage Timer */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">DamageTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Damage State */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetDamageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Magic Value */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetMagicValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Damage State */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetMagicState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Damage State */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetMagicChange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> MagicChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Set Damage State */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">UpdateMagic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> MagicChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Play Flash */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">PlayFlash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UMaterialInterface</span><span class=\"token operator\">*</span> GunDefaultMaterial<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Magic\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UMaterialInterface</span><span class=\"token operator\">*</span> GunOverheatMaterial<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">ReceivePointDamage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Damage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> UDamageType <span class=\"token operator\">*</span> DamageType<span class=\"token punctuation\">,</span> FVector HitLocation<span class=\"token punctuation\">,</span> FVector HitNormal<span class=\"token punctuation\">,</span> UPrimitiveComponent <span class=\"token operator\">*</span> HitComponent<span class=\"token punctuation\">,</span> FName BoneName<span class=\"token punctuation\">,</span> FVector ShotFromDirection<span class=\"token punctuation\">,</span> AController <span class=\"token operator\">*</span> InstigatedBy<span class=\"token punctuation\">,</span> AActor <span class=\"token operator\">*</span> DamageCauser<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult <span class=\"token operator\">&amp;</span> HitInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintCallable<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Power\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">UpdateHealth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> HealthChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\n\t<span class=\"token comment\">/** Fires a projectile. */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Resets HMD orientation and position in VR. */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnResetVR</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Handles moving forward/backward */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Handles stafing movement, left and right */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * Called via input to turn at a given rate.\n\t * @param Rate\tThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate\n\t */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">TurnAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * Called via input to turn look up/down at a given rate.\n\t * @param Rate\tThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate\n\t */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">LookUpAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">TouchData</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">TouchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> bIsPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>Location<span class=\"token operator\">=</span>FVector<span class=\"token double-colon punctuation\">::</span>ZeroVector<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">bool</span> bIsPressed<span class=\"token punctuation\">;</span>\n\t\tETouchIndex<span class=\"token double-colon punctuation\">::</span>Type FingerIndex<span class=\"token punctuation\">;</span>\n\t\tFVector Location<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bMoved<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">BeginTouch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ETouchIndex<span class=\"token double-colon punctuation\">::</span>Type FingerIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FVector Location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">EndTouch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ETouchIndex<span class=\"token double-colon punctuation\">::</span>Type FingerIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FVector Location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">TouchUpdate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ETouchIndex<span class=\"token double-colon punctuation\">::</span>Type FingerIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FVector Location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTouchData\tTouchItem<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// APawn interface</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span>UInputComponent<span class=\"token operator\">*</span> InputComponent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// End of APawn interface</span>\n\n\t<span class=\"token comment\">/* \n\t * Configures input for touchscreen devices if there is a valid touch interface for doing so \n\t *\n\t * @param\tInputComponent\tThe input component pointer to bind controls to\n\t * @returns true if touch controls were enabled.\n\t */</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">EnableTouchscreenMovement</span><span class=\"token punctuation\">(</span>UInputComponent<span class=\"token operator\">*</span> InputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">/** Returns Mesh1P subobject **/</span>\n\tFORCEINLINE <span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> <span class=\"token function\">GetMesh1P</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Mesh1P<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">/** Returns FirstPersonCameraComponent subobject **/</span>\n\tFORCEINLINE <span class=\"token keyword\">class</span> <span class=\"token class-name\">UCameraComponent</span><span class=\"token operator\">*</span> <span class=\"token function\">GetFirstPersonCameraComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> FirstPersonCameraComponent<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>UnrealCPPCharacter.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPProjectile.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Animation/AnimInstance.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Camera/CameraComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/CapsuleComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/InputComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/InputSettings.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HeadMountedDisplayFunctionLibrary.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MotionControllerComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"XRMotionControllerBase.h\"</span> <span class=\"token comment\">// for FXRMotionControllerBase::RightHandSourceId</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/KismetMathLibrary.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"TimerManager.h\"</span></span>\n\n<span class=\"token function\">DEFINE_LOG_CATEGORY_STATIC</span><span class=\"token punctuation\">(</span>LogFPChar<span class=\"token punctuation\">,</span> Warning<span class=\"token punctuation\">,</span> All<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// AUnrealCPPCharacter</span>\n\n<span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Set size for collision capsule</span>\n\t<span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// set our turn rates for input</span>\n\tBaseTurnRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\tBaseLookUpRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a CameraComponent\t</span>\n\tFirstPersonCameraComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCameraComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FirstPersonCamera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">39.56f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.75f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Position the camera</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>bUsePawnControlRotation <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a mesh component that will be used when being viewed from a '1st person' view (when controlling this pawn)</span>\n\tMesh1P <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CharacterMesh1P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.9f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">19.19f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">155.7f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a gun mesh component</span>\n\tFP_Gun <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FP_Gun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// only the owning player will see this mesh</span>\n\tFP_Gun<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// FP_Gun->SetupAttachment(Mesh1P, TEXT(\"GripPoint\"));</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFP_MuzzleLocation <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USceneComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MuzzleLocation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FP_Gun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10.6f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Default offset from the character location for projectiles to spawn</span>\n\tGunOffset <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Note: The ProjectileClass and the skeletal mesh/anim blueprints for Mesh1P, FP_Gun, and VR_Gun </span>\n\t<span class=\"token comment\">// are set in the derived blueprint asset named MyCharacter to avoid direct content references in C++.</span>\n\n\t<span class=\"token comment\">// Create VR Controllers.</span>\n\tR_MotionController <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UMotionControllerComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R_MotionController\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tR_MotionController<span class=\"token operator\">-></span>MotionSource <span class=\"token operator\">=</span> FXRMotionControllerBase<span class=\"token double-colon punctuation\">::</span>RightHandSourceId<span class=\"token punctuation\">;</span>\n\tR_MotionController<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tL_MotionController <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UMotionControllerComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"L_MotionController\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tL_MotionController<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a gun and attach it to the right-hand VR controller.</span>\n\t<span class=\"token comment\">// Create a gun mesh component</span>\n\tVR_Gun <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VR_Gun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tVR_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// only the owning player will see this mesh</span>\n\tVR_Gun<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tVR_Gun<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tVR_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>R_MotionController<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tVR_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeRotation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">90.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tVR_MuzzleLocation <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USceneComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VR_MuzzleLocation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tVR_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>VR_Gun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tVR_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.000004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53.999992</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tVR_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeRotation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// Counteract the rotation of the VR gun model.</span>\n\n\t<span class=\"token comment\">// Uncomment the following line to turn motion controllers on by default:</span>\n\t<span class=\"token comment\">//bUsingMotionControllers = true;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Call the base class  </span>\n\tSuper<span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n\n\tFullHealth <span class=\"token operator\">=</span> <span class=\"token number\">1000.0f</span><span class=\"token punctuation\">;</span>\n\tHealth <span class=\"token operator\">=</span> FullHealth<span class=\"token punctuation\">;</span>\n\tHealthPercentage <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">;</span>\n\tPreviousHealth <span class=\"token operator\">=</span> HealthPercentage<span class=\"token punctuation\">;</span>\n\tbCanBeDamaged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tFullMagic <span class=\"token operator\">=</span> <span class=\"token number\">100.0f</span><span class=\"token punctuation\">;</span>\n\tMagic <span class=\"token operator\">=</span> FullMagic<span class=\"token punctuation\">;</span>\n\tMagicPercentage <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">;</span>\n\tPreviousMagic <span class=\"token operator\">=</span> MagicPercentage<span class=\"token punctuation\">;</span>\n\tMagicValue <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tbCanUseMagic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MagicCurve<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        FOnTimelineFloat TimelineCallback<span class=\"token punctuation\">;</span>\n        FOnTimelineEventStatic TimelineFinishedCallback<span class=\"token punctuation\">;</span>\n\n        TimelineCallback<span class=\"token punctuation\">.</span><span class=\"token function\">BindUFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">FName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SetMagicValue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TimelineFinishedCallback<span class=\"token punctuation\">.</span><span class=\"token function\">BindUFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FName<span class=\"token punctuation\">{</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SetMagicState\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        MyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">AddInterpFloat</span><span class=\"token punctuation\">(</span>MagicCurve<span class=\"token punctuation\">,</span> TimelineCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        MyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">SetTimelineFinishedFunc</span><span class=\"token punctuation\">(</span>TimelineFinishedCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//Attach gun mesh component to Skeleton, doing it here because the skeleton is not yet created in the constructor</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">AttachToComponent</span><span class=\"token punctuation\">(</span>Mesh1P<span class=\"token punctuation\">,</span> <span class=\"token function\">FAttachmentTransformRules</span><span class=\"token punctuation\">(</span>EAttachmentRule<span class=\"token double-colon punctuation\">::</span>SnapToTarget<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GripPoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Show or hide the two versions of the gun based on whether or not we're using motion controllers.</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bUsingMotionControllers<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tVR_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tVR_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tMyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">TickTimeline</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// Input</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> PlayerInputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// set up gameplay key bindings</span>\n\t<span class=\"token function\">check</span><span class=\"token punctuation\">(</span>PlayerInputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind jump events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>Jump<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Released<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>StopJumping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind fire event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fire\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnFire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Enable touchscreen input</span>\n\t<span class=\"token function\">EnableTouchscreenMovement</span><span class=\"token punctuation\">(</span>PlayerInputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ResetVR\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnResetVR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind movement events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveForward\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveForward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveRight\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// We have 2 versions of the rotation bindings to handle different kinds of devices differently</span>\n\t<span class=\"token comment\">// \"turn\" handles devices that provide an absolute delta, such as a mouse.</span>\n\t<span class=\"token comment\">// \"turnrate\" is for devices that we choose to treat as a rate of change, such as an analog joystick</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerYawInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TurnRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>TurnAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUp\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerPitchInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUpRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>LookUpAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// try and fire a projectile</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ProjectileClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsNearlyZero</span><span class=\"token punctuation\">(</span>Magic<span class=\"token punctuation\">,</span> <span class=\"token number\">0.001f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> bCanUseMagic<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tUWorld<span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> World <span class=\"token operator\">=</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>World <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bUsingMotionControllers<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">const</span> FRotator SpawnRotation <span class=\"token operator\">=</span> VR_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">const</span> FVector SpawnLocation <span class=\"token operator\">=</span> VR_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tWorld<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">SpawnActor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPProjectile<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>ProjectileClass<span class=\"token punctuation\">,</span> SpawnLocation<span class=\"token punctuation\">,</span> SpawnRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">const</span> FRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">// MuzzleOffset is in camera space, so transform it to world space before offsetting from the character location to find the final muzzle position</span>\n\t\t\t\t<span class=\"token keyword\">const</span> FVector SpawnLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token comment\">//Set Spawn Collision Handling Override</span>\n\t\t\t\tFActorSpawnParameters ActorSpawnParams<span class=\"token punctuation\">;</span>\n\t\t\t\tActorSpawnParams<span class=\"token punctuation\">.</span>SpawnCollisionHandlingOverride <span class=\"token operator\">=</span> ESpawnActorCollisionHandlingMethod<span class=\"token double-colon punctuation\">::</span>AdjustIfPossibleButDontSpawnIfColliding<span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token comment\">// spawn the projectile at the muzzle</span>\n\t\t\t\tWorld<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">SpawnActor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPProjectile<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>ProjectileClass<span class=\"token punctuation\">,</span> SpawnLocation<span class=\"token punctuation\">,</span> SpawnRotation<span class=\"token punctuation\">,</span> ActorSpawnParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token comment\">// try and play the sound if specified</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireSound <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlaySoundAtLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireSound<span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token comment\">// try and play a firing animation if specified</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireAnimation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token comment\">// Get the animation object for the arms mesh</span>\n\t\t\t\t\tUAnimInstance<span class=\"token operator\">*</span> AnimInstance <span class=\"token operator\">=</span> Mesh1P<span class=\"token operator\">-></span><span class=\"token function\">GetAnimInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AnimInstance <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t\tAnimInstance<span class=\"token operator\">-></span><span class=\"token function\">Montage_Play</span><span class=\"token punctuation\">(</span>FireAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token function\">SetMagicChange</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">20.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnResetVR</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">UHeadMountedDisplayFunctionLibrary</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ResetOrientationAndPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginTouch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ETouchIndex<span class=\"token double-colon punctuation\">::</span>Type FingerIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FVector Location<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>TouchItem<span class=\"token punctuation\">.</span>bIsPressed <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FingerIndex <span class=\"token operator\">==</span> TouchItem<span class=\"token punctuation\">.</span>FingerIndex<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>TouchItem<span class=\"token punctuation\">.</span>bMoved <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tTouchItem<span class=\"token punctuation\">.</span>bIsPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tTouchItem<span class=\"token punctuation\">.</span>FingerIndex <span class=\"token operator\">=</span> FingerIndex<span class=\"token punctuation\">;</span>\n\tTouchItem<span class=\"token punctuation\">.</span>Location <span class=\"token operator\">=</span> Location<span class=\"token punctuation\">;</span>\n\tTouchItem<span class=\"token punctuation\">.</span>bMoved <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">EndTouch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ETouchIndex<span class=\"token double-colon punctuation\">::</span>Type FingerIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FVector Location<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>TouchItem<span class=\"token punctuation\">.</span>bIsPressed <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tTouchItem<span class=\"token punctuation\">.</span>bIsPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Commenting this section out to be consistent with FPS BP template.</span>\n<span class=\"token comment\">//This allows the user to turn without using the right virtual joystick</span>\n\n<span class=\"token comment\">//void AUnrealCPPCharacter::TouchUpdate(const ETouchIndex::Type FingerIndex, const FVector Location)</span>\n<span class=\"token comment\">//{</span>\n<span class=\"token comment\">//\tif ((TouchItem.bIsPressed == true) &amp;&amp; (TouchItem.FingerIndex == FingerIndex))</span>\n<span class=\"token comment\">//\t{</span>\n<span class=\"token comment\">//\t\tif (TouchItem.bIsPressed)</span>\n<span class=\"token comment\">//\t\t{</span>\n<span class=\"token comment\">//\t\t\tif (GetWorld() != nullptr)</span>\n<span class=\"token comment\">//\t\t\t{</span>\n<span class=\"token comment\">//\t\t\t\tUGameViewportClient* ViewportClient = GetWorld()->GetGameViewport();</span>\n<span class=\"token comment\">//\t\t\t\tif (ViewportClient != nullptr)</span>\n<span class=\"token comment\">//\t\t\t\t{</span>\n<span class=\"token comment\">//\t\t\t\t\tFVector MoveDelta = Location - TouchItem.Location;</span>\n<span class=\"token comment\">//\t\t\t\t\tFVector2D ScreenSize;</span>\n<span class=\"token comment\">//\t\t\t\t\tViewportClient->GetViewportSize(ScreenSize);</span>\n<span class=\"token comment\">//\t\t\t\t\tFVector2D ScaledDelta = FVector2D(MoveDelta.X, MoveDelta.Y) / ScreenSize;</span>\n<span class=\"token comment\">//\t\t\t\t\tif (FMath::Abs(ScaledDelta.X) >= 4.0 / ScreenSize.X)</span>\n<span class=\"token comment\">//\t\t\t\t\t{</span>\n<span class=\"token comment\">//\t\t\t\t\t\tTouchItem.bMoved = true;</span>\n<span class=\"token comment\">//\t\t\t\t\t\tfloat Value = ScaledDelta.X * BaseTurnRate;</span>\n<span class=\"token comment\">//\t\t\t\t\t\tAddControllerYawInput(Value);</span>\n<span class=\"token comment\">//\t\t\t\t\t}</span>\n<span class=\"token comment\">//\t\t\t\t\tif (FMath::Abs(ScaledDelta.Y) >= 4.0 / ScreenSize.Y)</span>\n<span class=\"token comment\">//\t\t\t\t\t{</span>\n<span class=\"token comment\">//\t\t\t\t\t\tTouchItem.bMoved = true;</span>\n<span class=\"token comment\">//\t\t\t\t\t\tfloat Value = ScaledDelta.Y * BaseTurnRate;</span>\n<span class=\"token comment\">//\t\t\t\t\t\tAddControllerPitchInput(Value);</span>\n<span class=\"token comment\">//\t\t\t\t\t}</span>\n<span class=\"token comment\">//\t\t\t\t\tTouchItem.Location = Location;</span>\n<span class=\"token comment\">//\t\t\t\t}</span>\n<span class=\"token comment\">//\t\t\t\tTouchItem.Location = Location;</span>\n<span class=\"token comment\">//\t\t\t}</span>\n<span class=\"token comment\">//\t\t}</span>\n<span class=\"token comment\">//\t}</span>\n<span class=\"token comment\">//}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRightVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TurnAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerYawInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseTurnRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">LookUpAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerPitchInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseLookUpRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">EnableTouchscreenMovement</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> PlayerInputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FPlatformMisc</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SupportsTouchInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token generic-function\"><span class=\"token function\">GetDefault</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UInputSettings<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>bUseMouseForTouch<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindTouch</span><span class=\"token punctuation\">(</span>EInputEvent<span class=\"token double-colon punctuation\">::</span>IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>BeginTouch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindTouch</span><span class=\"token punctuation\">(</span>EInputEvent<span class=\"token double-colon punctuation\">::</span>IE_Released<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>EndTouch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">//Commenting this out to be more consistent with FPS BP template.</span>\n\t\t<span class=\"token comment\">//PlayerInputComponent->BindTouch(EInputEvent::IE_Repeat, this, &amp;AUnrealCPPCharacter::TouchUpdate);</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetHealth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> HealthPercentage<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetMagic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> MagicPercentage<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nFText <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetHealthIntText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tint32 HP <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RoundHalfFromZero</span><span class=\"token punctuation\">(</span>HealthPercentage <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString HPS <span class=\"token operator\">=</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromInt</span><span class=\"token punctuation\">(</span>HP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString HealthHUD <span class=\"token operator\">=</span> HPS <span class=\"token operator\">+</span> <span class=\"token function\">FString</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFText HPText <span class=\"token operator\">=</span> <span class=\"token class-name\">FText</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromString</span><span class=\"token punctuation\">(</span>HealthHUD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> HPText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nFText <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetMagicIntText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tint32 MP <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RoundHalfFromZero</span><span class=\"token punctuation\">(</span>MagicPercentage<span class=\"token operator\">*</span>FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString MPS <span class=\"token operator\">=</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromInt</span><span class=\"token punctuation\">(</span>MP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString FullMPS <span class=\"token operator\">=</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromInt</span><span class=\"token punctuation\">(</span>FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFString MagicHUD <span class=\"token operator\">=</span> MPS <span class=\"token operator\">+</span> <span class=\"token function\">FString</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> FullMPS<span class=\"token punctuation\">;</span>\n\tFText MPText <span class=\"token operator\">=</span> <span class=\"token class-name\">FText</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromString</span><span class=\"token punctuation\">(</span>MagicHUD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> MPText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetDamageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tbCanBeDamaged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DamageTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GetWorldTimerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetTimer</span><span class=\"token punctuation\">(</span>MemberTimerHandle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>SetDamageState<span class=\"token punctuation\">,</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetMagicValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tTimelineValue <span class=\"token operator\">=</span> MyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">GetPlaybackPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    CurveFloatValue <span class=\"token operator\">=</span> PreviousMagic <span class=\"token operator\">+</span> MagicValue<span class=\"token operator\">*</span>MagicCurve<span class=\"token operator\">-></span><span class=\"token function\">GetFloatValue</span><span class=\"token punctuation\">(</span>TimelineValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    MagicPercentage <span class=\"token operator\">=</span> CurveFloatValue<span class=\"token punctuation\">;</span>\n\tMagicPercentage <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>MagicPercentage<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetMagicState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tbCanUseMagic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tMagicValue <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>GunDefaultMaterial<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetMaterial</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> GunDefaultMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlayFlash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>redFlash<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tredFlash <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ReceivePointDamage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Damage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> UDamageType <span class=\"token operator\">*</span> DamageType<span class=\"token punctuation\">,</span> FVector HitLocation<span class=\"token punctuation\">,</span> FVector HitNormal<span class=\"token punctuation\">,</span> UPrimitiveComponent <span class=\"token operator\">*</span> HitComponent<span class=\"token punctuation\">,</span> FName BoneName<span class=\"token punctuation\">,</span> FVector ShotFromDirection<span class=\"token punctuation\">,</span> AController <span class=\"token operator\">*</span> InstigatedBy<span class=\"token punctuation\">,</span> AActor <span class=\"token operator\">*</span> DamageCauser<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult <span class=\"token operator\">&amp;</span> HitInfo<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tbCanBeDamaged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tredFlash <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">UpdateHealth</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>Damage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DamageTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">UpdateHealth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> HealthChange<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tHealth <span class=\"token operator\">+=</span> HealthChange<span class=\"token punctuation\">;</span>\n\tHealth <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>Health<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> FullHealth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPreviousHealth <span class=\"token operator\">=</span> HealthPercentage<span class=\"token punctuation\">;</span>\n\tHealthPercentage <span class=\"token operator\">=</span> Health<span class=\"token operator\">/</span>FullHealth<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">UpdateMagic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> MagicChange<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tMagic <span class=\"token operator\">+=</span> MagicChange<span class=\"token punctuation\">;</span>\n\tMagic <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>Magic<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPreviousMagic <span class=\"token operator\">=</span> MagicPercentage<span class=\"token punctuation\">;</span>\n\tMagicPercentage <span class=\"token operator\">=</span> Magic<span class=\"token operator\">/</span>FullMagic<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetMagicChange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> MagicChange<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tbCanUseMagic <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMagic <span class=\"token operator\">+=</span> MagicChange <span class=\"token punctuation\">;</span>\n\tMagic <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Clamp</span><span class=\"token punctuation\">(</span>Magic<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPreviousMagic <span class=\"token operator\">=</span> MagicPercentage<span class=\"token punctuation\">;</span>\n\tMagicValue <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>MagicChange<span class=\"token operator\">/</span>FullMagic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>GunOverheatMaterial<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetMaterial</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> GunOverheatMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tMyTimeline<span class=\"token punctuation\">.</span><span class=\"token function\">PlayFromStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>UnrealCPPGameMode.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">//enum to store the current state of gameplay</span>\n<span class=\"token function\">UENUM</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">enum</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EGamePlayState</span>\n<span class=\"token punctuation\">{</span>\n\tEPlaying<span class=\"token punctuation\">,</span>\n\tEGameOver<span class=\"token punctuation\">,</span>\n\tEUnknown\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span>minimalapi<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPGameMode</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AGameModeBase</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">AUnrealCPPGameMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\tAUnrealCPPCharacter<span class=\"token operator\">*</span> MyCharacter<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">/** Returns the current playing state */</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintPure<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\tEGamePlayState <span class=\"token function\">GetCurrentState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Sets a new playing state */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetCurrentState</span><span class=\"token punctuation\">(</span>EGamePlayState NewState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span> \n\t<span class=\"token comment\">/**Keeps track of the current playing state */</span>\n\tEGamePlayState CurrentState<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**Handle any function calls that rely upon changing the playing state of our game */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">HandleNewState</span><span class=\"token punctuation\">(</span>EGamePlayState NewState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>UnrealCPPGameMode.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPGameMode.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPHUD.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Engine/World.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UObject/ConstructorHelpers.h\"</span></span>\n\n<span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPGameMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">:</span> <span class=\"token function\">Super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// set default pawn class to our Blueprinted character</span>\n\t<span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FClassFinder<span class=\"token operator\">&lt;</span>APawn<span class=\"token operator\">></span> <span class=\"token function\">PlayerPawnClassFinder</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/FirstPersonCPP/Blueprints/FirstPersonCharacter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tDefaultPawnClass <span class=\"token operator\">=</span> PlayerPawnClassFinder<span class=\"token punctuation\">.</span>Class<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// use our custom HUD class</span>\n\tHUDClass <span class=\"token operator\">=</span> <span class=\"token class-name\">AUnrealCPPHUD</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StaticClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">SetCurrentState</span><span class=\"token punctuation\">(</span>EGamePlayState<span class=\"token double-colon punctuation\">::</span>EPlaying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tMyCharacter <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPCharacter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetPlayerPawn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetMapName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MyCharacter<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsNearlyZero</span><span class=\"token punctuation\">(</span>MyCharacter<span class=\"token operator\">-></span><span class=\"token function\">GetHealth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">SetCurrentState</span><span class=\"token punctuation\">(</span>EGamePlayState<span class=\"token double-colon punctuation\">::</span>EGameOver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nEGamePlayState <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetCurrentState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> CurrentState<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetCurrentState</span><span class=\"token punctuation\">(</span>EGamePlayState NewState<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tCurrentState <span class=\"token operator\">=</span> NewState<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">HandleNewState</span><span class=\"token punctuation\">(</span>CurrentState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPGameMode</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">HandleNewState</span><span class=\"token punctuation\">(</span>EGamePlayState NewState<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>NewState<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> EGamePlayState<span class=\"token double-colon punctuation\">::</span>EPlaying<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// do nothing</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// Unknown/default state</span>\n\t\t<span class=\"token keyword\">case</span> EGamePlayState<span class=\"token double-colon punctuation\">::</span>EGameOver<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OpenLevel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">FName</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// Unknown/default state</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> EGamePlayState<span class=\"token double-colon punctuation\">::</span>EUnknown<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// do nothing</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>UnrealCPPHUD.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once </span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/HUD.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPHUD.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPHUD</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AHUD</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">AUnrealCPPHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Primary draw call for the HUD */</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">DrawHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">/** Crosshair asset pointer */</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UTexture2D</span><span class=\"token operator\">*</span> CrosshairTex<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\tTSubclassOf<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UUserWidget</span><span class=\"token operator\">></span> HUDWidgetClass<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UUserWidget</span><span class=\"token operator\">*</span> CurrentWidget<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>UnrealCPPHUD.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPHUD.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Engine/Canvas.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Engine/Texture2D.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"TextureResource.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CanvasItem.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UObject/ConstructorHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Blueprint/UserWidget.h\"</span></span>\n\n\n<span class=\"token class-name\">AUnrealCPPHUD</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Set the crosshair texture</span>\n\t<span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UTexture2D<span class=\"token operator\">></span> <span class=\"token function\">CrosshairTexObj</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/FirstPerson/Textures/FirstPersonCrosshair\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tCrosshairTex <span class=\"token operator\">=</span> CrosshairTexObj<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FClassFinder<span class=\"token operator\">&lt;</span>UUserWidget<span class=\"token operator\">></span> <span class=\"token function\">HealthBarObj</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/FirstPerson/UI/Health_UI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tHUDWidgetClass <span class=\"token operator\">=</span> HealthBarObj<span class=\"token punctuation\">.</span>Class<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPHUD</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DrawHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DrawHUD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Draw very simple crosshair</span>\n\n\t<span class=\"token comment\">// find center of the Canvas</span>\n\t<span class=\"token keyword\">const</span> FVector2D <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>Canvas<span class=\"token operator\">-></span>ClipX <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> Canvas<span class=\"token operator\">-></span>ClipY <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// offset by half the texture's dimensions so that the center of the texture aligns with the center of the Canvas</span>\n\t<span class=\"token keyword\">const</span> FVector2D <span class=\"token function\">CrosshairDrawPosition</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>Center<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t   <span class=\"token punctuation\">(</span>Center<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">+</span> <span class=\"token number\">20.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// draw the crosshair</span>\n\tFCanvasTileItem <span class=\"token function\">TileItem</span><span class=\"token punctuation\">(</span> CrosshairDrawPosition<span class=\"token punctuation\">,</span> CrosshairTex<span class=\"token operator\">-></span>Resource<span class=\"token punctuation\">,</span> FLinearColor<span class=\"token double-colon punctuation\">::</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTileItem<span class=\"token punctuation\">.</span>BlendMode <span class=\"token operator\">=</span> SE_BLEND_Translucent<span class=\"token punctuation\">;</span>\n\tCanvas<span class=\"token operator\">-></span><span class=\"token function\">DrawItem</span><span class=\"token punctuation\">(</span> TileItem <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPHUD</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HUDWidgetClass <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentWidget <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateWidget</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UUserWidget<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> HUDWidgetClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CurrentWidget<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tCurrentWidget<span class=\"token operator\">-></span><span class=\"token function\">AddToViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Health Bar and UI HUD","date":"May 16, 2018","description":"In this tutorial we'll learn how to create a health bar while applying damage.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/health-bar-ui_ypjozf.jpg","tags":["advanced"],"video":"Nt4W1B8cKy8","uev":"4.19.2"}},"previous":{"fields":{"slug":"/camera-shake/"},"frontmatter":{"title":"Camera Shake"}},"next":null},"pageContext":{"id":"7f9589e8-32ff-523b-b1e8-ba84e881f52b","previousPostId":"07e08212-faf1-5996-b349-0a14d4fb6d4f","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}