{"componentChunkName":"component---src-templates-blog-post-js","path":"/light-switch-push-button/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"b9549098-1ce6-5a99-95ae-e70d71dc6ca5","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/LightSwitchPushButton For this tutorial we are using the standard first person C++ template withâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/LightSwitchPushButton\">https://github.com/Harrison1/unrealcpp/tree/master/LightSwitchPushButton</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content. If you don't know how to add a new actor class to your project, please visit the <a href=\"/add-actor-class\">Add C++ Actor Class</a> post.</em></p>\n<p>Create a new <code>C++</code> actor class and call it <code>LightSwitchPushButton</code>. We are going to define four variables in the header file. We are going to define a <code>UPointLightComponent</code>, <code>USphereComponent</code>, <code>float</code>, and <code>void</code> function. Below is the final header code.</p>\n<h3>LightSwitchPushButton.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"LightSwitchPushButton.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> ALightSwitchPushButton <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">ALightSwitchPushButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token comment\">// virtual void Tick(float DeltaTime) override;</span>\n\n\t<span class=\"token comment\">// declare point light comp</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Light Switch\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UPointLightComponent</span><span class=\"token operator\">*</span> PointLight<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare sphere comp</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Light Switch\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USphereComponent</span><span class=\"token operator\">*</span> LightSphere<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare light intensity variable</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Light Switch\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> LightIntensity<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare ToggleLight function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span>BlueprintCallable<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Light Switch\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">ToggleLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Next, in our <code>.cpp</code> file let's first <code>#include</code> the necessary scripts we'll be using in our code. Include the <code>Components/PointLightComponent.h</code> and <code>Components/SphereComponent.h</code> files.</p>\n<h4>include header files</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"LightSwitchPushButton.h\"</span></span>\n<span class=\"token comment\">// include these header files</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/PointLightComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/SphereComponent.h\"</span></span></code></pre></div>\n<p>We'll setup all the default properties of the actor in its init function. First let's set our float, <code>LightIntensity</code> to <code>3000.0f</code>, it will make the light bright enough to see it against objects. Next, we'll create our <code>UPointLightComponent</code> and set it as our <code>RootComponent</code>. After that we'll create our <code>USphereComponent</code> that will serve as the collision sphere for when our player get's inside the radius. Then, we'll create the simple <code>ToggleLight()</code> function that will toggle the light's visibility state. We'll call the the function from the the character script later on. Below is the final <code>.cpp</code> file for the <code>LightSwitchPushButton</code> actor.</p>\n<h3>LightSwitchPushButton.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"LightSwitchPushButton.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/PointLightComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/SphereComponent.h\"</span></span>\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">ALightSwitchPushButton</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ALightSwitchPushButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tLightIntensity <span class=\"token operator\">=</span> <span class=\"token number\">3000.0f</span><span class=\"token punctuation\">;</span>\n\n\tPointLight <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UPointLightComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Point Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPointLight<span class=\"token operator\">-></span>Intensity <span class=\"token operator\">=</span> LightIntensity<span class=\"token punctuation\">;</span>\n\tPointLight<span class=\"token operator\">-></span>bVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tRootComponent <span class=\"token operator\">=</span> PointLight<span class=\"token punctuation\">;</span>\n\n\tLightSphere <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USphereComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light Sphere Component\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tLightSphere<span class=\"token operator\">-></span><span class=\"token function\">InitSphereRadius</span><span class=\"token punctuation\">(</span><span class=\"token number\">300.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tLightSphere<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tLightSphere<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionResponseToChannel</span><span class=\"token punctuation\">(</span>ECC_Pawn<span class=\"token punctuation\">,</span> ECR_Ignore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tLightSphere<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called when the game starts or when spawned</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ALightSwitchPushButton</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ALightSwitchPushButton</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ToggleLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    PointLight<span class=\"token operator\">-></span><span class=\"token function\">ToggleVisibility</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, let's add an <code>Action</code> input to our project. In this case we are going to bind the <code>Action</code> input to our keyboard's <code>E</code> key. Go to Edit > Project Settings. Then select the Input option. Click the plus sign next to <code>Action Mappings</code>. Call the new input <code>Action</code> and select <code>E</code> from the dropdown menu.</p>\n<h4>open Edit > Project Settings</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/settings-input_bj3avm.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/project-settings_twfimr.jpg\" alt=\"project settings\" title=\"Project Settings\"></a></p>\n<h4>go to the Input options and a button press</h4>\n<p><a href=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/settings-input_bj3avm.jpg\"><img src=\"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/settings-input_bj3avm.jpg\" alt=\"input settings\" title=\"Input Settings\"></a></p>\n<p>In our Character.h file add the <code>OnAction</code> method under the <code>OnFire</code> method. My header file in this tutorial is called <code>UnrealCPPCharacter.h</code>, your file might be called something different.</p>\n<h4>add OnAction to the header file</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\n\t<span class=\"token comment\">/** Fires a projectile. */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// on action </span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We will have to also include our <code>LightSwitchPushButton</code> header file so our character can access its functions.</p>\n<h4>include LightSwitchPushButton</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Character.h\"</span></span>\n<span class=\"token comment\">// include our new LightSwitchPushButton header file</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"LightSwitchPushButton/LightSwitchPushButton.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.generated.h\"</span></span></code></pre></div>\n<p>Then declare a variable for the light switch the player is currently overlapping. Also, we will need to declare overlap events to trigger the functions we want to run when the player is inside the radius of the light's sphere component.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// declare overlap begin function</span>\n<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// declare overlap end function</span>\n<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// declare current light switch</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ALightSwitchPushButton</span><span class=\"token operator\">*</span> CurrentLightSwitch<span class=\"token punctuation\">;</span></code></pre></div>\n<p>We are also going to have to declare a <code>UCapsuleComponent</code> to handle our trigger events.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Trigger Capsule\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UCapsuleComponent</span><span class=\"token operator\">*</span> TriggerCapsule<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Inside the init function add the trigger capsule and connect bind it to the overlap events. Them, set the variable <code>CurrentLightSwitch</code> to <code>NULL</code>.</p>\n<h4>setup up trigger capsule and variable</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">// create trigger capsule</span>\n    TriggerCapsule <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCapsuleComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger Capsule\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    TriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// bind trigger events</span>\n    TriggerCapsule<span class=\"token operator\">-></span>OnComponentBeginOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnOverlapBegin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    TriggerCapsule<span class=\"token operator\">-></span>OnComponentEndOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnOverlapEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n     <span class=\"token comment\">// set current light switch to null</span>\n     CurrentLightSwitch <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Connect the <code>Action</code> input to the character</p>\n<h4>bind action input</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> PlayerInputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">// Bind action event</span>\n    PlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Action\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Add the <code>OnAction()</code> function to the character script. The function will check if a <code>CurrentLightSwitch</code> is <code>NULL</code> or not. If the <code>CurrentLightSwicth</code> is not <code>NULL</code>, then when the player presses the <code>Action</code> key, <code>E</code>, the light will toggle the light's visibility. Then, add the Overlap functions to set and unset <code>CurrentLightSwitch</code></p>\n<h4>OnAction and Overlap functions</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>CurrentLightSwitch<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentLightSwitch<span class=\"token operator\">-></span><span class=\"token function\">ToggleLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// overlap on begin function</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> OtherComp <span class=\"token operator\">&amp;&amp;</span> OtherActor<span class=\"token operator\">-></span><span class=\"token function\">GetClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">IsChildOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ALightSwitchPushButton</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StaticClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentLightSwitch <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ALightSwitchPushButton<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token comment\">// overlap on end function</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> OtherComp<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentLightSwitch <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Compile the code. Drag and drop the actor into the scene and when the character enter's the radius and pushes <code>E</code> the light will turn off and on.</p>\n<h3>UnrealCPPCharacter.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPProjectile.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Animation/AnimInstance.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Camera/CameraComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/CapsuleComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/SphereComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/InputComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/InputSettings.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HeadMountedDisplayFunctionLibrary.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MotionControllerComponent.h\"</span></span>\n\n<span class=\"token function\">DEFINE_LOG_CATEGORY_STATIC</span><span class=\"token punctuation\">(</span>LogFPChar<span class=\"token punctuation\">,</span> Warning<span class=\"token punctuation\">,</span> All<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// AUnrealCPPCharacter</span>\n\n<span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Set size for collision capsule</span>\n\t<span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// set our turn rates for input</span>\n\tBaseTurnRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\tBaseLookUpRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a CameraComponent\t</span>\n\tFirstPersonCameraComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCameraComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FirstPersonCamera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">39.56f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.75f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Position the camera</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>bUsePawnControlRotation <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a mesh component that will be used when being viewed from a '1st person' view (when controlling this pawn)</span>\n\tMesh1P <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CharacterMesh1P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.9f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">19.19f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">155.7f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a gun mesh component</span>\n\tFP_Gun <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FP_Gun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// only the owning player will see this mesh</span>\n\tFP_Gun<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// FP_Gun->SetupAttachment(Mesh1P, TEXT(\"GripPoint\"));</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFP_MuzzleLocation <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USceneComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MuzzleLocation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FP_Gun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10.6f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Default offset from the character location for projectiles to spawn</span>\n\tGunOffset <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Note: The ProjectileClass and the skeletal mesh/anim blueprints for Mesh1P, FP_Gun, and VR_Gun </span>\n\t<span class=\"token comment\">// are set in the derived blueprint asset named MyCharacter to avoid direct content references in C++.</span>\n\n\t<span class=\"token comment\">// create trigger capsule</span>\n\tTriggerCapsule <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCapsuleComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger Capsule\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\tTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// bind trigger events</span>\n\tTriggerCapsule<span class=\"token operator\">-></span>OnComponentBeginOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnOverlapBegin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\tTriggerCapsule<span class=\"token operator\">-></span>OnComponentEndOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnOverlapEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n\t<span class=\"token comment\">// set current light switch to null</span>\n\tCurrentLightSwitch <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Call the base class  </span>\n\tSuper<span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//Attach gun mesh component to Skeleton, doing it here because the skeleton is not yet created in the constructor</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">AttachToComponent</span><span class=\"token punctuation\">(</span>Mesh1P<span class=\"token punctuation\">,</span> <span class=\"token function\">FAttachmentTransformRules</span><span class=\"token punctuation\">(</span>EAttachmentRule<span class=\"token double-colon punctuation\">::</span>SnapToTarget<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GripPoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// Input</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> PlayerInputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// set up gameplay key bindings</span>\n\t<span class=\"token function\">check</span><span class=\"token punctuation\">(</span>PlayerInputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind jump events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>Jump<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Released<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>StopJumping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind fire event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fire\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnFire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind action event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Action\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind movement events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveForward\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveForward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveRight\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// We have 2 versions of the rotation bindings to handle different kinds of devices differently</span>\n\t<span class=\"token comment\">// \"turn\" handles devices that provide an absolute delta, such as a mouse.</span>\n\t<span class=\"token comment\">// \"turnrate\" is for devices that we choose to treat as a rate of change, such as an analog joystick</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerYawInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TurnRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>TurnAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUp\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerPitchInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUpRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>LookUpAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// try and fire a projectile</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ProjectileClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tUWorld<span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> World <span class=\"token operator\">=</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>World <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> FRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// MuzzleOffset is in camera space, so transform it to world space before offsetting from the character location to find the final muzzle position</span>\n\t\t\t<span class=\"token keyword\">const</span> FVector SpawnLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">//Set Spawn Collision Handling Override</span>\n\t\t\tFActorSpawnParameters ActorSpawnParams<span class=\"token punctuation\">;</span>\n\t\t\tActorSpawnParams<span class=\"token punctuation\">.</span>SpawnCollisionHandlingOverride <span class=\"token operator\">=</span> ESpawnActorCollisionHandlingMethod<span class=\"token double-colon punctuation\">::</span>AdjustIfPossibleButDontSpawnIfColliding<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">// spawn the projectile at the muzzle</span>\n\t\t\tWorld<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">SpawnActor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPProjectile<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>ProjectileClass<span class=\"token punctuation\">,</span> SpawnLocation<span class=\"token punctuation\">,</span> SpawnRotation<span class=\"token punctuation\">,</span> ActorSpawnParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play the sound if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireSound <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlaySoundAtLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireSound<span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play a firing animation if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireAnimation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Get the animation object for the arms mesh</span>\n\t\tUAnimInstance<span class=\"token operator\">*</span> AnimInstance <span class=\"token operator\">=</span> Mesh1P<span class=\"token operator\">-></span><span class=\"token function\">GetAnimInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AnimInstance <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tAnimInstance<span class=\"token operator\">-></span><span class=\"token function\">Montage_Play</span><span class=\"token punctuation\">(</span>FireAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRightVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TurnAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerYawInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseTurnRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">LookUpAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerPitchInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseLookUpRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>CurrentLightSwitch<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentLightSwitch<span class=\"token operator\">-></span><span class=\"token function\">ToggleLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// overlap on begin function</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> OtherComp <span class=\"token operator\">&amp;&amp;</span> OtherActor<span class=\"token operator\">-></span><span class=\"token function\">GetClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">IsChildOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ALightSwitchPushButton</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StaticClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentLightSwitch <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ALightSwitchPushButton<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token comment\">// overlap on end function</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> OtherComp<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentLightSwitch <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Light Switch on Button Press","date":"December 02, 2017","description":"How to toggle a light switch when you press a button or a key.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/light-switch-button_cvzh0l.jpg","tags":["intermediate"],"video":"Ypc_LdTXr1Q","uev":"4.18.3"}},"previous":{"fields":{"slug":"/character-bind-button/"},"frontmatter":{"title":"Bind Button to Character"}},"next":{"fields":{"slug":"/rotate-angle-axis/"},"frontmatter":{"title":"Rotate Angle Axis"}}},"pageContext":{"id":"b9549098-1ce6-5a99-95ae-e70d71dc6ca5","previousPostId":"162e7ebf-8166-58f8-8216-1c857bc97d10","nextPostId":"57dbceb7-acc5-593a-8d01-f446ce3d792b"}},"staticQueryHashes":[],"slicesMap":{}}