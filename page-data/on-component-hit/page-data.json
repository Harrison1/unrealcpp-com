{"componentChunkName":"component---src-templates-blog-post-js","path":"/on-component-hit/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"d9974f2b-49e1-5a50-95bc-9052bd6be895","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/OnComponentHit For this tutorial we are using the standard first person C++ template withâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/OnComponentHit\">https://github.com/Harrison1/unrealcpp/tree/master/OnComponentHit</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content. If you don't know how to add a new actor class to your project, please visit the <a href=\"/add-actor-class\">Add C++ Actor Class</a> post.</em></p>\n<p>In this tutorial we will learn how to register a hit event on a component. Create a new <code>C++</code> actor class and call it <strong>OnComponentHit</strong>.  In the header file will declare a <code>UBoxComponent</code> variable and a <code>void</code> function to run when the component registers a hit. Below is the final header file.</p>\n<h3>OnHitComponent.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"OnComponentHit.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> AOnComponentHit <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">AOnComponentHit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UBoxComponent</span><span class=\"token operator\">*</span> MyComp<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnCompHit</span><span class=\"token punctuation\">(</span>UPrimitiveComponent<span class=\"token operator\">*</span> HitComp<span class=\"token punctuation\">,</span> AActor<span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> UPrimitiveComponent<span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> FVector NormalImpulse<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> Hit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In <code>.cpp</code> file first <code>#include</code> the <code>BoxComponent</code> header file.</p>\n<h4>include files</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"OnComponentHit.h\"</span></span>\n<span class=\"token comment\">// include files</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/BoxComponent.h\"</span></span></code></pre></div>\n<p>Next, we'll set the default values for our actor in the actor's init function. We'll initialize the actor with a <code>UBoxComponent</code> and set it as the <code>RootComponent</code>. Then, we'll add <code>OnComponentHit</code> to the component and connect it to our function <code>OnCompHit</code>. We'll make <code>OnCompHit</code> in the next step. I'm also setting the default <code>CollisionProfileName</code> to <code>BlockAllDynamic</code>, this can be changed later in the editor.</p>\n<h4>init function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">AOnComponentHit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AOnComponentHit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Use a sphere as a simple collision representation</span>\n\tMyComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UBoxComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BoxComp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMyComp<span class=\"token operator\">-></span><span class=\"token function\">SetSimulatePhysics</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    MyComp<span class=\"token operator\">-></span><span class=\"token function\">SetNotifyRigidBodyCollision</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\tMyComp<span class=\"token operator\">-></span>BodyInstance<span class=\"token punctuation\">.</span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BlockAllDynamic\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMyComp<span class=\"token operator\">-></span>OnComponentHit<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AOnComponentHit<span class=\"token double-colon punctuation\">::</span>OnCompHit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Set as root component</span>\n\tRootComponent <span class=\"token operator\">=</span> MyComp<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now let's create our simple <code>OnCompHit</code> function that will print to screen the other actor's name when our actor hits it. For more information on <code>OnComponentHit</code> you can visit some good AnswerHub posts <a href=\"https://answers.unrealengine.com/questions/429353/cpp-on-component-hit-doesnt-fire.html\">here</a> and <a href=\"https://answers.unrealengine.com/questions/429353/cpp-on-component-hit-doesnt-fire.html\">here</a> or visit the ue4 documentation <a href=\"https://docs.unrealengine.com/latest/INT/API/Runtime/Engine/Components/UPrimitiveComponent/OnComponentHit/\">here</a></p>\n<h4>OnCompHit</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AOnComponentHit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnCompHit</span><span class=\"token punctuation\">(</span>UPrimitiveComponent<span class=\"token operator\">*</span> HitComp<span class=\"token punctuation\">,</span> AActor<span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> UPrimitiveComponent<span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> FVector NormalImpulse<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> Hit<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherComp <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GEngine<span class=\"token punctuation\">)</span> GEngine<span class=\"token operator\">-></span><span class=\"token function\">AddOnScreenDebugMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.f</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Green<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I Hit: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>OtherActor<span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Below is the final <code>.cpp</code> file.</p>\n<h3>OnComponentHit.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"OnComponentHit.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/BoxComponent.h\"</span></span>\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">AOnComponentHit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AOnComponentHit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Use a sphere as a simple collision representation</span>\n\tMyComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UBoxComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BoxComp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMyComp<span class=\"token operator\">-></span><span class=\"token function\">SetSimulatePhysics</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMyComp<span class=\"token operator\">-></span><span class=\"token function\">SetNotifyRigidBodyCollision</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMyComp<span class=\"token operator\">-></span>BodyInstance<span class=\"token punctuation\">.</span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BlockAllDynamic\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMyComp<span class=\"token operator\">-></span>OnComponentHit<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AOnComponentHit<span class=\"token double-colon punctuation\">::</span>OnCompHit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Set as root component</span>\n\tRootComponent <span class=\"token operator\">=</span> MyComp<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called when the game starts or when spawned</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AOnComponentHit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AOnComponentHit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AOnComponentHit</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnCompHit</span><span class=\"token punctuation\">(</span>UPrimitiveComponent<span class=\"token operator\">*</span> HitComp<span class=\"token punctuation\">,</span> AActor<span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> UPrimitiveComponent<span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> FVector NormalImpulse<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> Hit<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherComp <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GEngine<span class=\"token punctuation\">)</span> GEngine<span class=\"token operator\">-></span><span class=\"token function\">AddOnScreenDebugMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.f</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Green<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I Hit: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>OtherActor<span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Compile the code. Drag and drop the actor into the game scene. Add a static mesh to the actor and fit inside the hit box. Now when you push play the actor should register the hit events.</p>","frontmatter":{"title":"Register Component Hit","date":"December 01, 2017","description":"Learn how to register a hit event on your component.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/on-hit-component_etggr8.jpg","tags":["hit"],"video":"BkV7bVcc2EM","uev":"4.18.3"}},"previous":{"fields":{"slug":"/timer-actor/"},"frontmatter":{"title":"Timer Actor"}},"next":{"fields":{"slug":"/sweep-multi-line-trace/"},"frontmatter":{"title":"Sweep Multi Line Trace"}}},"pageContext":{"id":"d9974f2b-49e1-5a50-95bc-9052bd6be895","previousPostId":"b0273a3d-94b9-5272-a29f-70c967804282","nextPostId":"ff2df7f8-e507-5022-b5e6-ff15ffba2b9c"}},"staticQueryHashes":[],"slicesMap":{}}