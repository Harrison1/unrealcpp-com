{"componentChunkName":"component---src-templates-blog-post-js","path":"/open-swing-door/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"255aa26b-c754-522e-a689-f9660903601b","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/SwingDoor For this tutorial we are using the standard first person C++ template with starterâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/SwingDoor\">https://github.com/Harrison1/unrealcpp/tree/master/SwingDoor</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content.</em></p>\n<p>In this Unreal Engine 4 C++ tutorial we will learn how to open a door depending on which way the player is facing and when a user presses an action key. Create a new <strong>actor</strong> class and call it whatever you want, in this tutorial I will call it <code>SwingDoor</code>.</p>\n<p>First, in the <code>.h</code> file we will create our variables. We'll create three <code>bool</code> variables to determine the state of the door and four<code>float</code> variables to set different numbers for the door. Next, we'll add in functions for toggling the door and building the door itself with a <code>UStaticMeshComponent</code> and <code>UBoxComponent</code>. All elements will be under the <code>public</code> section of the header file.</p>\n<h4>header variables and functions.</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">OpenDoor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">CloseDoor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UStaticMeshComponent</span><span class=\"token operator\">*</span> Door<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// declare sphere comp</span>\n<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"BoxComp\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UBoxComponent</span><span class=\"token operator\">*</span> BoxComp<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ToggleDoor</span><span class=\"token punctuation\">(</span>FVector ForwardVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">bool</span> Opening<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> Closing<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> isClosed<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">float</span> DotP<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> MaxDegree<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> AddRotation<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> PosNeg<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> DoorCurrentRotation<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, move into the <code>.cpp</code> file and <code>#include</code> the the following header files so we can access their properties later in the script.</p>\n<h4>include files</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ConstructorHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span></code></pre></div>\n<p>In the constructor function we will set our default variables, grab our door mesh and set up our box component. We are grabbing the door from the file name using <code>ConstructorHelpers::FObjectFinder</code> and then if we successfully grab the mesh we set its properties. We create the Box Component with <code>CreateDefaultSubobject</code> and then set its values.</p>\n<h4>constructor function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ASwingDoor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tBoxComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UBoxComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyBoxComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tBoxComp<span class=\"token operator\">-></span><span class=\"token function\">InitBoxExtent</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tBoxComp<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tRootComponent <span class=\"token operator\">=</span> BoxComp<span class=\"token punctuation\">;</span>\n\n\tDoor <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Door\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Door<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">DoorAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Props/SM_Door.SM_Door\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DoorAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Door<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>DoorAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Door<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50.0f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Door<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tisClosed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tDotP <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tMaxDegree <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tAddRotation <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tPosNeg <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tDoorCurrentRotation <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the <code>BeginPlay()</code> function we will simply just draw our debug box with <code>DrawDebugBox</code>.</p>\n<h4>BeginPlay function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">DrawDebugBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BoxComp<span class=\"token operator\">-></span><span class=\"token function\">GetScaledBoxExtent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">FQuat</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Turquoise<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the <code>Tick</code> function we will check if the door is opening or closing and depending on what is true we will run the <code>OpenDoor</code> or <code>CloseDoor</code> function. Both functions will take in the <code>DeltaTime</code> float for a smoots rotation.</p>\n<h4>tick function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Opening<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">OpenDoor</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Closing<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">CloseDoor</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, we will create our <code>OpenDoor</code> function. We pass the <code>DeltaTime</code> float from the <code>Tick</code> function. First, grab the Door's <code>Yaw</code> value with <code>Door->RelativeRotation.Yaw</code>. Then, we'll create our <code>AddRotation</code> float that will be how much rotation we add to the door on each frame. <code>PosNeg</code> is to determine a positive or negative value based on the player's location. We Set <code>PosNeg</code> later on the <code>ToggleDoor</code> function. If the the door's <code>Yaw</code> rotation value is nearly at our <code>MaxDegree</code> (we set the max degree variable later on), we want to set our <code>bool</code>s to false and prevent any further movement. but if the <code>Opening</code> is true, then add and set the relative rotation with for the door.</p>\n<h4>OpenDoor function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OpenDoor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> dt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tDoorCurrentRotation <span class=\"token operator\">=</span> Door<span class=\"token operator\">-></span>RelativeRotation<span class=\"token punctuation\">.</span>Yaw<span class=\"token punctuation\">;</span>\n\n\tAddRotation <span class=\"token operator\">=</span> PosNeg<span class=\"token operator\">*</span>dt<span class=\"token operator\">*</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsNearlyEqual</span><span class=\"token punctuation\">(</span>DoorCurrentRotation<span class=\"token punctuation\">,</span> MaxDegree<span class=\"token punctuation\">,</span> <span class=\"token number\">1.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Opening<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tFRotator NewRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> AddRotation<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tDoor<span class=\"token operator\">-></span><span class=\"token function\">AddRelativeRotation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FQuat</span><span class=\"token punctuation\">(</span>NewRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ETeleportType<span class=\"token double-colon punctuation\">::</span>None<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The <code>CloseDoor</code> function is very similar to the <code>OpenDoor</code> function with main different being that we need to check the door's current rotation first to determine how much rotation to add to the door.</p>\n<h4>CloseDoor function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CloseDoor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> dt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tDoorCurrentRotation <span class=\"token operator\">=</span> Door<span class=\"token operator\">-></span>RelativeRotation<span class=\"token punctuation\">.</span>Yaw<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>DoorCurrentRotation <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tAddRotation <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dt<span class=\"token operator\">*</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">else</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tAddRotation <span class=\"token operator\">=</span> dt<span class=\"token operator\">*</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsNearlyEqual</span><span class=\"token punctuation\">(</span>DoorCurrentRotation<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Closing<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tFRotator NewRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> AddRotation<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tDoor<span class=\"token operator\">-></span><span class=\"token function\">AddRelativeRotation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FQuat</span><span class=\"token punctuation\">(</span>NewRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ETeleportType<span class=\"token double-colon punctuation\">::</span>None<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code>ToggleDoor</code> function will be called from the character's script and set our <code>bool</code> variables and also determine if our player if in front or behind the door. We pass in the character's camera <code>ForwardVector</code> from the character script and from that we <code>DotProduct</code> from the <code>BoxComponent Forward Vector</code> and the <code>Camera Forward Vector</code>. If the <code>DotProduct</code> is positive, the player is in front of the door, if negative, the player is behind the door. Next, set <code>PosNeg</code> with <code>FMath::Sign</code> to return <code>1</code> or <code>-1</code> depending on whether the <code>DotProduct</code> is positive or negative. Next, set our <code>MaxDegree</code> to 90 or -90 depending on which direction we want the door to open.</p>\n<h4>ToggleDoor function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ToggleDoor</span><span class=\"token punctuation\">(</span>FVector ForwardVector<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// is the chacter in front or behind the door</span>\n\tDotP <span class=\"token operator\">=</span> <span class=\"token class-name\">FVector</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DotProduct</span><span class=\"token punctuation\">(</span>BoxComp<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ForwardVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// get 1 or -1 from the the dot product</span>\n\tPosNeg <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Sign</span><span class=\"token punctuation\">(</span>DotP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// degree to clamp at</span>\n\tMaxDegree <span class=\"token operator\">=</span> PosNeg<span class=\"token operator\">*</span><span class=\"token number\">90.0f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// toggle bools</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isClosed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tisClosed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tisClosed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now we have to move into the <code>Character.h</code> file. In this tutorial my file is called <code>UnrealCPPCharacter.h</code>. Include the <code>SwingDoor.h</code> file.</p>\n<h4>include SwingDoor</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SwingDoor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.generated.h\"</span></span></code></pre></div>\n<p>Then add in a <code>TriggerCapsule</code> and in <code>public</code> add a <code>SwingDoor</code> class and overlap functions. In <code>protected</code> add in an <code>OnAction</code> function.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">// create trigger capsule</span>\n<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Trigger Capsule\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UCapsuleComponent</span><span class=\"token operator\">*</span> TriggerCapsule<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">// declare overlap begin function</span>\n<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// declare overlap end function</span>\n<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token operator\">*</span> CurrentDoor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next move into the character <code>.cpp</code> file, my file is called <code>UnrealCPPCharacter.cpp</code>. In the constructor function, setup the <code>TriggerCapsule</code> and set the <code>CurrentDoor</code> to <code>NULL</code>.</p>\n<h4>add to constructor function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nTriggerCapsule <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCapsuleComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger Capsule\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\nTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bind trigger events</span>\nTriggerCapsule<span class=\"token operator\">-></span>OnComponentBeginOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnOverlapBegin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nTriggerCapsule<span class=\"token operator\">-></span>OnComponentEndOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnOverlapEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\nCurrentDoor <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the <code>SetupPlayerInputComponent</code> we want to bind our <code>Action</code> button to the <code>OnAction</code> function.</p>\n<h4>Setup action bind</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> PlayerInputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Bind action event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Action\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, let's create the <code>OnAction</code> function. If <code>CurrentDoor</code> is not <code>Null</code> get the first person camera's forward vector and then run the <code>CurrentDoor</code>'s <code>ToggleDoor</code> function.</p>\n<h4>OnAction function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n\tFVector ForwardVector <span class=\"token operator\">=</span> FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>CurrentDoor<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentDoor<span class=\"token operator\">-></span><span class=\"token function\">ToggleDoor</span><span class=\"token punctuation\">(</span>ForwardVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, setup the overlap functions to check and set <code>CurrentDoor</code>.</p>\n<h4>Overlap functions</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// overlap on begin function</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> OtherComp <span class=\"token operator\">&amp;&amp;</span> OtherActor<span class=\"token operator\">-></span><span class=\"token function\">GetClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">IsChildOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StaticClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentDoor <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ASwingDoor<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token comment\">// overlap on end function</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> OtherComp<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentDoor <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We are done with the code. Go into the editor and compile the code. Go to project settings and add in <code>Action</code> as in Engine Input and bind it your key choice. You will also wantt to add a collision box to the door mesh.</p>\n<p>The door is now active. Drag and drop the door into the game world and you are good to go.</p>\n<p>Below is the final code.</p>\n<h3>SwingDoor.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SwingDoor.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> ASwingDoor <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">ASwingDoor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OpenDoor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">CloseDoor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UStaticMeshComponent</span><span class=\"token operator\">*</span> Door<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare sphere comp</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"BoxComp\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UBoxComponent</span><span class=\"token operator\">*</span> BoxComp<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">ToggleDoor</span><span class=\"token punctuation\">(</span>FVector ForwardVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> Opening<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> Closing<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> isClosed<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> DotP<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> MaxDegree<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> AddRotation<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> PosNeg<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> DoorCurrentRotation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>SwingDoor.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SwingDoor.h\"</span></span>\n<span class=\"token comment\">// include header files</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ConstructorHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ASwingDoor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tBoxComp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UBoxComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyBoxComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tBoxComp<span class=\"token operator\">-></span><span class=\"token function\">InitBoxExtent</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tBoxComp<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tRootComponent <span class=\"token operator\">=</span> BoxComp<span class=\"token punctuation\">;</span>\n\n\tDoor <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UStaticMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Door\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Door<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> ConstructorHelpers<span class=\"token double-colon punctuation\">::</span>FObjectFinder<span class=\"token operator\">&lt;</span>UStaticMesh<span class=\"token operator\">></span> <span class=\"token function\">DoorAsset</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Game/StarterContent/Props/SM_Door.SM_Door\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DoorAsset<span class=\"token punctuation\">.</span><span class=\"token function\">Succeeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Door<span class=\"token operator\">-></span><span class=\"token function\">SetStaticMesh</span><span class=\"token punctuation\">(</span>DoorAsset<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Door<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50.0f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Door<span class=\"token operator\">-></span><span class=\"token function\">SetWorldScale3D</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tisClosed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tDotP <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tMaxDegree <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tAddRotation <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tPosNeg <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tDoorCurrentRotation <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called when the game starts or when spawned</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">DrawDebugBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BoxComp<span class=\"token operator\">-></span><span class=\"token function\">GetScaledBoxExtent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">FQuat</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Turquoise<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Opening<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">OpenDoor</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Closing<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">CloseDoor</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OpenDoor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> dt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tDoorCurrentRotation <span class=\"token operator\">=</span> Door<span class=\"token operator\">-></span>RelativeRotation<span class=\"token punctuation\">.</span>Yaw<span class=\"token punctuation\">;</span>\n\n\tAddRotation <span class=\"token operator\">=</span> PosNeg<span class=\"token operator\">*</span>dt<span class=\"token operator\">*</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsNearlyEqual</span><span class=\"token punctuation\">(</span>DoorCurrentRotation<span class=\"token punctuation\">,</span> MaxDegree<span class=\"token punctuation\">,</span> <span class=\"token number\">1.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Opening<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tFRotator NewRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> AddRotation<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tDoor<span class=\"token operator\">-></span><span class=\"token function\">AddRelativeRotation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FQuat</span><span class=\"token punctuation\">(</span>NewRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ETeleportType<span class=\"token double-colon punctuation\">::</span>None<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CloseDoor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> dt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tDoorCurrentRotation <span class=\"token operator\">=</span> Door<span class=\"token operator\">-></span>RelativeRotation<span class=\"token punctuation\">.</span>Yaw<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>DoorCurrentRotation <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tAddRotation <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dt<span class=\"token operator\">*</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">else</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tAddRotation <span class=\"token operator\">=</span> dt<span class=\"token operator\">*</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsNearlyEqual</span><span class=\"token punctuation\">(</span>DoorCurrentRotation<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Closing<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tFRotator NewRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> AddRotation<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tDoor<span class=\"token operator\">-></span><span class=\"token function\">AddRelativeRotation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FQuat</span><span class=\"token punctuation\">(</span>NewRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ETeleportType<span class=\"token double-colon punctuation\">::</span>None<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ToggleDoor</span><span class=\"token punctuation\">(</span>FVector ForwardVector<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// alternatively you can grab the froward vector from the character inside theis function, remember to #include \"GameFramework/Character.h\" and #include \"Camera/CameraComponent.h\" at the top of the script</span>\n\t<span class=\"token comment\">// ACharacter* OurPlayerController = UGameplayStatics::GetPlayerCharacter(this, 0);</span>\n\n\t<span class=\"token comment\">// UCameraComponent* PlayerCamera = OurPlayerController->FindComponentByClass&lt;UCameraComponent>();</span>\n\n\t<span class=\"token comment\">// FVector ForwardVector = PlayerCamera->GetForwardVector();</span>\n\n\t<span class=\"token comment\">// is the chacter in front or behind the door</span>\n\tDotP <span class=\"token operator\">=</span> <span class=\"token class-name\">FVector</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DotProduct</span><span class=\"token punctuation\">(</span>BoxComp<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ForwardVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// get 1 or -1 from the the dot product</span>\n\tPosNeg <span class=\"token operator\">=</span> <span class=\"token class-name\">FMath</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Sign</span><span class=\"token punctuation\">(</span>DotP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// degree to clamp at</span>\n\tMaxDegree <span class=\"token operator\">=</span> PosNeg<span class=\"token operator\">*</span><span class=\"token number\">90.0f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// toggle bools</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isClosed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tisClosed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tOpening <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tisClosed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tClosing <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>UnrealCPPCharacter.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Character.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SwingDoor/SwingDoor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.generated.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">=</span>Game<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPCharacter</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ACharacter</span></span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">/** Pawn mesh: 1st person view (arms; seen only by self) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> Mesh1P<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Gun mesh: 1st person view (seen only by self) */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> FP_Gun<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Location on gun mesh where projectiles should spawn. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleDefaultsOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Mesh<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USceneComponent</span><span class=\"token operator\">*</span> FP_MuzzleLocation<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** First person camera */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Camera<span class=\"token punctuation\">,</span> meta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>AllowPrivateAccess <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UCameraComponent</span><span class=\"token operator\">*</span> FirstPersonCameraComponent<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// create trigger capsule</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> <span class=\"token string\">\"Trigger Capsule\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UCapsuleComponent</span><span class=\"token operator\">*</span> TriggerCapsule<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Base turn rate, in deg/sec. Other scaling may affect final turn rate. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Camera<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> BaseTurnRate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Base look up/down rate, in deg/sec. Other scaling may affect final rate. */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>VisibleAnywhere<span class=\"token punctuation\">,</span> BlueprintReadOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Camera<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> BaseLookUpRate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Gun muzzle's offset from the characters location */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Gameplay<span class=\"token punctuation\">)</span>\n\tFVector GunOffset<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Projectile class to spawn */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditDefaultsOnly<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Projectile<span class=\"token punctuation\">)</span>\n\tTSubclassOf<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">AUnrealCPPProjectile</span><span class=\"token operator\">></span> ProjectileClass<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Sound to play each time we fire */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category<span class=\"token operator\">=</span>Gameplay<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">USoundBase</span><span class=\"token operator\">*</span> FireSound<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** AnimMontage to play each time we fire */</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> BlueprintReadWrite<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Gameplay<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">UAnimMontage</span><span class=\"token operator\">*</span> FireAnimation<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare overlap begin function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare overlap end function</span>\n\t<span class=\"token function\">UFUNCTION</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">ASwingDoor</span><span class=\"token operator\">*</span> CurrentDoor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\n\t<span class=\"token comment\">/** Fires a projectile. */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// on action </span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Handles moving forward/backward */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/** Handles stafing movement, left and right */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * Called via input to turn at a given rate.\n\t * @param Rate\tThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate\n\t */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">TurnAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * Called via input to turn look up/down at a given rate.\n\t * @param Rate\tThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate\n\t */</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">LookUpAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// APawn interface</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span>UInputComponent<span class=\"token operator\">*</span> InputComponent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// End of APawn interface</span>\n\tFORCEINLINE <span class=\"token keyword\">class</span> <span class=\"token class-name\">USkeletalMeshComponent</span><span class=\"token operator\">*</span> <span class=\"token function\">GetMesh1P</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Mesh1P<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">/** Returns FirstPersonCameraComponent subobject **/</span>\n\tFORCEINLINE <span class=\"token keyword\">class</span> <span class=\"token class-name\">UCameraComponent</span><span class=\"token operator\">*</span> <span class=\"token function\">GetFirstPersonCameraComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> FirstPersonCameraComponent<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>UnrealCPPCharacter.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPCharacter.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UnrealCPPProjectile.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Animation/AnimInstance.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Camera/CameraComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/CapsuleComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/SphereComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Components/InputComponent.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/InputSettings.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HeadMountedDisplayFunctionLibrary.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MotionControllerComponent.h\"</span></span>\n<span class=\"token comment\">// include draw debug helpers header file</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span>\n\n<span class=\"token function\">DEFINE_LOG_CATEGORY_STATIC</span><span class=\"token punctuation\">(</span>LogFPChar<span class=\"token punctuation\">,</span> Warning<span class=\"token punctuation\">,</span> All<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// AUnrealCPPCharacter</span>\n\n<span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AUnrealCPPCharacter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Set size for collision capsule</span>\n\t<span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// set our turn rates for input</span>\n\tBaseTurnRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\tBaseLookUpRate <span class=\"token operator\">=</span> <span class=\"token number\">45.f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a CameraComponent\t</span>\n\tFirstPersonCameraComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCameraComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FirstPersonCamera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetCapsuleComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">39.56f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.75f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Position the camera</span>\n\tFirstPersonCameraComponent<span class=\"token operator\">-></span>bUsePawnControlRotation <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a mesh component that will be used when being viewed from a '1st person' view (when controlling this pawn)</span>\n\tMesh1P <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CharacterMesh1P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FirstPersonCameraComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.9f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">19.19f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMesh1P<span class=\"token operator\">-></span>RelativeLocation <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">155.7f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Create a gun mesh component</span>\n\tFP_Gun <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USkeletalMeshComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FP_Gun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetOnlyOwnerSee</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// only the owning player will see this mesh</span>\n\tFP_Gun<span class=\"token operator\">-></span>bCastDynamicShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tFP_Gun<span class=\"token operator\">-></span>CastShadow <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// FP_Gun->SetupAttachment(Mesh1P, TEXT(\"GripPoint\"));</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tFP_MuzzleLocation <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>USceneComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MuzzleLocation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>FP_Gun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">SetRelativeLocation</span><span class=\"token punctuation\">(</span><span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48.4f</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10.6f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Default offset from the character location for projectiles to spawn</span>\n\tGunOffset <span class=\"token operator\">=</span> <span class=\"token function\">FVector</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Note: The ProjectileClass and the skeletal mesh/anim blueprints for Mesh1P, FP_Gun, and VR_Gun </span>\n\t<span class=\"token comment\">// are set in the derived blueprint asset named MyCharacter to avoid direct content references in C++.</span>\n\n\t<span class=\"token comment\">// create trigger capsule</span>\n\tTriggerCapsule <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateDefaultSubobject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>UCapsuleComponent<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger Capsule\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">InitCapsuleSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\tTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">SetCollisionProfileName</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trigger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTriggerCapsule<span class=\"token operator\">-></span><span class=\"token function\">SetupAttachment</span><span class=\"token punctuation\">(</span>RootComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// bind trigger events</span>\n\tTriggerCapsule<span class=\"token operator\">-></span>OnComponentBeginOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnOverlapBegin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\tTriggerCapsule<span class=\"token operator\">-></span>OnComponentEndOverlap<span class=\"token punctuation\">.</span><span class=\"token function\">AddDynamic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnOverlapEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n\tCurrentDoor <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Call the base class  </span>\n\tSuper<span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//Attach gun mesh component to Skeleton, doing it here because the skeleton is not yet created in the constructor</span>\n\tFP_Gun<span class=\"token operator\">-></span><span class=\"token function\">AttachToComponent</span><span class=\"token punctuation\">(</span>Mesh1P<span class=\"token punctuation\">,</span> <span class=\"token function\">FAttachmentTransformRules</span><span class=\"token punctuation\">(</span>EAttachmentRule<span class=\"token double-colon punctuation\">::</span>SnapToTarget<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GripPoint\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tMesh1P<span class=\"token operator\">-></span><span class=\"token function\">SetHiddenInGame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span>\n<span class=\"token comment\">// Input</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetupPlayerInputComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UInputComponent</span><span class=\"token operator\">*</span> PlayerInputComponent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// set up gameplay key bindings</span>\n\t<span class=\"token function\">check</span><span class=\"token punctuation\">(</span>PlayerInputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind jump events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>Jump<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jump\"</span><span class=\"token punctuation\">,</span> IE_Released<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ACharacter<span class=\"token double-colon punctuation\">::</span>StopJumping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind fire event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fire\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnFire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind action event</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Action\"</span><span class=\"token punctuation\">,</span> IE_Pressed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>OnAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Bind movement events</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveForward\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveForward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MoveRight\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>MoveRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// We have 2 versions of the rotation bindings to handle different kinds of devices differently</span>\n\t<span class=\"token comment\">// \"turn\" handles devices that provide an absolute delta, such as a mouse.</span>\n\t<span class=\"token comment\">// \"turnrate\" is for devices that we choose to treat as a rate of change, such as an analog joystick</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerYawInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TurnRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>TurnAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUp\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>APawn<span class=\"token double-colon punctuation\">::</span>AddControllerPitchInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPlayerInputComponent<span class=\"token operator\">-></span><span class=\"token function\">BindAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LookUpRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AUnrealCPPCharacter<span class=\"token double-colon punctuation\">::</span>LookUpAtRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnFire</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// try and fire a projectile</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ProjectileClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tUWorld<span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> World <span class=\"token operator\">=</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>World <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> FRotator SpawnRotation <span class=\"token operator\">=</span> <span class=\"token function\">GetControlRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// MuzzleOffset is in camera space, so transform it to world space before offsetting from the character location to find the final muzzle position</span>\n\t\t\t<span class=\"token keyword\">const</span> FVector SpawnLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>FP_MuzzleLocation <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FP_MuzzleLocation<span class=\"token operator\">-></span><span class=\"token function\">GetComponentLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> SpawnRotation<span class=\"token punctuation\">.</span><span class=\"token function\">RotateVector</span><span class=\"token punctuation\">(</span>GunOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">//Set Spawn Collision Handling Override</span>\n\t\t\tFActorSpawnParameters ActorSpawnParams<span class=\"token punctuation\">;</span>\n\t\t\tActorSpawnParams<span class=\"token punctuation\">.</span>SpawnCollisionHandlingOverride <span class=\"token operator\">=</span> ESpawnActorCollisionHandlingMethod<span class=\"token double-colon punctuation\">::</span>AdjustIfPossibleButDontSpawnIfColliding<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">// spawn the projectile at the muzzle</span>\n\t\t\tWorld<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">SpawnActor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AUnrealCPPProjectile<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>ProjectileClass<span class=\"token punctuation\">,</span> SpawnLocation<span class=\"token punctuation\">,</span> SpawnRotation<span class=\"token punctuation\">,</span> ActorSpawnParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play the sound if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireSound <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlaySoundAtLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> FireSound<span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// try and play a firing animation if specified</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>FireAnimation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Get the animation object for the arms mesh</span>\n\t\tUAnimInstance<span class=\"token operator\">*</span> AnimInstance <span class=\"token operator\">=</span> Mesh1P<span class=\"token operator\">-></span><span class=\"token function\">GetAnimInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AnimInstance <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tAnimInstance<span class=\"token operator\">-></span><span class=\"token function\">Montage_Play</span><span class=\"token punctuation\">(</span>FireAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">1.f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveForward</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MoveRight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Value <span class=\"token operator\">!=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// add movement in that direction</span>\n\t\t<span class=\"token function\">AddMovementInput</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetActorRightVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TurnAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerYawInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseTurnRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">LookUpAtRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> Rate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// calculate delta for this frame from the rate information</span>\n\t<span class=\"token function\">AddControllerPitchInput</span><span class=\"token punctuation\">(</span>Rate <span class=\"token operator\">*</span> BaseLookUpRate <span class=\"token operator\">*</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDeltaSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n\tFVector ForwardVector <span class=\"token operator\">=</span> FirstPersonCameraComponent<span class=\"token operator\">-></span><span class=\"token function\">GetForwardVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>CurrentDoor<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentDoor<span class=\"token operator\">-></span><span class=\"token function\">ToggleDoor</span><span class=\"token punctuation\">(</span>ForwardVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// overlap on begin function</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapBegin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFromSweep<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> FHitResult<span class=\"token operator\">&amp;</span> SweepResult<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> OtherComp <span class=\"token operator\">&amp;&amp;</span> OtherActor<span class=\"token operator\">-></span><span class=\"token function\">GetClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">IsChildOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ASwingDoor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StaticClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentDoor <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ASwingDoor<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>OtherActor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token comment\">// overlap on end function</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AUnrealCPPCharacter</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnOverlapEnd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OverlappedComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AActor</span><span class=\"token operator\">*</span> OtherActor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UPrimitiveComponent</span><span class=\"token operator\">*</span> OtherComp<span class=\"token punctuation\">,</span> int32 OtherBodyIndex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OtherActor <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> OtherComp<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">{</span>\n\t\tCurrentDoor <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Open Swing Door","date":"January 27, 2018","description":"In this tutorial we'll learn how to open a door depending on which way the player is facing when a user presses an action key.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/swing-door_jh0rhn.jpg","tags":["intermediate"],"video":"LfWpPjBMppg","uev":"4.18.3"}},"previous":{"fields":{"slug":"/change-material-mesh/"},"frontmatter":{"title":"Change Material Mesh"}},"next":{"fields":{"slug":"/open-door-with-lerp/"},"frontmatter":{"title":"Open Door With Lerp and Overlap"}}},"pageContext":{"id":"255aa26b-c754-522e-a689-f9660903601b","previousPostId":"afc961be-7765-5b11-af0e-87dbd0e399b9","nextPostId":"b94754aa-69f6-5053-a532-a9c1c53b1d2c"}},"staticQueryHashes":[],"slicesMap":{}}