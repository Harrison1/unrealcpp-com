{"componentChunkName":"component---src-templates-blog-post-js","path":"/rotating-actor/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"9393ec4d-a186-5e85-8f18-f5b10e6c56ec","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/RotatingActor For this tutorial we are using the standard first person C++ template with starterâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/RotatingActor\">https://github.com/Harrison1/unrealcpp/tree/master/RotatingActor</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content. If you don't know how to add a new actor class to your project, please visit the <a href=\"/add-actor-class\">Add C++ Actor Class</a> post.</em></p>\n<p>In this tutorial we are going to change an actor's rotation every frame. Create a new <code>C++</code> actor class and call it <strong>RotatingActor</strong>. In the header file we will create 3 float variables. We will set their <code>UPROPERTY</code> to <code>EditAnywhere</code> so we can change the values in the editor and we'll put all of the variables inside the <strong>Movement</strong> category to keep them together and separate from other attributes. Below is the final header script.</p>\n<h3>RotatingActor.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"RotatingActor.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> ARotatingActor <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">ARotatingActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare our float variables \t</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Movement<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> PitchValue<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Movement<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> YawValue<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">,</span> Category <span class=\"token operator\">=</span> Movement<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">float</span> RollValue<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the <code>.cpp</code> file set the default values to 0 for all the float variables.</p>\n<h4>set default values</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">ARotatingActor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ARotatingActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tPitchValue <span class=\"token operator\">=</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">;</span>\n\tYawValue <span class=\"token operator\">=</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">;</span>\n\tRollValue <span class=\"token operator\">=</span> <span class=\"token number\">0.f</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the <code>Tick</code> function create a new <code>FRotator</code> variable titled <code>NewRotation</code> and set it equal to our float variables we created earlier. Next, create an <code>FQuat</code> variable and set it equal to <code>NewRotatoin</code>. Then, all we have to do is run <code>AddActorLocalRotation</code> to have our actor spin in place. Below is the final <code>.cpp</code> code.</p>\n<h4>Tick function</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token operator\">/</span> Called every frame\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ARotatingActor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// on every frame change rotationg for a smooth rotating actor</span>\n\tFRotator NewRotation <span class=\"token operator\">=</span> <span class=\"token function\">FRotator</span><span class=\"token punctuation\">(</span>PitchValue<span class=\"token punctuation\">,</span> YawValue<span class=\"token punctuation\">,</span> RollValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tFQuat QuatRotation <span class=\"token operator\">=</span> <span class=\"token function\">FQuat</span><span class=\"token punctuation\">(</span>NewRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">AddActorLocalRotation</span><span class=\"token punctuation\">(</span>QuatRotation<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ETeleportType<span class=\"token double-colon punctuation\">::</span>None<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\">// The below method causes a bug for the pitch value. The pitch value stops updating at 90 degrees</span>\n\t<span class=\"token comment\">// this is a known bug in the Unreal Engine. </span>\n\t<span class=\"token comment\">// solution found by ue4 user nutellis https://answers.unrealengine.com/questions/591752/pitch-rotation-stucks-at-90-90-c.html</span>\n\n\t<span class=\"token comment\">// FRotator NewRotation = GetActorRotation();</span>\n\n\t<span class=\"token comment\">// NewRotation.Pitch += PitchValue;</span>\n\t<span class=\"token comment\">// NewRotation.Yaw += YawValue;</span>\n\t<span class=\"token comment\">// NewRotation.Roll += RollValue;</span>\n\t\n\t<span class=\"token comment\">// OR add values using the FRotator Add function</span>\n\t<span class=\"token comment\">// FRotator NewRotation = GetActorRotation().Add(PitchValue, YawValue, RollValue);</span>\n\n\n\t<span class=\"token comment\">// SetActorRotation(NewRotation);</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Compile the code. Drag and drop your new actor into your game. Add a static mesh component to the actor. Set a value for the <code>PitchValue</code> and then when you push play the actor will spin in place.</p>","frontmatter":{"title":"Rotating Actor","date":"December 01, 2017","description":"Learn how to rotate an actor every frame.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/rotating-actor_kuncdl.jpg","tags":["rotation"],"video":"ku61sRkcQHQ","uev":"4.18.3"}},"previous":{"fields":{"slug":"/set-actor-location-and-rotation/"},"frontmatter":{"title":"Set Actor Location and Rotation"}},"next":{"fields":{"slug":"/set-view-target/"},"frontmatter":{"title":"Set View Target"}}},"pageContext":{"id":"9393ec4d-a186-5e85-8f18-f5b10e6c56ec","previousPostId":"3542319c-e51d-513e-922e-3e9764575d09","nextPostId":"d31e479b-8034-5643-bd87-2bb2d48df198"}},"staticQueryHashes":[],"slicesMap":{}}