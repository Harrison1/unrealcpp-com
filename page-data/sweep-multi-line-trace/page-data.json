{"componentChunkName":"component---src-templates-blog-post-js","path":"/sweep-multi-line-trace/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"ff2df7f8-e507-5022-b5e6-ff15ffba2b9c","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/MySweepActor For this tutorial we are using the standard first person C++ template with starterâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/MySweepActor\">https://github.com/Harrison1/unrealcpp/tree/master/MySweepActor</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content. If you don't know how to add a new actor class to your project, please visit the <a href=\"/add-actor-class\">Add C++ Actor Class</a> post.</em></p>\n<p>This tutorial will illustrate how to use the <code>SweepMultiByChannel</code> to return the results hit inside a given radius.</p>\n<p>Create a new <code>C++</code> actor class and call it <strong>MySweepActor</strong>. We are not going to do anything to the header file. Below is the final header file script.</p>\n<h3>MySweepActor.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MySweepActor.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> AMySweepActor <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">AMySweepActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Before we get the logic of the code we have to first <code>#include</code> the <code>DrawDebugHelpers.h</code> file help us visualize our actor.</p>\n<h4>include helpers</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MySweepActor.h\"</span></span>\n<span class=\"token comment\">// include debug helpers</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span></code></pre></div>\n<p>For this example we are going to perform all of our logic in our <code>BeginPlay()</code> function. First we'll create a <code>TArray</code> of <code>FHitResults</code> and call it <strong>OutHits</strong>.  We want the sphere to start and stop in the same location and will make it equal the actor's location by using <code>GetActorLocation</code>. The Collision sphere can be different shapes, in this example we will make it a sphere by using <code>FCollisionShape::MakeSphere</code> and we'll set it's radius set to <code>500</code> unreal units. Next, run the <code>DrawDebugSphere</code> to visualize the sweeping sphere. Then, we want to set a <code>bool</code> called <strong>isHit</strong> to check if our sweep hit anything. We run <code>GetWorld()->SweepMultiByChannel</code> to perform the sweep channel trace and return the hit to the <code>OutHits</code> array. You can learn more about the <code>SweepMultiByChannel</code> function <a href=\"https://docs.unrealengine.com/latest/INT/API/Runtime/Engine/Engine/UWorld/SweepMultiByChannel/\">here</a>. If <code>isHit</code> is true we will loop through the <code>TArray</code> and print out the hit actor's name and other relevant information. You can learn more about <code>TArrays</code> <a href=\"https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/TArrays/\">here</a>.</p>\n<p>Below is the final <code>.cpp</code> file.</p>\n<h3>MySweepActor.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MySweepActor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"DrawDebugHelpers.h\"</span></span>\n\n\n<span class=\"token comment\">// Sets default values</span>\n<span class=\"token class-name\">AMySweepActor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AMySweepActor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n \t<span class=\"token comment\">// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.</span>\n\tPrimaryActorTick<span class=\"token punctuation\">.</span>bCanEverTick <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called when the game starts or when spawned</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AMySweepActor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// create tarray for hit results</span>\n\tTArray<span class=\"token operator\">&lt;</span>FHitResult<span class=\"token operator\">></span> OutHits<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// start and end locations</span>\n\tFVector SweepStart <span class=\"token operator\">=</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFVector SweepEnd <span class=\"token operator\">=</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// create a collision sphere</span>\n\tFCollisionShape MyColSphere <span class=\"token operator\">=</span> <span class=\"token class-name\">FCollisionShape</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MakeSphere</span><span class=\"token punctuation\">(</span><span class=\"token number\">500.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// draw collision sphere</span>\n\t<span class=\"token function\">DrawDebugSphere</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetActorLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MyColSphere<span class=\"token punctuation\">.</span><span class=\"token function\">GetSphereRadius</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Purple<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// check if something got hit in the sweep</span>\n\t<span class=\"token keyword\">bool</span> isHit <span class=\"token operator\">=</span> <span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">SweepMultiByChannel</span><span class=\"token punctuation\">(</span>OutHits<span class=\"token punctuation\">,</span> SweepStart<span class=\"token punctuation\">,</span> SweepEnd<span class=\"token punctuation\">,</span> FQuat<span class=\"token double-colon punctuation\">::</span>Identity<span class=\"token punctuation\">,</span> ECC_WorldStatic<span class=\"token punctuation\">,</span> MyColSphere<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isHit<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// loop through TArray</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> Hit <span class=\"token operator\">:</span> OutHits<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GEngine<span class=\"token punctuation\">)</span> \n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\">// screen log information on what was hit</span>\n\t\t\t\tGEngine<span class=\"token operator\">-></span><span class=\"token function\">AddOnScreenDebugMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.f</span><span class=\"token punctuation\">,</span> FColor<span class=\"token double-colon punctuation\">::</span>Green<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hit Result: %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>Hit<span class=\"token punctuation\">.</span>Actor<span class=\"token operator\">-></span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">// uncommnet to see more info on sweeped actor</span>\n\t\t\t\t<span class=\"token comment\">// GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, FString::Printf(TEXT(\"All Hit Information: %s\"), *Hit.ToString()));</span>\n\t\t\t<span class=\"token punctuation\">}</span>\t\t\t\t\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">AMySweepActor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Compile the code. Drag and drop the actor into your game and the sweep will output the results.</p>","frontmatter":{"title":"Sweep Multi Line Trace","date":"December 01, 2017","description":"How to create a sweep multi line trace that returns all the actors that the sphere hits.","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/sweep-actor_ht78xh.jpg","tags":["sweep","line trace"],"video":"Gu5f3-hFFfY","uev":"4.18.3"}},"previous":{"fields":{"slug":"/on-component-hit/"},"frontmatter":{"title":"Register Component Hit"}},"next":{"fields":{"slug":"/actor-line-trace/"},"frontmatter":{"title":"Actor Line Trace"}}},"pageContext":{"id":"ff2df7f8-e507-5022-b5e6-ff15ffba2b9c","previousPostId":"d9974f2b-49e1-5a50-95bc-9052bd6be895","nextPostId":"03fc56eb-efda-501c-8133-e80065dd72bf"}},"staticQueryHashes":[],"slicesMap":{}}