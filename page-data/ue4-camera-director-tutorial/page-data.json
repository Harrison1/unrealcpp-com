{"componentChunkName":"component---src-templates-blog-post-js","path":"/ue4-camera-director-tutorial/","result":{"data":{"site":{"siteMetadata":{"title":"Unreal C++"}},"markdownRemark":{"id":"a20bf503-e6c3-51fa-b62c-1e967a97233c","excerpt":"Github Link: https://github.com/Harrison1/unrealcpp/tree/master/CameraDirector For this tutorial we are using the standard first person C++ template withâ€¦","html":"<p><strong>Github Link: <a href=\"https://github.com/Harrison1/unrealcpp/tree/master/CameraDirector\">https://github.com/Harrison1/unrealcpp/tree/master/CameraDirector</a></strong></p>\n<p><em>For this tutorial we are using the standard first person C++ template with starter content. If you don't know how to add a new actor class to your project, please visit the <a href=\"/add-actor-class\">Add C++ Actor Class</a> post.</em></p>\n<p>This is a walkthrough tutorial for Epic's <a href=\"https://docs.unrealengine.com/latest/INT/Programming/Tutorials/AutoCamera/index.html\">Game-Controlled Camers tutorial</a>.</p>\n<p>Create a new actor called <code>CameraDirector</code>. Then add three variables to the header file. Add two camera actors that inherent from the actor class. Make the <code>UPROPERTY</code> <code>EditAnywhere</code> so we can add in actors in the editor. These two cameras will be the actors our view will switch between. Add a <code>float</code> variable so I can use it in the <code>.cpp</code> file. Below is the header file.</p>\n<h3>CameraDirector.h</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CoreMinimal.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GameFramework/Actor.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CameraDirector.generated.h\"</span></span>\n\n<span class=\"token function\">UCLASS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UNREALCPP_API</span> ACameraDirector <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> AActor\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GENERATED_BODY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Sets default values for this actor's properties</span>\n\t<span class=\"token function\">ACameraDirector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">// Called when the game starts or when spawned</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">BeginPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token comment\">// Called every frame</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// declare variables</span>\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tAActor<span class=\"token operator\">*</span> CameraOne<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">UPROPERTY</span><span class=\"token punctuation\">(</span>EditAnywhere<span class=\"token punctuation\">)</span>\n\tAActor<span class=\"token operator\">*</span> CameraTwo<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> TimeToNextCameraChange<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>First we want to add in the <code>Kismet/GameplayStatics.h</code> script to allow us to access the player controller.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"CameraDirector.h\"</span></span>\n<span class=\"token comment\">// include Kismet/GameplayStatics.h</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Kismet/GameplayStatics.h\"</span></span></code></pre></div>\n<p>The rest of the logic for this actor will be added to <code>Tick</code> function. Declare two float variables. These two float variables will manage the time between camera changes and the amount of time to smoothly blend between views.</p>\n<h4>add float variables</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token class-name\">ACameraDirector</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> TimeBetweenCameraChanges <span class=\"token operator\">=</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> SmoothBlendTime <span class=\"token operator\">=</span> <span class=\"token number\">0.75f</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, remove <code>DeltaTime</code> from the float variable we declared in our header file, <code>TimeToNextCameraChange</code>.</p>\n<h4>subtract DeltaTime from TimeToNextCameraChange</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACameraDirector</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> TimeBetweenCameraChanges <span class=\"token operator\">=</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> SmoothBlendTime <span class=\"token operator\">=</span> <span class=\"token number\">0.75f</span><span class=\"token punctuation\">;</span>\n\tTimeToNextCameraChange <span class=\"token operator\">-=</span> DeltaTime<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Afterwards, we want to check if <code>TimeToNextCameraChange</code> is less than or equal to 0. If <code>true</code> set <code>TimeToNextCameraChange</code> back to  2 seconds by adding <code>TimeBetweenCameraChanges</code> to it. Get the <code>PlayerController</code> by using the <code>UGameplayStatics</code> method <code>GetPlayerController</code>. By getting the <code>PlayerController</code>, we can set its view target. We check if the view target is <code>CameraOne</code> and depending on our result will switch cameras appropriately.</p>\n<h4>GetPlayerController</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">APlayerController<span class=\"token operator\">*</span> OurPlayerController <span class=\"token operator\">=</span> <span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetPlayerController</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>SetTargetWithBlend</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">OurPlayerController<span class=\"token operator\">-></span><span class=\"token function\">SetViewTargetWithBlend</span><span class=\"token punctuation\">(</span>CameraTwo<span class=\"token punctuation\">,</span> SmoothBlendTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>SetViewTarget</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">OurPlayerController<span class=\"token operator\">-></span><span class=\"token function\">SetViewTarget</span><span class=\"token punctuation\">(</span>CameraOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Below is the full <code>.cpp</code> file.</p>\n<h3>CameraDirector.cpp</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// Called every frame</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">ACameraDirector</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> DeltaTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Super</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Tick</span><span class=\"token punctuation\">(</span>DeltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> TimeBetweenCameraChanges <span class=\"token operator\">=</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> SmoothBlendTime <span class=\"token operator\">=</span> <span class=\"token number\">0.75f</span><span class=\"token punctuation\">;</span>\n\tTimeToNextCameraChange <span class=\"token operator\">-=</span> DeltaTime<span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>TimeToNextCameraChange <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        TimeToNextCameraChange <span class=\"token operator\">+=</span> TimeBetweenCameraChanges<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//Find the actor that handles control for the local player.</span>\n        APlayerController<span class=\"token operator\">*</span> OurPlayerController <span class=\"token operator\">=</span> <span class=\"token class-name\">UGameplayStatics</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetPlayerController</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>OurPlayerController<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CameraTwo <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>OurPlayerController<span class=\"token operator\">-></span><span class=\"token function\">GetViewTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> CameraOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">//Blend smoothly to camera two.</span>\n                OurPlayerController<span class=\"token operator\">-></span><span class=\"token function\">SetViewTargetWithBlend</span><span class=\"token punctuation\">(</span>CameraTwo<span class=\"token punctuation\">,</span> SmoothBlendTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CameraOne<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">//Cut instantly to camera one.</span>\n                OurPlayerController<span class=\"token operator\">-></span><span class=\"token function\">SetViewTarget</span><span class=\"token punctuation\">(</span>CameraOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Drag and drop the CameraDirector actor into the scene. Drag in two cameras (or any actors) into the scene and set them as <code>CameraOne</code> and <code>CameraTwo</code>. Now push play and see your view target go from one camera to the other.</p>","frontmatter":{"title":"Unreal Engine 4 Camera Director Tutorial","date":"December 02, 2017","description":"This is a walkthrough on how to complete Epic's Game-Controlled Cameras Tutorial","image":"https://res.cloudinary.com/dz09rnbhe/image/upload/unrealcpp/camera-director_bzw1mk.jpg","tags":["intermediate","ue4 tutorial"],"video":"wB3eBrf2xo8","uev":"4.18.3"}},"previous":{"fields":{"slug":"/floating-actor/"},"frontmatter":{"title":"Floating Actor"}},"next":{"fields":{"slug":"/receive-player-input/"},"frontmatter":{"title":"Receive Player Input"}}},"pageContext":{"id":"a20bf503-e6c3-51fa-b62c-1e967a97233c","previousPostId":"f68baafd-f147-57eb-be7d-97eaf921f58c","nextPostId":"0f6adfe9-e7e8-5150-84c8-fbd2883c4fbe"}},"staticQueryHashes":[],"slicesMap":{}}